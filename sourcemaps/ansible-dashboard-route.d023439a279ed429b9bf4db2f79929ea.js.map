{"version":3,"file":"js/ansible-dashboard-route.1651562240312.0af3c4dc5cae71073828.js","mappings":"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","sources":["webpack:///./src/utilities/constants.js","webpack:///./src/helpers/automation-hub/hub-helper.js","webpack:///./src/redux/actions/hub-actions.js","webpack:///./src/components/automation-hub/content-counts.js","webpack:///./src/components/automation-hub/logo.js","webpack:///./src/utilities/app-history.js","webpack:///./src/components/shared/error-card.js","webpack:///./src/components/automation-hub/hub-card.js","webpack:///./src/helpers/catalog/catalog-helper.js","webpack:///./src/redux/actions/catalog-actions.js","webpack:///./src/components/shared/lazy-load-image.js","webpack:///./src/components/shared/card-icon.js","webpack:///./src/components/shared/order-status-mapper.js","webpack:///./src/helpers/shared/helpers.js","webpack:///./src/components/shared/configure-card.js","webpack:///./src/components/catalog/configure-catalog_card.js","webpack:///./src/components/catalog/catalog-card.js","webpack:///./src/helpers/analytics/analytics-helper.js","webpack:///./src/redux/actions/analytics-actions.js","webpack:///./src/components/analytics/jobs-chart.js","webpack:///./src/components/analytics/configure-analytics-card.js","webpack:///./src/components/analytics/analytics-card.js","webpack:///./src/components/dashboard/configure-app-page.js","webpack:///./src/components/shared/no-app-state.js","webpack:///./src/components/dashboard/platform-page.js","webpack:///./src/components/dashboard/dashboard.js","webpack:///./src/components/shared/marketing-banner.js","webpack:///./src/components/shared/dashboard-header.js","webpack:///./src/components/trial/constants.js","webpack:///./src/components/trial/download-file.js","webpack:///./src/components/trial/download-trial.js","webpack:///./src/messages/expired.messages.js","webpack:///./src/components/trial/expired.js","webpack:///./src/components/trial/link.js","webpack:///./src/components/trial/logo.js","webpack:///./src/components/trial/overview.js","webpack:///./src/components/trial/requirements.js","webpack:///./src/components/trial/resources.js","webpack:///./src/components/trial/success.js","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/messages/messages.js","webpack:///./src/messages/success.messages.js","webpack:///./src/messages/trial.messages.js"],"sourcesContent":["export const CATALOG_API_BASE = `/api/catalog/v1.3`;\nexport const AUTOMATION_HUB_UI_API_BASE = `/api/automation-hub/_ui/v1/`;\nexport const AUTOMATION_HUB_API_BASE = `/api/automation-hub/v3`;\nexport const AUTOMATION_HUB_BASE = `/api/automation-hub`;\nexport const ANALYTICS_API_BASE_V1 = `/api/tower-analytics/v1`;\nexport const ANALYTICS_API_BASE_V0 = `/api/tower-analytics/v0`;\nexport const SOURCES_API_BASE = `/api/sources/v3.1`;\nexport const CATALOG_INVENTORY_API_BASE = `/api/catalog-inventory/v1.0`;\n","/* eslint camelcase: 0 */\nimport { getAxiosInstance } from '../shared/user-login';\nimport { AUTOMATION_HUB_BASE, AUTOMATION_HUB_API_BASE, AUTOMATION_HUB_UI_API_BASE } from '../../utilities/constants';\n\nconst axiosInstance = getAxiosInstance();\n\nexport const getCollections = () =>\n  axiosInstance.get(\n    `${AUTOMATION_HUB_API_BASE}/collections?deprecated=false&&limit=31`\n  );\n\nexport const getCollection = (offset) => {\n  return axiosInstance.get(\n    `${AUTOMATION_HUB_UI_API_BASE}/repo/published/?deprecated=false&offset=${offset}&limit=1`\n  );\n};\n\nexport const getPartners = () =>\n  axiosInstance.get(\n    `${AUTOMATION_HUB_API_BASE}/namespaces?limit=1`\n  );\n\nexport const getSyncCollections = (account) =>\n  axiosInstance.get(\n    `${AUTOMATION_HUB_BASE}/content/${account}-synclist/v3/collections?limit=1&deprecated=false`\n  );\n","import * as ActionTypes from '../action-types';\nimport * as HubHelper from '../../helpers/automation-hub/hub-helper';\n\nconst setHubAvailability = (dispatch, value = true) => {\n  return dispatch({\n    type: ActionTypes.SET_HUB_AVAILABILITY,\n    payload: value\n  });\n};\n\nconst setHubError = (dispatch, value = true) => {\n  return dispatch({\n    type: ActionTypes.SET_HUB_ERROR,\n    payload: value\n  });\n};\n\nexport const fetchCollections = () => (dispatch) => {\n  const load = HubHelper.getCollections().catch((err) => {\n    if (err.status === 404) {\n      setHubAvailability(dispatch, false);\n    }\n    else {\n      setHubError(dispatch, true);\n    }\n  });\n  return dispatch({\n    type: ActionTypes.FETCH_COLLECTIONS,\n    payload: load\n  });\n};\n\nexport const fetchCollection = (offset) => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_COLLECTION,\n    payload: HubHelper.getCollection(offset).catch((err) => {\n      if (err.status === 404) {\n        setHubAvailability(dispatch, false);\n      }\n      else {\n        setHubError(dispatch, true);\n      }\n    })\n  });\n};\n\nexport const fetchPartners = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_PARTNERS,\n    payload: HubHelper.getPartners().catch((err) => {\n      if (err.status === 404) {\n        setHubAvailability(dispatch, false);\n      }\n      else {\n        setHubError(dispatch, true);\n      }\n    })\n  });\n};\n\nexport const fetchSyncCollections = (account) => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_SYNC_COLLECTIONS,\n    payload: HubHelper.getSyncCollections(account).catch((err) => {\n      if (err.status === 404) {\n        setHubAvailability(dispatch, false);\n      }\n      else {\n        setHubError(dispatch, true);\n      }\n    })\n  });\n};\n\n","export const contentCounts = (content) => {\n  const summary = {\n    total_count: content ? content.length : 0,\n    contents: { module: 0, role: 0, plugin: 0 }\n  };\n\n  if (content === undefined) {\n    return summary;\n  }\n\n  for (const c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const IconPlaceholder = ({\n  height = 40\n}) => (\n  <svg height={ height } width={ height }>\n    <circle cx={ height / 2 } cy={ height / 2 } r={ height / 2 } fill=\"#ecebeb\" />\n  </svg>\n);\n\nIconPlaceholder.propTypes = {\n  height: PropTypes.number\n};\n\nexport const Logo = (props) => {\n  const { size, image, alt, className } = props;\n\n  const style = {\n    height: size,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  };\n  // use inline css so we can set size\n  return (\n    <div className={ className } style={ style }>\n      { image ?\n        <img\n          style={ { objectFit: 'contain', maxHeight: size } }\n          src={ image }\n          alt={ alt }\n        /> :  <IconPlaceholder/> }\n    </div>\n  );\n};\n\nLogo.propTypes = {\n  size: PropTypes.string,\n  image: PropTypes.string,\n  alt: PropTypes.string,\n  className: PropTypes.any\n};\nexport default Logo;\n\n","import { createBrowserHistory } from 'history';\n\nconst pathName = window.location.pathname.split('/');\npathName.shift();\n\nlet prefix = '/';\nif (pathName[0] === 'beta') {\n  prefix = `/${pathName.shift()}/`;\n}\n\n/**\n * Make sure that the [1] fragment is present in the pathname.\n * Otherwise we could end up with /undefined/ which will be transformed by the router to //\n */\nconst basename = `${prefix}${pathName[0]}/${pathName[1] ? pathName[1] : ''}`;\n\nconst appHistory = createBrowserHistory({\n  basename\n});\n\nexport const release = prefix;\nexport default appHistory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../App.scss';\nimport {\n  Card,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Title\n} from '@patternfly/react-core';\nimport { global_danger_color_200 } from '@patternfly/react-tokens';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons/dist/js/icons/exclamation-circle-icon';\n\nconst Br = () => <br />;\n\nconst ErrorCard = () => {\n  const intl = useIntl();\n  return (\n    <Card className='ans-c-card-dashboard'>\n      <EmptyState variant={ 'full' } className='ans-c-empty-state-error'>\n        <div>\n          <EmptyStateIcon\n            icon={ ExclamationCircleIcon }\n            color={ global_danger_color_200.value }\n          />\n        </div>\n        <Title headingLevel=\"h2\" size=\"md\"> { intl.formatMessage(messages.errorStateTitle) } </Title>\n\n        <EmptyStateBody className='ans-c-empty-state-error__body'>\n          { intl.formatMessage(messages.errorStateDescription, { supportLink: <a href={ 'https://access.redhat.com/support' }>Red Hat support</a>,\n            statusLink: <a href={ 'https://status.redhat.com' }> status</a>, br: Br }) }\n        </EmptyStateBody>\n      </EmptyState>\n    </Card>\n  );\n};\n\nErrorCard.propTypes = {\n  appName: PropTypes.string\n};\n\nexport default ErrorCard;\n","import React, { Fragment, useContext, useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Bullseye,\n  Button,\n  Card,\n  CardBody,\n  CardTitle, Divider,\n  Flex,\n  FlexItem,\n  Grid,\n  GridItem, Label, Level, LevelItem,\n  Spinner,\n  Stack,\n  StackItem,\n  Text, TextContent, TextVariants,\n  Title, Popover\n} from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport { fetchCollection, fetchCollections, fetchPartners, fetchSyncCollections } from '../../redux/actions/hub-actions';\nimport UserContext from '../../user-context';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { contentCounts } from './content-counts';\nimport { Logo } from './logo';\nimport { release } from '../../utilities/app-history';\nimport ErrorCard from '../shared/error-card';\nimport OutlinedQuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\n\nconst initialState = {\n  isFetching: true\n};\n\nconst hubState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst HubCard = () => {\n  const [{ isFetching }, stateDispatch ] = useReducer(hubState, initialState);\n\n  const { isError, collection, collections, syncCollections, partners } = useSelector(\n    ({\n      hubReducer: {\n        isError,\n        collection,\n        collections,\n        syncCollections,\n        partners\n      }\n    }) => ({ isError, collection, collections, syncCollections, partners })\n  );\n\n  const {\n    userIdentity\n  } = useContext(UserContext);\n\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  useEffect(() => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    Promise.all([ dispatch(fetchCollections()), dispatch(fetchPartners()), dispatch(fetchSyncCollections(userIdentity?.identity?.account_number)) ])\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  useEffect(() => {\n    if (collections?.meta?.count > 0) {\n      const d = new Date();\n      const day = d.getDate();\n      const count = collections?.meta?.count;\n      stateDispatch({ type: 'setFetching', payload: true });\n      dispatch(fetchCollection(count <= day ? count - 1 : day - 1)).then(() =>\n        stateDispatch({ type: 'setFetching', payload: false }));\n    }\n  }, [ collections ]);\n\n  const renderHubInfo = () => (\n    <React.Fragment>\n      <TextContent>\n        <Text>\n          { intl.formatMessage(messages.hubCardDescription) } <br/><br/>\n        </Text>\n      </TextContent>\n      <Flex>\n        <Flex direction={ { default: 'column' } } className=\"pf-u-m-0 pf-u-pr-sm\">\n          <FlexItem align={ { default: 'alignRight' } } className=\"pf-u-mb-sm pf-u-mt-md\">\n            <TextContent>\n              <Text component={ TextVariants.h1 }>\n                { partners?.meta?.count }\n              </Text>\n            </TextContent>\n          </FlexItem>\n          <FlexItem align={ { default: 'alignRight' } } className=\"pf-u-mb-sm pf-u-mt-md\">\n            <TextContent>\n              <Text component={ TextVariants.h1 }>\n                { collections?.meta?.count }\n              </Text>\n            </TextContent>\n          </FlexItem>\n          <FlexItem align={ { default: 'alignRight' } } className=\"pf-u-mb-sm pf-u-mt-md\">\n            <TextContent>\n              <Text component={ TextVariants.h1 }>\n                { syncCollections?.meta?.count }\n              </Text>\n            </TextContent>\n          </FlexItem>\n        </Flex>\n        <Flex direction={ { default: 'column' } }>\n          <FlexItem>\n            <Button\n              component='a'\n              variant='link'\n              href={ `${release}ansible/automation-hub/partners` }>\n              { intl.formatMessage(messages.partners) }\n            </Button>\n          </FlexItem>\n          <FlexItem>\n            <Button\n              component='a'\n              variant='link'\n              href={ `${release}ansible/automation-hub` }>\n              { intl.formatMessage(messages.collections) }\n            </Button>\n          </FlexItem>\n          <FlexItem>\n            <Level hasGutter className=\"pf-u-pl-md pf-u-pt-sm\">\n              <LevelItem style={ { marginRight: 8 } }>\n                { intl.formatMessage(messages.syncCollections) }\n              </LevelItem>\n              <LevelItem>\n                <Popover\n                  headerContent={ <div>{ intl.formatMessage(messages.syncCollections) }</div> }\n                  bodyContent={ <div>{ intl.formatMessage(messages.syncCollectionsTooltip) }</div> }\n                >\n                  <Button variant=\"link\" style={ { padding: 0 } } icon={ <OutlinedQuestionCircleIcon /> }/>\n                </Popover>\n              </LevelItem>\n            </Level>\n          </FlexItem>\n        </Flex>\n      </Flex>\n    </React.Fragment>\n  );\n\n  const filterContents = (contents) => {\n    if (contents) {\n      return contents.filter(\n        item => !['doc_fragments', 'module_utils'].includes(item.content_type)\n      );\n    }\n\n    return contents;\n  };\n\n  const renderHubFeaturedCollection = () => {\n    const featuredCollection = collection?.data ? collection?.data[0] : null;\n    const content = featuredCollection ? contentCounts(\n      filterContents(featuredCollection?.latest_version?.metadata?.contents)\n    ) : undefined;\n    return (\n      <Flex direction={ { default: 'column' } } alignSelf={ { default: 'alignSelfStretch' } }>\n        <Title headingLevel=\"h4\">\n          { intl.formatMessage(messages.hubCardFeaturedCollectionTitle) }\n        </Title>\n        <br/>\n        {  featuredCollection &&\n        <Flex direction={ { default: 'column' } }>\n          <FlexItem>\n            <Level hasGutter=\"sm\">\n              <LevelItem>\n                <Logo\n                  alt={ featuredCollection?.namespace?.company + ' logo' }\n                  image={ featuredCollection?.namespace?.avatar_url }\n                  size='50px'\n                />\n              </LevelItem>\n              <LevelItem>\n                <Label>Certified</Label>\n              </LevelItem>\n            </Level>\n          </FlexItem>\n          <FlexItem>\n            <Button\n              component='a'\n              variant='link'\n              className=\"pf-u-p-0\"\n              href={ `${release}ansible/automation-hub/repo/published/${featuredCollection?.namespace?.name}/` +\n                  `${featuredCollection?.latest_version?.name || featuredCollection?.name}` }>\n              { featuredCollection?.latest_version?.name || featuredCollection?.name }\n            </Button>\n            <TextContent>\n              <Text component={ TextVariants.small }> Provided by { featuredCollection?.namespace?.company\n                  || featuredCollection?.namespace?.name }</Text>\n            </TextContent>\n          </FlexItem>\n          <FlexItem>\n            <TextContent>\n              <Text component={ TextVariants.p }>\n                { featuredCollection?.latest_version?.metadata?.description }\n              </Text>\n            </TextContent>\n          </FlexItem>\n          <FlexItem>\n            <Grid hasGutter=\"md\" >\n              <GridItem id={ 'collectionModuleCount' } span=\"4\">\n                { content?.contents?.module || '0' }\n              </GridItem>\n              <GridItem id={ 'collectionRoleCount' } span=\"4\">\n                { content?.contents?.role || 0 }\n              </GridItem>\n              <GridItem id={ 'collectionPluginCount' } span=\"4\">\n                { content?.contents?.plugin || 0 }\n              </GridItem>\n              <GridItem span=\"4\">\n                <TextContent>\n                  <Text component={ TextVariants.p }>\n                    { intl.formatMessage(messages.modules) }\n                  </Text>\n                </TextContent>\n              </GridItem>\n              <GridItem span=\"4\">\n                <TextContent>\n                  <Text component={ TextVariants.p }>\n                    { intl.formatMessage(messages.roles) }\n                  </Text>\n                </TextContent>\n              </GridItem>\n              <GridItem span=\"4\">\n                <TextContent>\n                  <Text component={ TextVariants.p }>\n                    { intl.formatMessage(messages.plugins) }\n                  </Text>\n                </TextContent>\n              </GridItem>\n            </Grid>\n          </FlexItem>\n        </Flex> }\n      </Flex>);\n  };\n\n  const renderHubOther = () => {\n    return (\n      <Flex direction={ { default: 'column' } }\n        justifyContent={ { default: 'justifyContentSpaceBetween' } }\n        alignSelf={ { default: 'alignSelfStretch' } }>\n        <FlexItem>\n          <Stack hasGutter=\"sm\">\n            <StackItem>\n              <Title headingLevel=\"h4\">\n                { intl.formatMessage(messages.hubCardCertifiedCollectionTitle) }\n              </Title>\n            </StackItem>\n            <StackItem>\n              <TextContent>\n                <Text component={ TextVariants.p }>\n                  { intl.formatMessage(messages.hubCardCertifiedCollectionDescription) }\n                </Text>\n              </TextContent>\n            </StackItem>\n          </Stack>\n        </FlexItem>\n        <FlexItem>\n          <Bullseye>\n            <Button\n              component='a'\n              variant='link'\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={ `https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/1.2/html` +\n              `/managing_red_hat_certified_and_ansible_galaxy_collections_in_automation_hub/index` }>\n              { intl.formatMessage(messages.learnMoreButton) }&nbsp;\n              <ExternalLinkAltIcon />\n            </Button>\n          </Bullseye>\n        </FlexItem>\n      </Flex>);\n  };\n\n  const renderHubCards = () => {\n    if (isError) {\n      return <ErrorCard/>;\n    }\n\n    if (isFetching) {\n      return (\n        <Section style={ { backgroundColor: 'white', minHeight: '100%' } }>\n          <Bullseye>\n            <Spinner isSVG />\n          </Bullseye>\n        </Section>\n      );\n    }\n    else {\n      return (\n        <Flex className=\"ans-l-flex ans-l-flex-automation-hub-card\" >\n          <Flex>\n            { renderHubInfo() }\n          </Flex>\n          <Divider/>\n          { renderHubFeaturedCollection() }\n          <Divider/>\n          { renderHubOther() }\n        </Flex>\n      );\n    }\n  };\n\n  return (\n    <Fragment>\n      <Card className='ans-c-card-dashboard'>\n        <CardTitle>\n          <Title headingLevel=\"h3\">\n            { intl.formatMessage(messages.hubTitle) }\n          </Title>\n        </CardTitle>\n        <CardBody>\n          { renderHubCards() }\n        </CardBody>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default HubCard;\n","/* eslint camelcase: 0 */\nimport { getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE, CATALOG_INVENTORY_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\n\nconst axiosInstance = getAxiosInstance();\nconst { post } = getGraphqlInstance();\n\nconst sourcesQuery = `\nquery {\n  application_types (filter: { name: \"name\", operation: \"eq\", value: \"/insights/platform/catalog\" }) {\n    id\n    name\n    sources {\n      id\n      name\n      source_type_id\n    }\n  }\n}`;\n\nconst getSourcesDetails = (\n  sourceIds\n) => {\n  return axiosInstance.get(\n    `${CATALOG_INVENTORY_API_BASE}/sources?limit=${sourceIds.length ||\n    defaultSettings.limit}${sourceIds.length ? '&' : ''}${sourceIds\n    .map((sourceId) => `filter[id][]=${sourceId}`)\n    .join('&')}`\n  );\n};\n\nexport const getPlatforms = () =>\n  post(`${SOURCES_API_BASE}/graphql`, { query: sourcesQuery })\n  .then(({ data: { application_types }}) => application_types)\n  .then(([{ sources }]) => {\n    return getSourcesDetails(sources.map((source) => source.id)).then(\n      (sourceDetails) => {\n        return sources.map((source) => ({\n          ...source,\n          ...sourceDetails.data.find(\n            (sourceDetail) => sourceDetail.id === source.id\n          )\n        }));\n      }\n    );\n  });\n\nconst getOrderItems = (orderIds) => {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items?limit=${\n      orderIds.length * 3 || defaultSettings.limit\n    }${orderIds.length ? '&' : ''}${orderIds\n    .map((orderId) => `filter[order_id][]=${orderId}`)\n    .join('&')}`\n  );\n};\n\nconst getOrderPortfolioItems = (itemIds) => {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items?${itemIds\n    .map((itemId) => `filter[id][]=${itemId}`)\n    .join('&')}`\n  );\n};\n\nexport const getOrders = () => {\n  return axiosInstance\n  .get(\n    `${CATALOG_API_BASE}/orders?&limit=2`\n  ) // eslint-disable-line max-len\n  .then((orders) =>\n    getOrderItems(orders.data.map(({ id }) => id)).then((orderItems) =>\n      getOrderPortfolioItems(\n        orderItems.data.map(({ portfolio_item_id }) => portfolio_item_id)\n      ).then((portfolioItems) => {\n        return {\n          portfolioItems,\n          ...orders,\n          data: orders.data.map((order) => ({\n            ...order,\n            orderItems: orderItems.data.filter(\n              ({ order_id }) => order_id === order.id\n            )\n          }))\n        };\n      })\n    )\n  );\n};\n\nexport const listPortfolios = (limit = 1) => {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios?limit=${limit}`);\n};\n\nexport const listPortfolioItems = (\n  limit = 1\n) => {\n  return axiosInstance\n  .get(\n    `${CATALOG_API_BASE}/portfolio_items?sort_by=created_at:desc&limit=${limit}`\n  )\n  .then(\n    (portfolioItems) => {\n      const portfolioReference = portfolioItems.data.reduce(\n        (acc, curr, index) =>\n          curr.portfolio_id\n            ? {\n              ...acc,\n              [curr.portfolio_id]: acc[curr.portfolio_id]\n                ? [ ...acc[curr.portfolio_id], index ]\n                : [ index ]\n            }\n            : acc,\n        {}\n      );\n      return axiosInstance\n      .get(\n        `${CATALOG_API_BASE}/portfolios?${Object.keys(portfolioReference)\n        .map((id) => `filter[id][]=${id}`)\n        .join('&')}`\n      )\n      .then(({ data }) => ({\n        portfolioItems,\n        portfolioReference,\n        portfolios: data\n      }));\n    }\n  )\n  .then(({ portfolioItems, portfolioReference, portfolios }) => {\n    portfolios.forEach(\n      ({ id, name }) =>\n        id &&\n          portfolioReference[id] &&\n          portfolioReference[id].forEach((portfolioItemIndex) => {\n            portfolioItems.data[portfolioItemIndex].portfolioName = name;\n          })\n    );\n    return portfolioItems;\n  });\n};\n","import * as ActionTypes from '../action-types';\nimport * as CatalogHelper from '../../helpers/catalog/catalog-helper';\n\nconst setCatalogAvailability = (dispatch, value = true) => {\n  return dispatch({\n    type: ActionTypes.SET_CATALOG_AVAILABILITY,\n    payload: value\n  });\n};\n\nconst setCatalogError = (dispatch, value = true) => {\n  return dispatch({\n    type: ActionTypes.SET_CATALOG_ERROR,\n    payload: value\n  });\n};\n\nexport const fetchOrders = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_ORDERS,\n    payload: CatalogHelper.getOrders().catch((err) => {\n      if (err.status === 404) {\n        setCatalogAvailability(dispatch, false);\n      }\n      else {\n        setCatalogError(dispatch, true);\n      }\n    })\n  });\n};\n\nexport const fetchPortfolios = (options) => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_PORTFOLIOS,\n    payload: CatalogHelper.listPortfolios(options).catch((err) => {\n      if (err.status === 404) {\n        setCatalogAvailability(dispatch, false);\n      } else {\n        setCatalogError(dispatch, true);\n      }\n    })\n  });\n};\n\nexport const fetchPortfolioItems = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_PORTFOLIO_ITEMS,\n    payload: CatalogHelper.listPortfolioItems().catch((err) => {\n      if (err.status === 404) {\n        setCatalogAvailability(dispatch, false);\n      }\n      else {\n        setCatalogError(dispatch, true);\n      }\n    })\n  });\n};\n\nexport const fetchPlatforms = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_PLATFORMS,\n    payload: CatalogHelper.getPlatforms().catch((err) => {\n      if (err.status === 404) {\n        setCatalogAvailability(dispatch, false);\n      }\n      else {\n        setCatalogError(dispatch, true);\n      }\n    })\n  });\n};\n\n","import styled from 'styled-components';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nconst StyledLazyLoadImage = styled(LazyLoadImage)`\n  height: ${({ height, hidden }) => (hidden ? '0px' : `${height}px` || '40px')};\n  display: ${({ hidden }) => (hidden ? 'none' : 'inherit')};\n  float: ${({ hidden }) => (hidden ? 'left' : 'inherit')};\n  width: ${({ hidden }) => (hidden ? 0 : 'inherit')};\n`;\n\nexport default StyledLazyLoadImage;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { IconPlaceholder } from './loader-placeholders';\nimport StyledLazyLoadImage from './lazy-load-image';\n\nconst CardIconContainer = styled.div`\n  display: inline-block;\n  height: ${({ height }) => `${height}px`};\n`;\n\nconst CardIcon = ({\n  src,\n  height = 40\n}) => {\n  const [ isLoaded, setLoaded ] = useState(false);\n  const [ isUnknown, setUnknown ] = useState(false);\n\n  const defaultIcon = '/apps/frontend-assets/platform-logos/ansible-automation-platform.svg';\n\n  return (\n    <CardIconContainer height={ height }>\n      { !isLoaded && <IconPlaceholder height={ height } /> }\n      <StyledLazyLoadImage\n        threshold={ 2000 }\n        delayTime={ 0 }\n        hidden={ !isLoaded }\n        height={ isLoaded ? height : 0 }\n        onError={ () => setUnknown(true) }\n        onLoad={ () => setLoaded(true) }\n        src={ !src || isUnknown ? defaultIcon : src }\n      />\n    </CardIconContainer>\n  );\n};\n\nexport default CardIcon;\n","import React from 'react';\nimport {\n  ExclamationCircleIcon,\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n  ClockIcon,\n  PlusCircleIcon\n} from '@patternfly/react-icons';\n\nconst orderStatusMapper = {\n  Completed: { icon: <CheckCircleIcon />, color: 'green' },\n  'Approval Pending': {\n    icon: <ClockIcon />,\n    color: 'blue'\n  },\n  Ordered: { icon: <PlusCircleIcon />, color: 'grey' },\n  Failed: { icon: <ExclamationCircleIcon />, color: 'red' },\n  Canceled: { icon: <ExclamationTriangleIcon />, color: 'orange' },\n  Created: { icon: <PlusCircleIcon />, color: 'grey' },\n  Approved: { icon: <CheckCircleIcon />, color: 'green' },\n  Denied: { icon: <ExclamationCircleIcon />, color: 'red' },\n  Error: { icon: <ExclamationCircleIcon />, color: 'red' },\n  Undecided: {\n    icon: <ClockIcon />,\n    color: 'blue'\n  },\n  Unknown: { icon: <ExclamationTriangleIcon />, color: 'grey' }\n};\n\nexport default orderStatusMapper;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nexport const scrollToTop = () =>\n  document.getElementById('root')?.scrollTo({\n    behavior: 'smooth',\n    top: 0,\n    left: 0\n  });\n\nexport const TimeAgo = ({ date }) => (\n  <span key={ date }>\n    <DateFormat date={ date } type=\"relative\"/>\n  </span>\n);\n\nconst sizes = [ 'B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB' ];\nexport const readableBytes = (bytes) => {\n  if (bytes === 0) {\n    return 'O B';\n  }\n\n  const i = Math.floor(Math.log(bytes) / Math.log(1024));\n\n  return `${Number((bytes / Math.pow(1024, i)).toFixed(2)) * 1} ${sizes[i]}`;\n};\n\nexport const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../App.scss';\nimport {\n  Bullseye,\n  Card,\n  CardBody,\n  CardTitle,\n  Stack,\n  StackItem,\n  Title\n} from '@patternfly/react-core';\nimport LinesEllipsis from 'react-lines-ellipsis';\n\nconst ConfigureCard = ({ title, description, renderButtons }) => {\n  return (\n    <Card className='ans-c-card-config' >\n      <CardTitle>\n        <Title headingLevel=\"h3\">\n          { title }\n        </Title>\n      </CardTitle>\n      <CardBody className={ 'pf-u-mb-0-pb-0' }>\n        <Stack>\n          <StackItem isFilled>\n            <LinesEllipsis maxLine={ 3 } text={ description } />\n          </StackItem>\n          <StackItem style={ { marginBottom: 0, paddingBottom: 0 } }>\n            <Bullseye>\n              { renderButtons() }\n            </Bullseye>\n          </StackItem>\n        </Stack>\n      </CardBody>\n    </Card>\n  );\n};\n\nConfigureCard.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  renderButtons: PropTypes.func\n};\n\nexport default ConfigureCard;\n","import React from 'react';\nimport { Button, Flex, FlexItem } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport ConfigureCard from '../shared/configure-card';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\n\nconst renderCatalogConfigButton = (intl) => (\n  <Flex>\n    <FlexItem>\n      <Button\n        component='a'\n        variant='link'\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={ `https://access.redhat.com/documentation/en-us/` +\n          `red_hat_ansible_automation_platform/1.2/html/getting_started_with_automation_services_catalog/index` }>\n        { intl.formatMessage(messages.configureCatalogLink) }&nbsp;\n        <ExternalLinkAltIcon />\n      </Button>\n    </FlexItem>\n  </Flex>\n);\n\nconst ConfigureCatalogCard = () => {\n  const intl = useIntl();\n  return <ConfigureCard\n    title={ intl.formatMessage(messages.configureCatalogTitle) }\n    description={ intl.formatMessage(messages.configureCatalogDescription) }\n    renderButtons={ () => renderCatalogConfigButton(intl) }/>\n  ;\n};\n\nexport default ConfigureCatalogCard;\n","import React, { Fragment, useContext, useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Badge,\n  Bullseye,\n  Button,\n  Card,\n  CardBody,\n  CardTitle, Divider,\n  Flex,\n  FlexItem,\n  Label,\n  Spinner,\n  Text, TextContent, TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport {\n  fetchOrders, fetchPlatforms,\n  fetchPortfolioItems,\n  fetchPortfolios\n} from '../../redux/actions/catalog-actions';\nimport UserContext from '../../user-context';\nimport { release } from '../../utilities/app-history';\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport CardIcon from '../shared/card-icon';\nimport orderStatusMapper from '../shared/order-status-mapper';\nimport { TimeAgo } from '../../helpers/shared/helpers';\nimport ErrorCard from '../shared/error-card';\nimport ConfigureCatalogCard from './configure-catalog_card';\n\nconst initialState = {\n  isFetching: true\n};\n\nconst catalogState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst CatalogCard = () => {\n  const [{ isFetching }, stateDispatch ] = useReducer(catalogState, initialState);\n\n  const { isCatalogAvailable, isError, portfolioItems, portfolios, sources, orders } = useSelector(\n    ({\n      catalogReducer: {\n        isCatalogAvailable,\n        isError,\n        portfolioItems,\n        portfolios,\n        sources,\n        orders\n      }\n    }) => ({ isCatalogAvailable, isError, portfolioItems, portfolios, sources, orders })\n  );\n\n  const {\n    permissions\n  } = useContext(UserContext);\n\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  const isCatalogAdmin = permissions.find((permission) => permission.permission === 'catalog:portfolios:create');\n\n  useEffect(() => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    const promiseList = [ fetchPortfolioItems, fetchPortfolios, fetchOrders ];\n    if (isCatalogAdmin) {\n      promiseList.push(fetchPlatforms);\n    }\n\n    return Promise.all(promiseList.map(fn => dispatch(fn()))).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const renderCatalogInfo = () => (\n    <React.Fragment>\n      <TextContent>\n        <Text>\n          { intl.formatMessage(messages.catalogCardDescription) } <br/><br/>\n        </Text>\n      </TextContent>\n      <Flex>\n        <Flex direction={ { default: 'column' } } className=\"pf-u-m-0 pf-u-pr-sm\">\n          <FlexItem align={ { default: 'alignRight' } } className=\"pf-u-mb-sm pf-u-mt-md\">\n            <TextContent>\n              <Text component={ TextVariants.h1 }>\n                { portfolioItems?.meta?.count }\n              </Text>\n            </TextContent>\n          </FlexItem>\n          <FlexItem align={ { default: 'alignRight' } } className=\"pf-u-mb-sm pf-u-mt-md\">\n            <TextContent>\n              <Text component={ TextVariants.h1 }>\n                { portfolios?.meta?.count }\n              </Text>\n            </TextContent>\n          </FlexItem>\n          { isCatalogAdmin &&\n          <FlexItem align={ { default: 'alignRight' } } className=\"pf-u-mb-sm pf-u-mt-md\">\n            <TextContent>\n              <Text component={ TextVariants.h1 }>\n                { sources?.length }\n              </Text>\n            </TextContent>\n          </FlexItem> }\n        </Flex>\n        <Flex direction={ { default: 'column' } }>\n          <FlexItem>\n            <Button\n              component='a'\n              variant='link'\n              href={ `${release}ansible/catalog/products` }>\n              { intl.formatMessage(messages.products) }\n            </Button>\n          </FlexItem>\n          <FlexItem>\n            <Button\n              component='a'\n              variant='link'\n              href={ `${release}ansible/catalog/portfolios` }>\n              { intl.formatMessage(messages.portfolios) }\n            </Button>\n          </FlexItem>\n          { isCatalogAdmin &&\n            <FlexItem>\n              <Button variant='link'\n                component='a'\n                href={ `${release}ansible/catalog/platforms` }>\n                { intl.formatMessage(messages.platforms) }\n              </Button>\n            </FlexItem>\n          }\n        </Flex>\n      </Flex>\n    </React.Fragment>\n  );\n\n  const renderCatalogFeaturedProduct = () => {\n    const featuredProduct = portfolioItems?.data ? portfolioItems?.data[0] : null;\n    return (\n      <Flex direction={ { default: 'column' } } alignSelf={ { default: 'alignSelfStretch' } }>\n        <Title headingLevel=\"h4\">\n          { intl.formatMessage(messages.catalogCardFeaturedProduct) }\n        </Title>\n        <br/>\n        {  featuredProduct &&\n          <Flex direction={ { default: 'column' } }>\n            <FlexItem>\n              <CardIcon\n                height={ 40 }\n                src={ `${CATALOG_API_BASE}/portfolio_items/${featuredProduct.id}/icon` }\n              />\n            </FlexItem>\n            <FlexItem>\n              <Button\n                className=\"pf-u-pl-0 pf-u-pt-0\"\n                component='a'\n                variant='link'\n                href={ `${release}ansible/catalog/portfolios/portfolio/portfolio-item?portfolio=${featuredProduct?.portfolio_id}` +\n                `&portfolio-item=${featuredProduct.id}&source=${featuredProduct.service_offering_source_ref}` }>\n                { featuredProduct?.name }\n              </Button>\n            </FlexItem>\n            <FlexItem>\n              <TextContent>\n                <Text component={ TextVariants.p }>\n                  { featuredProduct?.description }\n                </Text>\n              </TextContent>\n            </FlexItem>\n          </Flex>\n        }\n      </Flex>);\n  };\n\n  const orderRow = (order) => {\n    return (\n      <Flex  direction={ { default: 'column' } }>\n        <Flex className=\"pf-u-mb-0 pf-u-mt-md\">\n          <FlexItem >\n            <Button\n              className=\"pf-u-pl-0 pf-u-pt-0\"\n              component='a'\n              variant='link'\n              href={ `${release}ansible/catalog/orders/order?order=${order?.id}` }>\n              { order?.id }\n            </Button>\n          </FlexItem>\n          <FlexItem>\n            <TextContent>\n              <Text component={ TextVariants.p }>\n                { order?.orderItems[0]?.name }\n              </Text>\n            </TextContent>\n          </FlexItem>\n          <FlexItem align={ { default: 'alignRight' } }>\n            <Label { ...orderStatusMapper[order?.state] } variant=\"outline\">\n              { order?.state }\n            </Label>\n          </FlexItem>\n        </Flex>\n        <Flex>\n          <FlexItem>\n            <TextContent>\n              <Text component={ TextVariants.small }>Last updated &nbsp;\n                <TimeAgo date={ order?.created_at }/>\n              </Text>\n            </TextContent>\n          </FlexItem>\n        </Flex>\n      </Flex>);\n  };\n\n  const emptyOrdersList = () => (<Flex direction={ { default: 'column' } }>\n    <FlexItem alignSelf={ { default: 'alignSelfCenter' } }>\n      <TextContent>\n        <Text component={ TextVariants.h6 }>\n          { intl.formatMessage(messages.noOrdersTitle) }\n        </Text>\n      </TextContent>\n    </FlexItem>\n    <FlexItem  alignSelf={ { default: 'alignSelfCenter' } }>\n      <TextContent>\n        <Text component={ TextVariants.small }>\n          { intl.formatMessage(messages.noOrdersDescription) }\n        </Text>\n      </TextContent>\n    </FlexItem>\n  </Flex>);\n\n  const emptyOrderCard = () => (\n    <Flex direction={ { default: 'column' } }>\n      <FlexItem>\n        <Flex>\n          <FlexItem>\n            <Title headingLevel=\"h4\">\n              { intl.formatMessage(messages.catalogCardLatestOrdersTitle) }\n            </Title>\n          </FlexItem>\n        </Flex>\n      </FlexItem>\n      { emptyOrdersList() }\n    </Flex>);\n\n  const renderCatalogOther = () => (!(orders?.meta?.count > 0) ? emptyOrderCard() :\n    <Flex direction={ { default: 'column' } }\n      justifyContent={ { default: 'justifyContentSpaceBetween' } }\n      alignSelf={ { default: 'alignSelfStretch' } }>\n      <FlexItem>\n        <Flex>\n          <FlexItem>\n            <Title headingLevel=\"h4\">\n              { intl.formatMessage(messages.catalogCardLatestOrdersTitle) }\n            </Title>\n          </FlexItem>\n          <FlexItem>\n            <Badge isRead>{ orders?.meta?.count }</Badge>\n          </FlexItem>\n        </Flex>\n      </FlexItem>\n      { orders?.data?.map((order) => (\n        orderRow(order)\n      )) }\n      <FlexItem>\n        <Bullseye>\n          <Button\n            component='a'\n            variant='link'\n            href={ `${release}ansible/catalog/orders` }>\n            { intl.formatMessage(messages.viewMore) }&nbsp;\n          </Button>\n        </Bullseye>\n      </FlexItem>\n    </Flex>\n  );\n\n  const renderCatalogCards = () => {\n    if (!isCatalogAvailable) {\n      return <ConfigureCatalogCard/>;\n    }\n\n    if (isError) {\n      return <ErrorCard/>;\n    }\n    else if (isFetching) {\n      return (\n        <Section style={ { backgroundColor: 'white', minHeight: '100%' } }>\n          <Bullseye>\n            <Spinner isSVG />\n          </Bullseye>\n        </Section>\n      );\n    }\n    else {\n      return (\n        <Flex className=\"ans-l-flex ans-l-flex-automation-hub-card\" >\n          <Flex>\n            { renderCatalogInfo() }\n          </Flex>\n          <Divider/>\n          <Flex>\n            { renderCatalogFeaturedProduct() }\n          </Flex>\n          <Divider/>\n          { renderCatalogOther() }\n        </Flex>\n      );\n    }\n  };\n\n  return (\n    <Fragment>\n      <Card className='ans-c-card-dashboard'>\n        <CardTitle>\n          <Title headingLevel=\"h3\">\n            { intl.formatMessage(messages.catalogTitle) }\n          </Title>\n        </CardTitle>\n        <CardBody>\n          { renderCatalogCards() }\n        </CardBody>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default CatalogCard;\n","/* eslint camelcase: 0 */\nimport { stringify } from 'query-string';\nimport { getAxiosInstance } from '../shared/user-login';\n/* v0 endpoints */\nconst clustersEndpoint = `/api/tower-analytics/v0/clusters/`;\nconst notificationsEndpoint = `/api/tower-analytics/v0/notifications/`;\n\n/* v1 endpoints */\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\n\nconst axiosInstance = getAxiosInstance();\nfunction authenticatedFetch(endpoint, options) {\n  return window.insights.chrome.auth.getUser().then(() => axiosInstance.get(endpoint, options));\n}\n\nexport const getJobsData = () => {\n  const params = {\n    status: [ 'successful', 'failed' ],\n    quick_date_range: 'last_30_days',\n    job_type: [ 'workflowjob', 'job' ],\n    group_by_time: true,\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    only_root_workflows_and_standalone_jobs: false,\n    limit: 1,\n    offset: 0\n  };\n  const qs = stringify(params);\n  const url = new URL(jobExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params)\n  });\n};\n\n// v0 endpoints used in Notifications.js\nexport const getClusters = () => {\n  return authenticatedFetch(clustersEndpoint);\n};\n\nexport const getNotifications = (severity = 'error') => {\n  const url = new URL(notificationsEndpoint, window.location.origin);\n  url.searchParams.append('severity', severity);\n  return authenticatedFetch(url);\n};\n","import * as ActionTypes from '../action-types';\nimport * as AnalyticsHelper from '../../helpers/analytics/analytics-helper';\n\nconst setAnalyticsAvailability = (dispatch, value = true) => {\n  return dispatch({\n    type: ActionTypes.SET_ANALYTICS_AVAILABILITY,\n    payload: value\n  });\n};\n\nconst setAnalyticsError = (dispatch, value = true) => {\n  return dispatch({\n    type: ActionTypes.SET_ANALYTICS_ERROR,\n    payload: value\n  });\n};\n\nexport const fetchClusters = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_CLUSTERS,\n    payload: AnalyticsHelper.getClusters().catch((err) => {\n      if (err.status === 404) {\n        setAnalyticsAvailability(dispatch, false);\n      }\n      else {\n        setAnalyticsError(dispatch, true);\n      }}\n    )\n  });\n};\n\nexport const fetchWarningNotifications = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_WARNING_NOTIFICATIONS,\n    payload: AnalyticsHelper.getNotifications('warning').catch((err) => {\n      if (err.status === 404) {\n        setAnalyticsAvailability(dispatch, false);\n      }\n      else {\n        setAnalyticsError(dispatch, true);\n      }}\n    )\n  });\n};\n\nexport const fetchErrorNotifications = () => (dispatch) => {\n  const load = AnalyticsHelper.getNotifications('error').catch((err) => {\n    if (err.status === 404) {\n      setAnalyticsAvailability(dispatch, false);\n    }\n    else {\n      setAnalyticsError(dispatch, true);\n    }}\n  );\n  return dispatch({\n    type: ActionTypes.FETCH_ERROR_NOTIFICATIONS,\n    payload: load\n  });\n};\n\nexport const fetchJobsData = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_JOBS,\n    payload: AnalyticsHelper.getJobsData().catch((err) => {\n      if (err.status === 404) {\n        setAnalyticsAvailability(dispatch, false);\n      }\n      else {\n        setAnalyticsError(dispatch, true);\n      }}\n    )\n  });\n};\n","import React, { useEffect, useState } from 'react';\nimport { Chart, ChartAxis, ChartBar, ChartStack, ChartTooltip } from '@patternfly/react-charts';\n\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_red_300 from '@patternfly/react-tokens/dist/js/chart_color_red_300';\nimport messages from '../../messages/messages';\nimport { useIntl } from 'react-intl';\nimport c_content_small_FontSize from '@patternfly/react-tokens';\n\nconst JobsChart = (data) => {\n  const [ width, setWidth ] = useState(window.innerWidth);\n  const intl = useIntl();\n\n  const handleResize = () => {\n    setWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const bars = [];\n  data?.items?.map((item) => {\n    const date = new Date(item.created_date);\n    const x = `${date.getMonth()}/${date.getDate()}`;\n    return bars.push({ x, y: item });\n  });\n\n  const renderSuccessfulJobs = () => {\n    const successBars = bars.map((tick) => {\n      return {\n        x: tick.x,\n        y: tick.y.successful_count,\n        name: 'Successful',\n        label: `${tick.x} Successful: ${tick.y.successful_count}`\n      };\n    });\n    return <ChartBar data={ successBars }\n      style={ { fill: chart_color_green_400.value } }\n      labelComponent={ <ChartTooltip constrainToVisibleArea /> } />;\n  };\n\n  const renderFailedJobs = () => {\n    const failBars = bars.map((tick) => {\n      return {\n        x: tick.x,\n        y: tick.y.failed_count,\n        name: 'Failed',\n        label: `${tick.x} Failed: ${tick.y.failed_count}`\n      };\n    });\n    return <ChartBar data={ failBars }\n      style={ { fill: chart_color_red_300.value } }\n      labelComponent={ <ChartTooltip constrainToVisibleArea /> } />;\n  };\n\n  const getTickValues = () => {\n    const tickValues = [];\n    for (let i = 0; i < bars.length; i++) {\n      const date = new Date(bars[i].y.created_date);\n      tickValues.push(`${date.getMonth()}/${date.getDate()}`);\n    }\n\n    return tickValues;\n  };\n\n  const colorScaleArray = [\n    chart_color_red_300.value,\n    chart_color_green_400.value\n  ];\n\n  const yAxisStyles = {\n    tickLabels: {\n      fontSize: 10\n    },\n    axisLabel: {\n      padding: 45,\n      fontSize: c_content_small_FontSize\n    }\n  };\n\n  const xAxisStyles = {\n    tickLabels: {\n      fontSize: 10\n    },\n    axisLabel: {\n      padding: 30,\n      fontSize: c_content_small_FontSize\n    }\n  };\n  return (\n    <Chart\n      ariaDesc=\"Jobs across clusters\"\n      ariaTitle=\"Jobs across clusters\"\n      domainPadding={ { x: [ 30, 25 ]} }\n      barRatio={ 1 }\n      height={ 225 }\n      padding={ {\n        bottom: 60,\n        left: 60,\n        right: 20,\n        top: 20\n      } }\n      width={ width }\n      style={ { padding: 0, margin: 0 } }\n    >\n      <ChartAxis tickValues={ getTickValues() } fixLabelOverlap label={ intl.formatMessage(messages.timeDayLegend) } style={ xAxisStyles }/>\n      <ChartAxis dependentAxis\n        showGrid\n        tickFormat={ (t) => Math.round(t) }\n        label={ intl.formatMessage(messages.jobsAcrossClusters) }\n        style={ yAxisStyles }/>\n      <ChartStack colorScale={ colorScaleArray } domainPadding={ { x: [ 10, 2 ]} }>\n        { renderFailedJobs() }\n        { renderSuccessfulJobs() }\n      </ChartStack>\n    </Chart>);\n};\n\nexport default JobsChart;\n","import React from 'react';\nimport { Button, Flex, FlexItem } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport ConfigureCard from '../shared/configure-card';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\n\nconst renderAnalyticsConfigButton = (intl) => (\n  <Flex>\n    <FlexItem>\n      <Button\n        component='a'\n        variant='link'\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={ `https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html` }>\n        { intl.formatMessage(messages.configureAnalyticsLink) }&nbsp;\n        <ExternalLinkAltIcon />\n      </Button>\n    </FlexItem>\n  </Flex>\n);\n\nconst ConfigureAnalyticsCard = () => {\n  const intl = useIntl();\n  return (<ConfigureCard\n    title={ intl.formatMessage(messages.configureAnalyticsTitle) }\n    description={ intl.formatMessage(messages.configureAnalyticsDescription) }\n    renderButtons={ () => renderAnalyticsConfigButton(intl) }/>);\n};\n\nexport default ConfigureAnalyticsCard;\n","import React, { Fragment, useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Bullseye,\n  Card,\n  CardBody,\n  CardTitle, Divider,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  FlexItem,\n  Label,\n  Spinner,\n  Text,\n  Title, Button\n} from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport { fetchClusters, fetchErrorNotifications, fetchWarningNotifications, fetchJobsData } from '../../redux/actions/analytics-actions';\nimport InfoCircleIcon from '@patternfly/react-icons/dist/js/icons/info-circle-icon';\nimport WarningTriangleIcon from '@patternfly/react-icons/dist/js/icons/warning-triangle-icon';\nimport JobsChart from './jobs-chart';\nimport { release } from '../../utilities/app-history';\nimport ConfigureAnalyticsCard from './configure-analytics-card';\nimport ErrorCard from '../shared/error-card';\n\nconst initialState = {\n  isFetching: true\n};\n\nconst analyticsState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst AnalyticsCard = () => {\n  const [{ isFetching }, stateDispatch ] = useReducer(analyticsState, initialState);\n\n  const { isAnalyticsAvailable, isError, clusters, errorNotifications, warningNotifications, jobsData } = useSelector(\n    ({\n      analyticsReducer: {\n        isAnalyticsAvailable,\n        isError,\n        clusters,\n        errorNotifications,\n        warningNotifications,\n        jobsData\n      }\n    }) => ({ isAnalyticsAvailable, isError, clusters, errorNotifications, warningNotifications, jobsData })\n  );\n\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  useEffect(() => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    Promise.all([ dispatch(fetchClusters()), dispatch(fetchErrorNotifications()), dispatch(fetchWarningNotifications()), dispatch(fetchJobsData()) ])\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const renderAnalyticsNotifications = () => {\n    return <React.Fragment>\n      <Title headingLevel=\"h4\">\n        { intl.formatMessage(messages.analyticsCardNotificationsTitle) }\n      </Title>\n      <br/>\n      <DescriptionList className=\"pf-c-description-list.pf-m-vertical\" columnModifier={ {\n        default: '2Col'\n      } }>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            { errorNotifications?.payload?.meta?.count || 0 }\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            <Label\n              color=\"red\"\n              icon={ <InfoCircleIcon/> }\n              isTruncated\n              href={ `${release}ansible/automation-analytics/notifications` }\n            >\n              { intl.formatMessage(messages.critical) }\n            </Label>\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            { warningNotifications?.payload?.meta?.count || 0 }\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            <Label\n              color=\"orange\"\n              icon={ <WarningTriangleIcon/> }\n              isTruncated\n              href={ `${release}ansible/automation-analytics/notifications` }\n            >\n              { intl.formatMessage(messages.warning) }\n            </Label>\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n    </React.Fragment>;\n  };\n\n  const renderAnalyticsInfo = () => {\n    return (\n      <Fragment>\n        <Flex className=\" ans-l-flex ans-l-flex-automation-analytics-info\">\n          <FlexItem>\n            <Text>\n              { intl.formatMessage(messages.hubCardDescription) }\n            </Text>\n            <br/>\n          </FlexItem>\n          <FlexItem>\n            <Title headingLevel=\"h4\">\n              { intl.formatMessage(messages.clusterTitle) }\n            </Title>\n            <br/>\n            <DescriptionList className=\"pf-c-description-list.pf-m-vertical\" columnModifier={ {\n              default: '1Col'\n            } }>\n              <DescriptionListGroup>\n                <DescriptionListTerm>\n                  { clusters?.payload?.templates?.length || 0 }\n                </DescriptionListTerm>\n                <DescriptionListDescription>\n                  <Button\n                    component='a'\n                    variant='link'\n                    href={ `${release}ansible/insights/clusters` }>\n                    { intl.formatMessage(messages.totalClusters) }\n                  </Button>\n                </DescriptionListDescription>\n              </DescriptionListGroup>\n            </DescriptionList>\n          </FlexItem>\n        </Flex>\n      </Fragment>);\n  };\n\n  const renderAnalyticsOther = () =>\n    <Fragment>\n      <Title headingLevel=\"h4\">\n        { intl.formatMessage(messages.analyticsJobTitle) }\n      </Title>\n      <br/>\n      <Flex direction={ { default: 'column' } }>\n        <FlexItem className=\"pf-u-m-0\">\n          <JobsChart items={ jobsData?.payload?.items }/>\n        </FlexItem>\n        <FlexItem className=\"pf-u-m-0 pf-u-pt-0 pf-u-pb-0 pf-u-pl-lg\" >\n          <Bullseye>\n            <Button\n              component='a'\n              variant='link'\n              href={ `${release}ansible/insights/job-explorer` }>\n              { intl.formatMessage(messages.jobsExplorer) }\n            </Button>\n          </Bullseye>\n        </FlexItem>\n      </Flex>\n    </Fragment>;\n\n  const renderAnalyticsCards = () => {\n    if (isError) {\n      return <ErrorCard/>;\n    }\n    else if (isFetching) {\n      return (\n        <Section style={ { backgroundColor: 'white', minHeight: '100%' } }>\n          <Bullseye>\n            <Spinner isSVG />\n          </Bullseye>\n        </Section>\n      );\n    }\n    else {\n      return (\n        <Flex direction={ { default: 'column' } }>\n          <FlexItem>\n            <Flex className=\"ans-l-flex ans-l-flex-automation-analytics-card\">\n              <FlexItem>\n                { renderAnalyticsInfo() }\n              </FlexItem>\n              <Divider/>\n              <FlexItem>\n                { renderAnalyticsNotifications() }\n              </FlexItem>\n            </Flex>\n          </FlexItem>\n          <FlexItem>\n            <FlexItem>\n              { renderAnalyticsOther() }\n            </FlexItem>\n          </FlexItem>\n        </Flex>\n      );\n    }\n  };\n\n  return (\n    !isAnalyticsAvailable ?\n      <ConfigureAnalyticsCard/> :\n      <Fragment>\n        <Card className='ans-c-card-dashboard'>\n          <CardTitle>\n            <Title headingLevel=\"h3\">\n              { intl.formatMessage(messages.analyticsTitle) }\n            </Title>\n          </CardTitle>\n          <CardBody className=\"pf-u-pb-sm\">\n            { renderAnalyticsCards() }\n          </CardBody>\n        </Card>\n      </Fragment>\n  );\n};\n\nexport default AnalyticsCard;\n","import React from 'react';\nimport DashboardHeader from '../shared/dashboard-header';\nimport { Button, Flex, FlexItem, Grid, GridItem, PageSection, Stack, StackItem } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport ConfigureCard from '../shared/configure-card';\nimport HubCard from '../automation-hub/hub-card';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\n\nconst renderButtons = (intl) => (\n  <Flex>\n    <FlexItem>\n      <Button\n        isLarge\n        component='a'\n        variant='primary'\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={ `https://docs.ansible.com/ansible-tower/latest/html/quickinstall/index.html` }>\n        { intl.formatMessage(messages.configureLink) }\n      </Button>\n    </FlexItem>\n  </Flex>\n);\n\nconst renderAnalyticsConfigButton = (intl) => (\n  <Flex>\n    <FlexItem>\n      <Button\n        component='a'\n        variant='link'\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={ `https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html` }>\n        { intl.formatMessage(messages.configureAnalyticsLink) }&nbsp;\n        <ExternalLinkAltIcon />\n      </Button>\n    </FlexItem>\n  </Flex>\n);\n\nconst renderCatalogConfigButton = (intl) => (\n  <Flex>\n    <FlexItem>\n      <Button\n        component='a'\n        variant='link'\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={ `https://access.redhat.com/documentation/en-us/` +\n          `red_hat_ansible_automation_platform/1.2/html/getting_started_with_automation_services_catalog/index` }>\n        { intl.formatMessage(messages.configureCatalogLink) }&nbsp;\n        <ExternalLinkAltIcon />\n      </Button>\n    </FlexItem>\n  </Flex>\n);\n\nconst ConfigureAppPage = () => {\n  const intl = useIntl();\n\n  return <React.Fragment>\n    <DashboardHeader title={ intl.formatMessage(messages.noAppTitle) }\n      description={ intl.formatMessage(messages.configDescription) }\n      renderButtons={ () => renderButtons(intl) } />\n    <PageSection>\n      <Stack hasGutter=\"md\">\n        <StackItem>\n          <Grid hasGutter=\"xl\">\n            <GridItem md={ 6 } sm={ 12 } >\n              <ConfigureCard\n                title={ intl.formatMessage(messages.configureAnalyticsTitle) }\n                description={ intl.formatMessage(messages.configureAnalyticsDescription) }\n                renderButtons={ () => renderAnalyticsConfigButton(intl) }/>\n            </GridItem>\n            <GridItem md={ 6 } sm={ 12 } >\n              <ConfigureCard\n                title={ intl.formatMessage(messages.configureCatalogTitle) }\n                description={ intl.formatMessage(messages.configureCatalogDescription) }\n                renderButtons={ () => renderCatalogConfigButton(intl) }/>\n            </GridItem>\n          </Grid>\n        </StackItem>\n        <StackItem>\n          <HubCard/>\n        </StackItem>\n      </Stack>\n    </PageSection>\n  </React.Fragment>;\n};\n\nexport default ConfigureAppPage;\n","import React from 'react';\nimport DashboardHeader from './dashboard-header';\nimport { Button, Flex, FlexItem } from '@patternfly/react-core';\nimport ArrowRightIcon from '@patternfly/react-icons/dist/js/icons/arrow-right-icon';\nimport messages from '../../messages/messages';\nimport { useIntl } from 'react-intl';\n\nconst renderButtons = (intl) => (\n  <Flex>\n    <FlexItem>\n      <Button\n        isLarge\n        component='a'\n        variant='primary'\n        href={ `https://www.redhat.com/en/technologies/management/ansible/try-it` }>\n        { intl.formatMessage(messages.tryItButton) }\n      </Button>\n    </FlexItem>\n    <FlexItem>\n      <Button\n        component='a'\n        isLarge\n        variant='link'\n        target='_blank'\n        rel='noreferrer'\n        href='https://www.redhat.com/en/technologies/management/ansible'>\n        { intl.formatMessage(messages.learnMoreButton) } &nbsp;\n        <ArrowRightIcon />\n      </Button>\n    </FlexItem>\n  </Flex>\n);\n\nconst NoAppState = () => {\n  const intl = useIntl();\n\n  return <DashboardHeader title={ intl.formatMessage(messages.noAppTitle) }\n    description={ intl.formatMessage(messages.noAppDescription) }\n    renderButtons={ renderButtons } />;\n};\n\nexport default NoAppState;\n","import React from 'react';\nimport DashboardHeader from '../shared/dashboard-header';\nimport { PageSection, Stack, StackItem } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport HubCard from '../automation-hub/hub-card';\nimport CatalogCard from '../catalog/catalog-card';\nimport AnalyticsCard from '../analytics/analytics-card';\nimport { useSelector } from 'react-redux';\nimport ConfigureAppPage from './configure-app-page';\nimport NoAppState from '../shared/no-app-state';\n\nconst PlatformPage = () => {\n  const intl = useIntl();\n  const { isAnalyticsAvailable } = useSelector(\n    ({\n      analyticsReducer: {\n        isAnalyticsAvailable\n      }\n    }) => ({ isAnalyticsAvailable })\n  );\n\n  const { isHubAvailable } = useSelector(\n    ({\n      hubReducer: {\n        isHubAvailable: isHubAvailable\n      }\n    }) => ({ isHubAvailable })\n  );\n\n  const { isCatalogAvailable } = useSelector(\n    ({\n      catalogReducer: {\n        isCatalogAvailable\n      }\n    }) => ({ isCatalogAvailable })\n  );\n\n  if (!isAnalyticsAvailable && !isHubAvailable && !isCatalogAvailable) {\n    return <NoAppState/>;\n  }\n\n  if (isHubAvailable && !isAnalyticsAvailable && !isCatalogAvailable) {\n    return <ConfigureAppPage/>;\n  }\n\n  return <React.Fragment>\n    <DashboardHeader title={ intl.formatMessage(messages.overview) }\n      description={ '' }/>\n    <PageSection>\n      <Stack hasGutter=\"md\">\n        <StackItem>\n          <AnalyticsCard/>\n        </StackItem>\n        <StackItem>\n          <HubCard/>\n        </StackItem>\n        <StackItem>\n          <CatalogCard/>\n        </StackItem>\n      </Stack>\n    </PageSection>\n  </React.Fragment>;\n};\n\nexport default PlatformPage;\n","import React from 'react';\nimport PlatformPage from './platform-page';\n\nconst Dashboard = () => <PlatformPage />;\n\nexport default Dashboard;\n","import './marketing-banner.scss';\n\nimport { PageSection } from '@patternfly/react-core';\nimport React from 'react';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\n\nconst MarketingBanner = ({ className, hasGraphic, graphicRight, light1000, fullBleed, style, children }) => {\n\n  const MarketingBannerSectionClasses = classNames(\n    className,\n    'ans-c-marketing-banner',\n    { [`ans-m-with-graphic `]: hasGraphic },\n    { [`ans-m-graphic-right`]: graphicRight },\n    { [`ans-m-light-1000 pf-m-light-1000`]: light1000 },\n    { [`ans-m-full-bleed`]: fullBleed }\n  );\n\n  return <PageSection\n    className={ MarketingBannerSectionClasses }\n    style={ style }\n    isWidthLimited>\n    { children }\n  </PageSection>;\n};\n\nexport default MarketingBanner;\n\nMarketingBanner.propTypes = {\n  children: propTypes.any.isRequired,\n  className: propTypes.string,\n  style: propTypes.any,\n  graphicRight: propTypes.bool,\n  hasGraphic: propTypes.bool,\n  light1000: propTypes.bool,\n  fullBleed: propTypes.bool,\n  isWidthLimited: propTypes.bool\n};\n","import { Grid, GridItem, Flex, FlexItem, Title  } from '@patternfly/react-core';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport MarketingBanner from './marketing-banner';\n\nconst DashboardHeader = ({ title, description, renderButtons }) => {\n  const intl = useIntl();\n\n  return (\n    <MarketingBanner\n      hasGraphic\n      graphicRight\n      light1000\n      fullBleed\n\n      style={ {\n        '--ins-c-marketing-banner--graphic--width-on-md': '200px',\n        '--ins-c-marketing-banner--graphic--width-on-xl': '400px'\n      } }>\n      <Grid>\n        <GridItem>\n          <Flex direction={ { default: 'column' } }>\n            <FlexItem>\n              <Title headingLevel='h1' size='2xl'>\n                { title }\n              </Title>\n            </FlexItem>\n            { (description && description !== '') && <FlexItem spacer={ { default: 'spacer2xl' } }>\n              <div className='ins-c-width-limiter' style={ { '--ins-c-width-limiter--MaxWidth': '600px' } }>\n                <p className='ins-c-text--black-400'>{ description }</p>\n              </div>\n            </FlexItem> }\n            { renderButtons && <FlexItem>\n              { renderButtons(intl) }\n            </FlexItem>\n            }\n          </Flex>\n        </GridItem>\n      </Grid>\n    </MarketingBanner>\n  );\n};\n\nDashboardHeader.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  renderButtons: PropTypes.func\n};\n\nexport default DashboardHeader;\n","export const TRIAL_PAGE = 'https://www.redhat.com/en/technologies/management/ansible/console-trial';\nexport const BETA_TRIAL_PAGE = 'https://www.redhat.com/en/technologies/management/ansible/console-trial-beta';\nexport const ANSIBLE_CHECKSUM = 'ac44071ab32248022ee51eed7db2002a772178bfe03807cd08f67dbde58f1941';\nexport const RHEL_CHECKSUM = '1f78e705cd1d8897a05afa060f77d81ed81ac141c2465d4763c0382aa96cadd0';\n","const downloadFile = (href) => {\n  const link = document.createElement('a');\n\n  link.setAttribute('href', href);\n  link.setAttribute('target', '_self');\n  link.style.visibility = 'hidden';\n\n  document.body.appendChild(link);\n\n  link.click();\n\n  document.body.removeChild(link);\n};\n\nexport default downloadFile;\n","import { getAxiosInstance } from '../../helpers/shared/user-login';\nimport downloadFile from './download-file';\n\nconst downloadTrial = async (cheksum) => {\n  const token = await insights.chrome.auth.getToken();\n\n  try {\n    const url = await getAxiosInstance()\n    .get(`https://api.access.redhat.com/management/v1/images/${cheksum}/download`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/vnd.rhsm.noredirect+json'\n        }\n      }\n    );\n\n    downloadFile(url.body.href);\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nexport default downloadTrial;\n","/* eslint-disable max-len */\nimport { defineMessages } from 'react-intl';\n\nconst expiredMessages = defineMessages({\n  overviewLink: {\n    id: 'expired.overviewLink',\n    defaultMessage: 'Overview'\n  },\n  trialExpired: {\n    id: 'expired.trialExpired',\n    defaultMessage: 'Trial expired'\n  },\n  title: {\n    id: 'expired.title',\n    defaultMessage: 'Your product trial has expired'\n  },\n  description: {\n    id: 'expired.description',\n    defaultMessage: 'We hope you had a successful trial of Red Hat® Ansible® Automation Platform.'\n  },\n  wannaTry: {\n    id: 'expired.wannaTry',\n    defaultMessage: 'Want to try this product again?'\n  },\n  wannaTryText: {\n    id: 'expired.wannaTryText',\n    defaultMessage: 'You can continue using Red Hat®  Ansible® Automation Platform in a nonproduction environment, but you won’t have access to trial updates and related content until you’re eligible to start a new trial on {date}.'\n  },\n  readyBuy: {\n    id: 'expired.readyBuy',\n    defaultMessage: 'Ready to buy?'\n  },\n  readyBuyText: {\n    id: 'expired.readyBuyText',\n    defaultMessage: 'Upgrading to a fully supported version of Red Hat Ansible Automation Platform gives you added security and the technical expertise of our engineers, who can guide you through planning, deployment, and operation. Read more about the <a>value of a subscription</a>.'\n  },\n  sales: {\n    id: 'expired.sales',\n    defaultMessage: 'Sales'\n  },\n  salesText: {\n    id: 'expired.salesText',\n    defaultMessage: 'Get expert help selecting the right Red Hat Ansible Automation Platform option for your needs.'\n  },\n  salesButton: {\n    id: 'expired.salesButton',\n    defaultMessage: 'Contact sales'\n  },\n  partners: {\n    id: 'expired.xxx',\n    defaultMessage: 'Partners'\n  },\n  partnersText: {\n    id: 'expired.partnersText',\n    defaultMessage: 'Have a particular infrastructure challenge? Need industry-specific expertise? Connect with a Red Hat partner.'\n  },\n  partnersButton: {\n    id: 'expired.partnersButton',\n    defaultMessage: 'Find a partner'\n  },\n  xxx: {\n    id: 'expired.xxx',\n    defaultMessage: 'xxx'\n  }\n});\n\nexport default expiredMessages;\n","/* eslint-disable max-len */\n\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport ExclamationIcon from '@patternfly/react-icons/dist/js/icons/exclamation-circle-icon';\n\nimport { PageHeader } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport {\n  TextContent,\n  Text,\n  Breadcrumb,\n  BreadcrumbItem,\n  PageSection,\n  Card,\n  Divider,\n  CardBody,\n  Stack,\n  StackItem,\n  Grid,\n  GridItem,\n  CardFooter,\n  Button,\n  CardTitle,\n  Title,\n  FlexItem,\n  Flex\n} from '@patternfly/react-core';\n\nimport { DASHBOARD_ROUTE } from '../../constants/routes';\nimport Resources from './resources';\nimport expiredMessages from '../../messages/expired.messages';\nimport Logo from './logo';\nimport Link from './link';\n\nconst Expired = () => {\n  const intl = useIntl();\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <Breadcrumb>\n          <BreadcrumbItem component={ ({ href, ...props }) => <RouterLink to={ href } { ...props } /> } to={ DASHBOARD_ROUTE }>\n            { intl.formatMessage(expiredMessages.overviewLink) }\n          </BreadcrumbItem>\n          <BreadcrumbItem isActive>\n            { intl.formatMessage(expiredMessages.trialExpired) }\n          </BreadcrumbItem>\n        </Breadcrumb>\n        <TextContent>\n          <Flex spaceItems={ { default: 'spaceItemsSm' } } alignItems={ { default: 'alignItemsCenter' } }>\n            <FlexItem>\n              <ExclamationIcon size='md' color='var(--pf-global--danger-color--100)'/>\n            </FlexItem>\n            <FlexItem>\n              <Title headingLevel=\"h2\" size=\"lg\">\n                { intl.formatMessage(expiredMessages.title) }\n              </Title>\n            </FlexItem>\n          </Flex>\n          <Text className='pf-u-mt-md'>\n            { intl.formatMessage(expiredMessages.description) }\n          </Text>\n        </TextContent>\n      </PageHeader>\n      <PageSection>\n        <Stack hasGutter>\n          <StackItem>\n            <Card>\n              <CardBody className='pf-u-pb-0'>\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  { intl.formatMessage(expiredMessages.wannaTry) }\n                </Title>\n                <div className='pf-u-display-flex'>\n                  <div style={ { flexGrow: 1, alignSelf: 'center' } }>\n                    <TextContent>\n                      <Text>\n                        { intl.formatMessage(expiredMessages.wannaTryText, { date: '' }) }\n                      </Text>\n                    </TextContent>\n                  </div>\n                  <Logo />\n                </div>\n                <Divider className='pf-u-my-lg'/>\n                <Title headingLevel=\"h2\" size=\"xl\" className='pf-u-mb-md'>\n                  { intl.formatMessage(expiredMessages.readyBuy) }\n                </Title>\n                <div className='pf-u-display-flex pf-u-mb-md'>\n                  <div className='pf-u-mr-md'>\n                    <pfe-icon icon=\"rh-icon-support\" size=\"lg\" />\n                  </div>\n                  <div style={ { flexGrow: 1, alignSelf: 'center' } }>\n                    <TextContent>\n                      <Text>\n                        { intl.formatMessage(expiredMessages.readyBuyText, {\n                          a: (chunks) => <Link link=\"https://www.redhat.com/en/about/value-of-subscription\">{ chunks }</Link>\n                        }) }\n                      </Text>\n                    </TextContent>\n                  </div>\n                </div>\n                <Grid hasGutter>\n                  <GridItem md={ 6 }>\n                    <Card isFlat className='pf-u-px-md pf-u-h-100'>\n                      <CardTitle>\n                        { intl.formatMessage(expiredMessages.sales) }\n                      </CardTitle>\n                      <CardBody>\n                        { intl.formatMessage(expiredMessages.salesText) }\n                      </CardBody>\n                      <CardFooter>\n                        <Button component=\"a\" href=\"https://www.redhat.com/en/contact\" target=\"_blank\" rel=\"noopener noreferrer\">\n                          { intl.formatMessage(expiredMessages.salesButton) }\n                        </Button>\n                      </CardFooter>\n                    </Card>\n                  </GridItem>\n                  <GridItem md={ 6 }>\n                    <Card isFlat className='pf-u-px-md pf-u-h-100'>\n                      <CardTitle>\n                        { intl.formatMessage(expiredMessages.partners) }\n                      </CardTitle>\n                      <CardBody>\n                        { intl.formatMessage(expiredMessages.partnersText) }\n                      </CardBody>\n                      <CardFooter>\n                        <Button component=\"a\" href=\"https://redhat.secure.force.com/finder/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                          { intl.formatMessage(expiredMessages.partnersButton) }\n                        </Button>\n                      </CardFooter>\n                    </Card>\n                  </GridItem>\n                </Grid>\n                <Divider className='pf-u-my-lg'/>\n                <Resources />\n              </CardBody>\n            </Card>\n          </StackItem>\n        </Stack>\n      </PageSection>\n    </React.Fragment>\n  );\n};\n\nexport default Expired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Text } from '@patternfly/react-core';\n\nconst Link = ({ link, children }) => <Text\n  component=\"a\"\n  href={ link }\n  target=\"_blank\"\n  rel=\"noopener noreferrer\">\n  { children }\n</Text>;\n\nLink.propTypes = {\n  link: PropTypes.string,\n  children: PropTypes.node\n};\n\nexport default Link;\n","import React from 'react';\n\nconst Logo = () => <div className='ans-c-trial__logo-wrapper pf-u-pl-lg'>\n  <img\n    className=\"ans-c-trial__ansible-logo\"\n    alt=\"Ansible Automation Platform logo\"\n    src=\"/apps/frontend-assets/platform-logos/ansible-automation-platform.svg\"\n  />\n</div>;\n\nexport default Logo;\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\n\nimport DashboardHeader from '../shared/dashboard-header';\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionToggle,\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  PageSection,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  Title\n} from '@patternfly/react-core';\n\nimport messages from '../../messages/messages';\nimport trialMessages from '../../messages/trial.messages';\nimport Requirements from './requirements';\nimport Link from './link';\nimport { TRIAL_PAGE, BETA_TRIAL_PAGE } from './constants';\n\nconst Overview = () => {\n  const [activeFaq, openFaq] = useState();\n  const intl = useIntl();\n\n  const url = insights.chrome.isBeta() ? BETA_TRIAL_PAGE : TRIAL_PAGE;\n\n  const onClick = (index) => () => activeFaq === index ? openFaq(undefined) : openFaq(index);\n\n  const createAccordionItem = (index, values) => (<AccordionItem>\n    <AccordionToggle\n      isExpanded={ activeFaq === index }\n      onClick={ onClick(index) }\n    >\n      { intl.formatMessage(trialMessages[`faq${index}a`]) }\n    </AccordionToggle>\n    <AccordionContent\n      isHidden={ activeFaq !== index }\n    >\n      <TextContent>\n        { intl.formatMessage(trialMessages[`faq${index}b`], values) }\n      </TextContent>\n    </AccordionContent>\n  </AccordionItem>);\n\n  return <React.Fragment>\n    <DashboardHeader title={ intl.formatMessage(messages.overview) }\n      description={ '' }/>\n    <PageSection className='pf-u-pt-0 pf-u-mt-xs'>\n      <Stack hasGutter=\"md\">\n        <StackItem className='ans-c-trial__hero pf-u-pt-xl pf-u-pb-xl pf-u-pl-md pf-u-mb-0'>\n          <Title headingLevel=\"h1\" size=\"xl\" className='pf-u-mb-md'>\n            { intl.formatMessage(trialMessages.header) }\n          </Title>\n          <TextContent className='pf-u-mb-lg ans-c-trial__hero__description'>\n            <Text>\n              { intl.formatMessage(trialMessages.description) }\n            </Text>\n          </TextContent>\n          <Button className='pf-u-px-xl' component=\"a\" href={ url }>\n            { intl.formatMessage(trialMessages.startButton) }\n          </Button>\n        </StackItem>\n        <StackItem>\n          <Card>\n            <CardTitle>\n              { intl.formatMessage(trialMessages.adCardHeader) }\n            </CardTitle>\n            <CardBody>\n              <Stack hasGutter>\n                { intl.formatMessage(trialMessages.adCardContent, {\n                  li: (chunks) => <StackItem>\n                    <div className='pf-u-display-flex'>\n                      <div>\n                        <CheckCircleIcon className=\"pf-u-mr-lg\" size='lg' color='var(--pf-global--success-color--100)'/>\n                      </div>\n                      <div style={ { flexGrow: 1, alignSelf: 'center' } }>\n                        <Text>{ chunks }</Text>\n                      </div>\n                    </div>\n                  </StackItem>\n                }) }\n              </Stack>\n            </CardBody>\n            <CardFooter>\n              <TextContent>\n                <Text component='small'>\n                  { intl.formatMessage(trialMessages.adCardFooter, {\n                    a: (chunks) => <Text\n                      component='a'\n                      href={ `${window.location.origin}${window.location.pathname}#trial-terms` }\n                    >\n                      { chunks }\n                    </Text>\n                  }) }\n                </Text>\n              </TextContent>\n            </CardFooter>\n          </Card>\n        </StackItem>\n        <StackItem>\n          <Card>\n            <CardBody>\n              <Requirements />\n            </CardBody>\n          </Card>\n        </StackItem>\n        <StackItem>\n          <Card>\n            <CardTitle>\n              { intl.formatMessage(trialMessages.faqTitle) }\n            </CardTitle>\n          </Card>\n          <Accordion isBordered displaySize=\"large\">\n            { createAccordionItem(1, {\n              a: (chunks) => <Link link=\"https://access.redhat.com/\">{ chunks }</Link>\n            }) }\n            { createAccordionItem(2) }\n            { createAccordionItem(3, {\n              p: (chunks) => <Text>{ chunks }</Text>,\n              ul: (chunks) => <TextList >{ chunks }</TextList>,\n              li: (chunks) => <TextListItem >{ chunks }</TextListItem>,\n              a: (chunks) => <Link link=\"https://access.redhat.com/documentation/en-US/\">{ chunks }</Link>,\n              a1: (chunks) => <Link link=\"https://access.redhat.com/search/#/\">{ chunks }</Link>\n            }) }\n            { createAccordionItem(4) }\n            { createAccordionItem(5) }\n            { createAccordionItem(6, {\n              a: (chunks) => <Link link=\"https://www.redhat.com/en/products/trials\">{ chunks }</Link>,\n              a1: (chunks) => <Link link=\"http://www.redhat.com/en/about/contact/sales\">{ chunks }</Link>\n            }) }\n            { createAccordionItem(7, {\n              p: (chunks) => <Text>{ chunks }</Text>,\n              ol: (chunks) => <TextList component='ol'>{ chunks }</TextList>,\n              li: (chunks) => <TextListItem >{ chunks }</TextListItem>,\n              a: (chunks) => <Link link=\"http://www.redhat.com/en/about/contact/sales\">{ chunks }</Link>\n            }) }\n            { createAccordionItem(8, {\n              a: (chunks) => <Link link=\"http://www.redhat.com/en/about/contact/sales\">{ chunks }</Link>\n            }) }\n            { createAccordionItem(9, {\n              ul: (chunks) => <TextList >{ chunks }</TextList>,\n              li: (chunks) => <TextListItem >{ chunks }</TextListItem>,\n              a: (chunks) => <Link link=\"http://www.redhat.com/en/about/contact/sales\">{ chunks }</Link>\n            }) }\n          </Accordion>\n        </StackItem>\n        <StackItem className='pf-u-mt-md pf-u-p-md'>\n          <Title headingLevel=\"h2\" size=\"xl\" className='pf-u-mb-lg' id=\"trial-terms\">\n            { intl.formatMessage(trialMessages.footerTitle) }\n          </Title>\n          <TextContent className='pf-u-font-size-sm'>\n            { intl.formatMessage(trialMessages.footerContent, {\n              p: (chunks) => <Text>{ chunks }</Text>,\n              ul: (chunks) => <TextList className='pf-u-ml-0'>{ chunks }</TextList>,\n              li: (chunks) => <TextListItem >{ chunks }</TextListItem>\n            }) }\n          </TextContent>\n        </StackItem>\n      </Stack>\n    </PageSection>\n  </React.Fragment>;\n};\n\nexport default Overview;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport {\n  Button,\n  Stack,\n  StackItem,\n  TextContent,\n  Title\n} from '@patternfly/react-core';\n\nimport trialMessages from '../../messages/trial.messages';\nimport Link from './link';\nimport downloadTrial from './download-trial';\nimport { RHEL_CHECKSUM } from './constants';\n\nconst Requirements = ({ afterTrial }) => {\n  const intl = useIntl();\n\n  const installText = afterTrial ? trialMessages.installRHETrial : trialMessages.reqCardRHELContent;\n  const startInstallText = afterTrial ? trialMessages.startInstallTrial : trialMessages.reqCardBreakContent;\n\n  return (<React.Fragment>\n    <TextContent>\n      <Title headingLevel=\"h2\" size=\"lg\" className='pf-u-mb-lg'>\n        { intl.formatMessage(trialMessages.reqCardHeader) }\n      </Title>\n    </TextContent>\n    <Stack>\n      <StackItem>\n        <div className='pf-u-display-flex'>\n          <div className='pf-u-mr-md'>\n            <pfe-icon icon=\"rh-icon-install\" size=\"lg\" />\n          </div>\n          <div style={ { flexGrow: 1, alignSelf: 'center' } }>\n            <TextContent>\n              <Title headingLevel=\"h2\" size=\"lg\" className='pf-u-mb-sm'>\n                { intl.formatMessage(trialMessages.reqCardRHELTitle) }\n              </Title>\n              { intl.formatMessage(installText, {\n                a1: (chunks) => <Link link=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/performing_a_standard_rhel_installation/index\">{ chunks }</Link>,\n                button: (chunks) => <Button isInline variant='link' onClick={ () => downloadTrial(RHEL_CHECKSUM) }>{ chunks }</Button>\n              }) }\n            </TextContent>\n          </div>\n        </div>\n      </StackItem>\n      <StackItem>\n        <div className='pf-u-display-flex'>\n          <div className='pf-u-mr-md'>\n            <pfe-icon icon=\"rh-icon-clock-time-pass\" size=\"lg\" />\n          </div>\n          <div style={ { flexGrow: 1, alignSelf: 'center' } }>\n            <TextContent>\n              <Title headingLevel=\"h2\" size=\"lg\" className='pf-u-mb-sm'>\n                { intl.formatMessage(trialMessages.reqCardBreakTitle) }\n              </Title>\n              { intl.formatMessage(startInstallText, {\n                a: (chunks) => <Link link=\"https://console.redhat.com/ansible/automation-hub\">{ chunks }</Link>\n              }) }\n            </TextContent>\n          </div>\n        </div>\n      </StackItem>\n    </Stack>\n  </React.Fragment>);\n};\n\nRequirements.propTypes = {\n  afterTrial: PropTypes.bool\n};\n\nexport default Requirements;\n","/* eslint-disable max-len */\n\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport ExternalLinkIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport ArrowRightIcon from '@patternfly/react-icons/dist/js/icons/arrow-right-icon';\n\nimport {\n  TextContent,\n  Text,\n  Card,\n  CardBody,\n  Button,\n  CardFooter,\n  Grid,\n  GridItem,\n  Title,\n  Flex,\n  FlexItem\n} from '@patternfly/react-core';\n\nimport successMessages from '../../messages/success.messages';\n\nconst Resources = () => {\n  const intl = useIntl();\n\n  return <React.Fragment>\n    <TextContent>\n      <Title headingLevel=\"h2\" size=\"xl\">\n        { intl.formatMessage(successMessages.resources) }\n      </Title>\n      <Text className='pf-u-mb-lg'>\n        { intl.formatMessage(successMessages.resourcesDescription) }\n      </Text>\n    </TextContent>\n    <Grid hasGutter>\n      <GridItem md={ 6 }>\n        <Card isFlat className='pf-u-px-md pf-u-h-100'>\n          <CardBody>\n            { intl.formatMessage(successMessages.instructionsText) }\n          </CardBody>\n          <CardFooter>\n            <Button variant=\"link\" isLarge isInline component=\"a\" href=\"https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/2.1/html/red_hat_ansible_automation_platform_installation_guide/index\" target=\"_blank\" rel=\"noopener noreferrer\">\n              { intl.formatMessage(successMessages.instructionsLink) } <ArrowRightIcon />\n            </Button>\n          </CardFooter>\n        </Card>\n      </GridItem>\n      <GridItem md={ 6 }>\n        <Card isFlat className='pf-u-px-md pf-u-h-100'>\n          <CardBody>\n            { intl.formatMessage(successMessages.documentationText) }\n          </CardBody>\n          <CardFooter>\n            <Button variant=\"link\" isLarge isInline component=\"a\" href=\"https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/2.1\" target=\"_blank\" rel=\"noopener noreferrer\">\n              { intl.formatMessage(successMessages.documentationLink) } <ArrowRightIcon />\n            </Button>\n          </CardFooter>\n        </Card>\n      </GridItem>\n      <GridItem md={ 6 }>\n        <Card isFlat className='pf-u-px-md pf-u-h-100'>\n          <CardBody>\n            { intl.formatMessage(successMessages.otherVersionsText) }\n          </CardBody>\n          <CardFooter>\n            <Button variant=\"link\" isLarge isInline component=\"a\" href=\"https://access.redhat.com/downloads/content/480\" target=\"_blank\" rel=\"noopener noreferrer\">\n              { intl.formatMessage(successMessages.otherVersionsLink) } <ArrowRightIcon />\n            </Button>\n          </CardFooter>\n        </Card>\n      </GridItem>\n      <GridItem md={ 6 }>\n        <Card isFlat className='pf-u-px-md pf-u-h-100'>\n          <CardBody>\n            { intl.formatMessage(successMessages.customerServiceText) }\n          </CardBody>\n          <CardFooter>\n            <Button variant=\"link\" isLarge isInline component=\"a\" href=\"https://www.redhat.com/en/contact?contact=customer-service#tab.contact-method.1\" target=\"_blank\" rel=\"noopener noreferrer\">\n              { intl.formatMessage(successMessages.customrServiceLink) } <ArrowRightIcon />\n            </Button>\n          </CardFooter>\n        </Card>\n      </GridItem>\n    </Grid>\n    <Flex className='pf-u-my-2xl' justifyContent={ { default: 'justifyContentCenter' } }>\n      <FlexItem>\n        <Button variant=\"tertiary\" icon={ <ExternalLinkIcon /> } iconPosition=\"right\" component=\"a\" href=\"https://www.redhat.com/en/products/trials/faqs\" target=\"_blank\" rel=\"noopener noreferrer\">\n          { intl.formatMessage(successMessages.faqLink) }\n        </Button>\n      </FlexItem>\n      <FlexItem>\n        <Button variant=\"tertiary\" icon={ <ExternalLinkIcon /> } iconPosition=\"right\" component=\"a\" href=\"https://www.redhat.com/en/products/trials\" target=\"_blank\" rel=\"noopener noreferrer\">\n          { intl.formatMessage(successMessages.allTrials) }\n        </Button>\n      </FlexItem>\n    </Flex>\n  </React.Fragment>;\n};\n\nexport default Resources;\n","/* eslint-disable max-len */\n\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport DownloadIcon from '@patternfly/react-icons/dist/js/icons/download-icon';\n\nimport { PageHeader } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport {\n  TextContent,\n  Text,\n  Breadcrumb,\n  BreadcrumbItem,\n  PageSection,\n  Card,\n  Divider,\n  CardBody,\n  Stack,\n  StackItem,\n  Button,\n  TextList,\n  TextListItem,\n  Flex,\n  FlexItem,\n  Title\n} from '@patternfly/react-core';\n\nimport { DASHBOARD_ROUTE } from '../../constants/routes';\nimport successMessages from '../../messages/success.messages';\nimport Requirements from './requirements';\nimport Resources from './resources';\nimport Logo from './logo';\nimport Link from './link';\nimport downloadTrial from './download-trial';\nimport { ANSIBLE_CHECKSUM } from './constants';\n\nconst Success = () => {\n  const intl = useIntl();\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <Breadcrumb>\n          <BreadcrumbItem component={ ({ href, ...props }) => <RouterLink to={ href } { ...props } /> } to={ DASHBOARD_ROUTE }>\n            { intl.formatMessage(successMessages.overviewLink) }\n          </BreadcrumbItem>\n          <BreadcrumbItem isActive>\n            { intl.formatMessage(successMessages.download) }\n          </BreadcrumbItem>\n        </Breadcrumb>\n        <TextContent>\n          <Flex spaceItems={ { default: 'spaceItemsSm' } } alignItems={ { default: 'alignItemsCenter' } }>\n            <FlexItem>\n              <CheckCircleIcon size='md' color='var(--pf-global--success-color--100)'/>\n            </FlexItem>\n            <FlexItem>\n              <Title headingLevel=\"h2\" size=\"lg\">\n                { intl.formatMessage(successMessages.title) }\n              </Title>\n            </FlexItem>\n          </Flex>\n          <Text className='pf-u-mt-md'>\n            { intl.formatMessage(successMessages.description) }\n          </Text>\n          <Text component='small'>\n            { intl.formatMessage(successMessages.titleFooter) }\n          </Text>\n        </TextContent>\n      </PageHeader>\n      <PageSection>\n        <Stack hasGutter>\n          <StackItem>\n            <Card>\n              <CardBody>\n                <Title headingLevel=\"h2\" size=\"xl\" className='pf-u-mb-md'>\n                  { intl.formatMessage(successMessages.installation) }\n                </Title>\n                <div className='pf-u-display-flex'>\n                  <div className='pf-u-mr-md'>\n                    <pfe-icon icon=\"rh-icon-install\" size=\"lg\" />\n                  </div>\n                  <div style={ { flexGrow: 1, alignSelf: 'center' } }>\n                    <TextContent>\n                      <Button icon={ <DownloadIcon /> } className=\"pf-u-mb-md\" onClick={ () => downloadTrial(ANSIBLE_CHECKSUM) }>\n                        { intl.formatMessage(successMessages.startDownload) }\n                      </Button>\n                      <Text>\n                        { intl.formatMessage(successMessages.downloadNote, {\n                          a: (chunks) => <Link link=\"https://access.redhat.com/downloads/content/480\">{ chunks }</Link>\n                        }) }\n                      </Text>\n                    </TextContent>\n                  </div>\n                  <Logo />\n                </div>\n                <Divider className='pf-u-my-lg'/>\n                <Requirements afterTrial />\n                <Divider className='pf-u-my-lg'/>\n                <TextContent>\n                  <Title headingLevel=\"h2\" size=\"xl\">\n                    { intl.formatMessage(successMessages.nextSteps) }\n                  </Title>\n                  <div className='pf-u-display-flex pf-u-mb-lg'>\n                    <div className='pf-u-mr-md'>\n                      <Title headingLevel=\"h2\" size=\"2xl\" className='ans-c-trial__number'>\n                        1\n                      </Title>\n                    </div>\n                    <div style={ { flexGrow: 1, alignSelf: 'center' } }>\n                      <Title headingLevel=\"h2\" size=\"xl\">\n                        { intl.formatMessage(successMessages.deployAnsible) }\n                      </Title>\n                      <TextContent>\n                        { intl.formatMessage(successMessages.deployAnsibleText,\n                          {\n                            ul: (chunks) => <TextList className='pf-u-ml-0'>{ chunks }</TextList>,\n                            li: (chunks) => <TextListItem className='pf-u-mt-0' >{ chunks }</TextListItem>,\n                            a: (chunks) => <Link link=\"https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/2.1/html/red_hat_ansible_automation_platform_installation_guide/index\">{ chunks }</Link>,\n                            a1: (chunks) => <Link link=\"https://docs.ansible.com/automation-controller/latest/html/quickstart/index.html\">{ chunks }</Link>,\n                            a2: (chunks) => <Link link=\"https://www.redhat.com/en/services/training/do007-ansible-essentials-simplicity-automation-technical-overview\">{ chunks }</Link>\n                          })\n                        }\n                      </TextContent>\n                    </div>\n                  </div>\n                  <div className='pf-u-display-flex'>\n                    <div className='pf-u-mr-md'>\n                      <Title headingLevel=\"h2\" size=\"2xl\" className='ans-c-trial__number'>\n                        2\n                      </Title>\n                    </div>\n                    <div style={ { flexGrow: 1, alignSelf: 'center' } }>\n                      <Title headingLevel=\"h2\" size=\"xl\">\n                        { intl.formatMessage(successMessages.learnAnsible) }\n                      </Title>\n                      <TextContent>\n                        { intl.formatMessage(successMessages.learnAnsibleText, {\n                          a: (chunks) => <Link link=\"https://www.redhat.com/en/technologies/management/ansible/features#automation-execution-environments\">{ chunks }</Link>\n                        }) }\n                      </TextContent>\n                    </div>\n                  </div>\n                </TextContent>\n              </CardBody>\n            </Card>\n          </StackItem>\n          <StackItem>\n            <Card>\n              <CardBody className='pf-u-pb-0'>\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  { intl.formatMessage(successMessages.support) }\n                </Title>\n                <div className='pf-u-display-flex'>\n                  <div className='pf-u-mr-md'>\n                    <pfe-icon icon=\"rh-icon-support\" size=\"lg\" />\n                  </div>\n                  <div style={ { flexGrow: 1, alignSelf: 'center' } }>\n                    <TextContent>\n                      <Text>\n                        { intl.formatMessage(successMessages.supportText) }\n                      </Text>\n                    </TextContent>\n                  </div>\n                </div>\n                <Divider className='pf-u-my-lg'/>\n                <Resources />\n              </CardBody>\n            </Card>\n          </StackItem>\n        </Stack>\n      </PageSection>\n    </React.Fragment>\n  );\n};\n\nexport default Success;\n","import axios from 'axios';\nimport { stringify } from 'qs';\n\nconst axiosInstance = axios.create({\n  paramsSerializer: (params) => stringify(params)\n});\n\nconst resolveInterceptor = (response) => response.data || response;\nconst errorInterceptor = (error = {}) => {\n  const requestId = error.response?.headers?.['x-rh-insights-request-id'];\n  throw requestId ? { ...error.response, requestId } : { ...error.response };\n};\n\n// check identity before each request. If the token is expired it will log out user\naxiosInstance.interceptors.request.use(async (config) => {\n  await window.insights.chrome.auth.getUser();\n  return config;\n});\naxiosInstance.interceptors.response.use(resolveInterceptor);\naxiosInstance.interceptors.response.use(undefined, errorInterceptor);\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n\nconst grapqlInstance = axios.create();\ngrapqlInstance.interceptors.request.use(async (config) => {\n  await window.insights.chrome.auth.getUser();\n  return config;\n});\n/**\n * Graphql does not return error response when the qery fails.\n * Instead it returns 200 response with error object.\n * We catch it and throw it to trigger notification middleware\n */\ngrapqlInstance.interceptors.response.use(({ data }) => {\n  if (data.errors) {\n    throw {\n      message: data.errors[0].errorType,\n      data: data.errors[0].message\n    };\n  }\n\n  return data;\n});\n\nexport function getGraphqlInstance() {\n  return grapqlInstance;\n}\n","import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  errorStateTitle: {\n    id: 'error.state.title',\n    defaultMessage: 'Something went wrong'\n  },\n  errorStateDescription: {\n    id: 'error.state.description',\n    defaultMessage:\n    // eslint-disable-next-line max-len\n      'There was a problem processing the request. Please try again. <br></br> If the problem persists, contact {supportLink} or check our {statusLink} page for known outages.'\n  },\n  analyticsTitle: {\n    id: 'analytics.title',\n    defaultMessage: 'Insights Ansible Automation Platform'\n  },\n  analyticsCardDescription: {\n    id: 'analytics.description',\n    defaultMessage: 'Gain insights into your deployments through visual dashboards and organization statistics calculate ' +\n        'your return on investment and explore automation processes details.'\n  },\n  analyticsJobTitle: {\n    id: 'analytics.jobs.title',\n    defaultMessage: 'Job status'\n  },\n  analyticsCardNotificationsTitle: {\n    id: 'analytics.notifications.title',\n    defaultMessage: 'Notifications'\n  },\n  totalClusters: {\n    id: 'analytics.total.clusters',\n    defaultMessage: 'Total clusters'\n  },\n  jobsExplorer: {\n    id: 'analytics.jobs.explorer',\n    defaultMessage: 'View Job Explorer'\n  },\n  timeDayLegend: {\n    id: 'analytics.time.day.legend',\n    defaultMessage: 'Time: Day'\n  },\n  jobsAcrossClusters: {\n    id: 'analytics.jobs.across.clusters',\n    defaultMessage: 'Jobs across clusters'\n  },\n  clusterTitle: {\n    id: 'analytics.clusters.title',\n    defaultMessage: 'Clusters'\n  },\n  critical: {\n    id: 'analytics.critical',\n    defaultMessage: 'Critical'\n  },\n  warning: {\n    id: 'analytics.warning',\n    defaultMessage: 'Warnings'\n  },\n  catalogTitle: {\n    id: 'catalog.title',\n    defaultMessage: 'Automation Services Catalog'\n  },\n  catalogCardDescription: {\n    id: 'catalog.description',\n    defaultMessage: 'Collect and distribute automation content, govern content by approval processes and assure sign-off by assigned groups.'\n  },\n  products: {\n    id: 'catalog.products',\n    defaultMessage: 'Products'\n  },\n  portfolios: {\n    id: 'catalog.portfolios',\n    defaultMessage: 'Portfolios'\n  },\n  platforms: {\n    id: 'catalog.platforms',\n    defaultMessage: 'Platforms'\n  },\n  latestOrderTitle: {\n    id: 'catalog.latestOrder',\n    defaultMessage: 'Latest orders'\n  },\n  hubTitle: {\n    id: 'hub.title',\n    defaultMessage: 'Automation Hub'\n  },\n  noOrdersTitle: {\n    id: 'noOrders.title',\n    defaultMessage: 'No orders yet'\n  },\n  noOrdersDescription: {\n    id: 'noOrdersDescription',\n    defaultMessage: 'Orders show up here when an order is placed.'\n  },\n  hubCardDescription: {\n    id: 'hub.description',\n    defaultMessage: 'Find and use content that is supported by Red Hat and our partners to deliver reassurance for the most demanding environments'\n  },\n  hubCardCertifiedCollectionTitle: {\n    id: 'hub.certified.title',\n    defaultMessage: 'Certified Ansible Collections'\n  },\n  hubCardCertifiedCollectionDescription: {\n    id: 'hub.certified.description',\n    defaultMessage: 'View Ansible Content Collections certified and supported by Red Hat. ' +\n        'Download collections or sync them to your local repositories.'\n  },\n  hubCardFeaturedCollectionTitle: {\n    id: 'hub.featured.title',\n    defaultMessage: 'Featured collection'\n  },\n  partners: {\n    id: 'hub.partners',\n    defaultMessage: 'Partners'\n  },\n  collections: {\n    id: 'hub.collections',\n    defaultMessage: 'Collections'\n  },\n  syncCollections: {\n    id: 'hub.syncCollections',\n    defaultMessage: 'Collections set to sync'\n  },\n  syncCollectionsTooltip: {\n    id: 'hub.syncCollectionsTooltip',\n    defaultMessage: 'This is the number of collections that your organization will sync if you have connected to Private Hub.'\n  },\n\n  modules: {\n    id: 'hub.modules',\n    defaultMessage: 'Modules'\n  },\n  roles: {\n    id: 'hub.roles',\n    defaultMessage: 'Roles'\n  },\n  plugins: {\n    id: 'hub.plugins',\n    defaultMessage: 'Plugins'\n  },\n  overview: {\n    id: 'ansible.overview',\n    defaultMessage: 'Overview'\n  },\n  noAppTitle: {\n    id: 'no.app.title',\n    defaultMessage: 'Get started with Red Hat Ansible Automation Platform'\n  },\n  noAppDescription: {\n    id: 'no.app.description',\n    defaultMessage: 'Red Hat Ansible Automation Platform simplifies the development and operation of automation' +\n        ' workloads across diverse hybrid environments using the Automation Controller, certified and supported content' +\n        ' collections, and the hosted services on cloud.redhat.com'\n  },\n  configureLink: {\n    id: 'configure.button',\n    defaultMessage: 'Install and configure your infrastructure'\n  },\n  tryItButton: {\n    id: 'try.it.button',\n    defaultMessage: 'Try it free'\n  },\n  learnMoreButton: {\n    id: 'learn.more.button',\n    defaultMessage: 'Learn more'\n  },\n  configDescription: {\n    id: 'config.description',\n    defaultMessage: 'Install and configure your Ansible Automation Controller clusters. Once your Ansible Automation ' +\n        'Controller infrastructure is in place, connect it to the hosted services available on cloud.redhat.com.' +\n        'Learn how connect to each service in the tiles below.'\n  },\n  configureAnalyticsTitle: {\n    id: 'configure.analytics.title',\n    defaultMessage: 'Connect Insights for Ansible Automation Platform'\n  },\n  configureAnalyticsDescription: {\n    id: 'configure.analytics.description',\n    defaultMessage: 'Gain insights into your deployments through visual dashboards and organization statistics, ' +\n        'calculate your return on investment, and explore automation processes details'\n  },\n  configureCatalogTitle: {\n    id: 'configure.catalog.title',\n    defaultMessage: 'Connect Automation Services Catalog'\n  },\n  configureCatalogDescription: {\n    id: 'configure.catalog.description',\n    defaultMessage: 'Use Automation Services Catalog to collect and distribute automation content, govern your content by designing ' +\n        'and attaching approval processes, and ensure required sign-off is obtained by assigned organizational groups.'\n  },\n  catalogCardLatestOrdersTitle: {\n    id: 'catalog.card.orders.title',\n    defaultMessage: 'Latest orders'\n  },\n  catalogCardFeaturedProduct: {\n    id: 'catalog.card.featured.title',\n    defaultMessage: 'Latest created product'\n  },\n  viewMore: {\n    id: 'labels.view.more',\n    defaultMessage: 'View more'\n  },\n  configureAnalyticsLink: {\n    id: 'configure.analytics.link',\n    defaultMessage: 'Configure Insights Ansible Automation Platform'\n  },\n  configureCatalogLink: {\n    id: 'configure.catalog.link',\n    defaultMessage: 'Configure Automation Services Catalog'\n  }\n});\n\nexport default messages;\n","/* eslint-disable max-len */\nimport { defineMessages } from 'react-intl';\n\nconst successMessages = defineMessages({\n  overviewLink: {\n    id: 'success.overviewLink',\n    defaultMessage: 'Overview'\n  },\n  download: {\n    id: 'success.download',\n    defaultMessage: 'Download'\n  },\n  title: {\n    id: 'success.title',\n    defaultMessage: 'Your product trial is underway'\n  },\n  description: {\n    id: 'success.description',\n    defaultMessage: 'Your Red Hat® Ansible® Automation Platform product trial will last 60 days from your initial start date. (We’ve also emailed you this information for easy reference.)'\n  },\n  titleFooter: {\n    id: 'success.titleFooter',\n    defaultMessage: 'This trial is not intended for production use. By proceeding, you agree to the product trial terms.'\n  },\n  installation: {\n    id: 'success.installation',\n    defaultMessage: 'Installation'\n  },\n  startDownload: {\n    id: 'success.startDownload',\n    defaultMessage: 'Start your download'\n  },\n  downloadNote: {\n    id: 'success.downloadNote',\n    defaultMessage: 'Looking for a previous version of this product? <a>Start here</a>. '\n  },\n  nextSteps: {\n    id: 'success.nextSteps',\n    defaultMessage: 'Next steps'\n  },\n  deployAnsible: {\n    id: 'success.deployAnsible',\n    defaultMessage: 'Deploy Red Hat Ansible Automation Platform '\n  },\n  deployAnsibleText: {\n    id: 'success.deployAnsibleText',\n    defaultMessage: `<ul>\n<li>First, <a>install</a> Ansible Automation Platform.</li>\n<li>Then, <a1>create and launch</a1> your first automation job.</li>\n<li>Take the no-cost <a2>Ansible Basics: Automation Technical Overview</a2> online course.</li>\n</ul>`\n  },\n  learnAnsible: {\n    id: 'success.learnAnsible',\n    defaultMessage: 'Learn about Red Hat Ansible Automation Platform'\n  },\n  learnAnsibleText: {\n    id: 'success.learnAnsibleText',\n    defaultMessage: `Read about <a>portable execution environments</a>, a flexible foundation on which to build and deploy automation.`\n  },\n  support: {\n    id: 'success.support',\n    defaultMessage: 'Need support?'\n  },\n  supportText: {\n    id: 'success.supportText',\n    defaultMessage: 'If you have questions about your product trial, contact the support team at 888-RED-HAT-1 or 919-754-3700, then select the menu prompt for Customer Service.'\n  },\n  resources: {\n    id: 'success.resources',\n    defaultMessage: 'Helpful resources'\n  },\n  resourcesDescription: {\n    id: 'success.resourcesDescription',\n    defaultMessage: 'To make the most of your product trial, check out these resources.'\n  },\n  instructionsText: {\n    id: 'success.instructionsText',\n    defaultMessage: 'Get requirements and recommended steps for your installation.'\n  },\n  instructionsLink: {\n    id: 'success.instructionsLink',\n    defaultMessage: 'Read the installation instructions'\n  },\n  documentationText: {\n    id: 'success.documentationText',\n    defaultMessage: 'Find release notes, planning recommendations, and other guidance for your trial.'\n  },\n  documentationLink: {\n    id: 'success.documentationLink',\n    defaultMessage: 'Browse product documentation'\n  },\n  otherVersionsText: {\n    id: 'success.otherVersionsText',\n    defaultMessage: 'Find other versions and images of the Red Hat product you’re trying.'\n  },\n  otherVersionsLink: {\n    id: 'success.otherVersionsLink',\n    defaultMessage: 'Access other downloads'\n  },\n  customerServiceText: {\n    id: 'success.customerServiceText',\n    defaultMessage: 'Get answers to questions about your trial or Red Hat products. (Note: Customer Service doesn\\'t provide break/fix or triage support for self-supported product trials.)'\n  },\n  customrServiceLink: {\n    id: 'success.customrServiceLink',\n    defaultMessage: 'Contact Customer Service'\n  },\n  faqLink: {\n    id: 'success.faqLink',\n    defaultMessage: 'See product trial FAQs'\n  },\n  allTrials: {\n    id: 'success.allTrials',\n    defaultMessage: 'See all product trials'\n  }\n});\n\nexport default successMessages;\n","/* eslint-disable max-len */\nimport { defineMessages } from 'react-intl';\n\nconst trialMessages = defineMessages({\n  header: {\n    id: 'trial.header',\n    defaultMessage: 'Try Red Hat Ansible Automation Platform'\n  },\n  description: {\n    id: 'trial.description',\n    defaultMessage: 'See how your organization can benefit from scalable automation with a Red Hat® Ansible® Automation Platform trial.'\n  },\n  startButton: {\n    id: 'trial.startButton',\n    defaultMessage: 'Start your trial'\n  },\n  adCardHeader: {\n    id: 'trial.adCardHeader',\n    defaultMessage: 'What you get with this product trial'\n  },\n  adCardContent: {\n    id: 'trial.addCardContent',\n    defaultMessage: `<li>A single, 60-day, self-supported subscription to Red Hat® Ansible® Automation Platform for installation on Red Hat Enterprise Linux® (a subscription to Red Hat Enterprise Linux is included with this product trial, if not already installed)</li>\n<li>Access to Red Hat's award-winning Customer Portal, including documentation, helpful videos, discussions, and more</li>\n<li>A single entitlement to all available versions of this product</li>\n<li>Access to Red Hat Insights for Red Hat Ansible Automation Platform</li>\n<li>Access to Red Hat Smart Management (included with Red Hat Enterprise Linux)</li>\n<li>Access to Red Hat Ansible Automation Platform hosted services on Red Hat Hybrid Cloud Console</li>`\n  },\n  adCardFooter: {\n    id: 'trial.adCardFooter',\n    defaultMessage: 'This product trial is not intended for production use. By proceeding, you agree to the <a>product trial terms</a>.'\n  },\n  reqCardHeader: {\n    id: 'trial.reqCardHeader',\n    defaultMessage: 'Requirements to get started'\n  },\n  reqCardRHELTitle: {\n    id: 'trial.reqCardRHELTitle',\n    defaultMessage: 'Install Red Hat Enterprise Linux'\n  },\n  reqCardRHELContent: {\n    id: 'trial.reqCardRHELContent',\n    defaultMessage: 'You need to run Red Hat Enterprise Linux as your operating system for this product trial. We’ll provide next steps to download and install once your Ansible Automation Platform trial has been activated.'\n  },\n  reqCardBreakTitle: {\n    id: 'trial.reqCardBreakTitle',\n    defaultMessage: 'Start the installation'\n  },\n  reqCardBreakContent: {\n    id: 'trial.reqCardBreakContent',\n    defaultMessage: 'You may need to wait up to 30 minutes to access hosted services after the trial subscription is activated.'\n  },\n  faq1a: {\n    id: 'trial.faq1a',\n    defaultMessage: 'What is a product trial? How is a Red Hat product trial different from a traditional licensed software trial?'\n  },\n  faq1b: {\n    id: 'trial.faq1b',\n    defaultMessage: 'Red Hat® product trials offer all the benefits included in a Red Hat subscription. But Red Hat product trials are more than just access to the latest code. They provide access to all versions of the software, to patches and other software updates, and to our award-winning <a>Red Hat Customer Portal</a>.'\n  },\n  faq2a: {\n    id: 'trial.faq2a',\n    defaultMessage: 'May I run product trial software in a production environment?'\n  },\n  faq2b: {\n    id: 'trial.faq2b',\n    defaultMessage: 'Product trials are not intended for production environments. Using product trials in a production environment is a violation of the product trial terms and conditions.'\n  },\n  faq3a: {\n    id: 'trial.faq3a',\n    defaultMessage: 'Do Red Hat product trials come with support? How do I know if my trial has support?'\n  },\n  faq3b: {\n    id: 'trial.faq3b',\n    defaultMessage: `<p>Some product trials offer a level of support while others are self-supported (unsupported). There are several ways to determine the support level of your product trial:</p>\n<ul>\n<li>In the product trial name (e.g., 60 Day Self Support Red Hat Directory Server Evaluation). You’ll find this in the welcome email you receive when your product trial begins.</li>\n<li>On the Subscriptions page in Red Hat Customer Portal.</li>\n<li>By contacting Sales or Customer Service.</li>\n</ul>\n<p>Users with self-supported product trials have access to all <a>product documentation</a> as well as the vast Red Hat <a1>Knowledgebase</a1>.</p>`\n  },\n  faq4a: {\n    id: 'trial.faq4a',\n    defaultMessage: 'How do I download my product trial?'\n  },\n  faq4b: {\n    id: 'trial.faq4b',\n    defaultMessage: 'Once your product trial subscription is active, we\\'ll provide you with a download of the latest version on the \"success\" page (the page that opens after you click “Start my trial” and is also accessible from the confirmation email you’ll receive) or you can download the software from the Downloads section of Red Hat Customer Portal. However, some trials are accessed in the cloud rather than downloaded. In those instances, we’ll provide instructions to access your trial.'\n  },\n  faq5a: {\n    id: 'trial.faq5a',\n    defaultMessage: 'How long does a product trial last?'\n  },\n  faq5b: {\n    id: 'trial.faq5b',\n    defaultMessage: 'Most product trials are 60 days, but exceptions may be made at the discretion of Red Hat Sales and Customer Service based on the user’s needs.'\n  },\n  faq6a: {\n    id: 'trial.faq6a',\n    defaultMessage: 'What technologies can I try through this program?'\n  },\n  faq6b: {\n    id: 'trial.faq6b',\n    defaultMessage: 'Nearly all Red Hat technologies are available for a product trial. You can find a listing of available trials in the <a>Red Hat product trial center</a>. If there is a product you\\'d like to try that isn’t listed, please <a1>contact Red Hat Sales</a1>.'\n  },\n  faq7a: {\n    id: 'trial.faq7a',\n    defaultMessage: 'Why do I need to consult with a sales representative to obtain certain product trials?'\n  },\n  faq7b: {\n    id: 'trial.faq7b',\n    defaultMessage: `<p>There are several possible reasons:</p>\n<ol>\n<li>You’ve requested more than 1 product trial.</li>\n<li>Your product trial is not available via the web.</li>\n<li>You’ve requested multiple product trials as part of a bundled SKU.</li>\n<li>Your product trial requires additional approvals before being activated.</li>\n</ol>\n<a>Contact Red Hat Sales</a> to try these technologies.`\n  },\n  faq8a: {\n    id: 'trial.faq8a',\n    defaultMessage: 'Can I renew the product trial after it has expired?'\n  },\n  faq8b: {\n    id: 'trial.faq8b',\n    defaultMessage: 'There are limits to how many product trials are allowed for each product over a given time period. If you need to extend your product trial or request more trials, please <a>contact Red Hat Sales</a>.'\n  },\n  faq9a: {\n    id: 'trial.faq9a',\n    defaultMessage: 'I’d like to use the product trial software after my trial has expired, or I’d like to use the software in a production environment. What are my options?'\n  },\n  faq9b: {\n    id: 'trial.faq9b',\n    defaultMessage: `<ul>\n<li>Purchase a subscription.</li>\n<li>Renew the product trial after the expiry grace period has ended.</li>\n<li><a>Contact Red Hat Sales</a> to determine if the product trial can be renewed sooner or if a similar product trial is available.</li>\n</ul>`\n  },\n  faqTitle: {\n    id: 'trial.faqTitle',\n    defaultMessage: 'Frequently asked questions'\n  },\n  footerTitle: {\n    id: 'trial.footerTitle',\n    defaultMessage: 'Product trial terms and conditions'\n  },\n  footerContent: {\n    id: 'trial.footerContent',\n    defaultMessage: `<p>Red Hat is providing each Red Hat Product Trial Subscription for evaluation purposes subject to the terms of the Red Hat Enterprise Agreement. If you use the Red Hat Subscription for any purpose other than evaluation, you agree to pay Red Hat the Subscription Fee(s) for each Unit pursuant to the Enterprise Agreement, which is in addition to any and all other remedies available to Red Hat under applicable law.</p>\n<p>Examples of situations where you would incur additional fees and be in violation of the Agreement include, but are not limited to:</p>\n<ul>\n<li>Using the services provided under the trial program for a production installation,</li>\n<li>Offering support services to third parties, or</li>\n<li>Complementing or supplementing third-party support services with services received through the Red Hat Product Trial Subscription program.</li>\n</ul>\n<p>By proceeding, you acknowledge that you've read and agree to the terms and conditions of the Red Hat Enterprise Agreement which governs your use.</p>`\n  },\n  installRHETrial: {\n    id: 'trial.installRHETrial',\n    defaultMessage: 'You need to run Red Hat Enterprise Linux® as your operating system for this product trial. If you already have it, proceed to the next step. If you don’t, <button>start your download now</button>. This <a1>installation guide</a1> provides step-by-step instructions.'\n  },\n  startInstallTrial: {\n    id: 'trial.startInstallTrial',\n    defaultMessage: 'You may need to wait up to 30 minutes to access <a>automation hub</a> services after the trial subscription is activated.'\n  }\n});\n\nexport default trialMessages;\n"],"names":["CATALOG_API_BASE","AUTOMATION_HUB_API_BASE","axiosInstance","getAxiosInstance","getCollection","offset","get","getSyncCollections","account","setHubAvailability","dispatch","value","type","ActionTypes","payload","setHubError","IconPlaceholder","height","width","cx","cy","r","fill","propTypes","PropTypes","Logo","props","size","image","alt","className","style","display","justifyContent","alignItems","objectFit","maxHeight","src","pathName","window","location","pathname","split","shift","prefix","basename","release","createBrowserHistory","Br","ErrorCard","intl","useIntl","Card","EmptyState","variant","EmptyStateIcon","icon","ExclamationCircleIcon","color","global_danger_color_200","Title","headingLevel","formatMessage","messages","EmptyStateBody","supportLink","href","statusLink","br","appName","initialState","isFetching","hubState","state","action","useReducer","stateDispatch","useSelector","hubReducer","isError","collection","collections","syncCollections","partners","userIdentity","useContext","UserContext","useDispatch","useEffect","Promise","all","load","err","status","identity","account_number","HubHelper","then","meta","count","day","Date","getDate","contents","featuredCollection","content","Fragment","CardTitle","CardBody","Section","backgroundColor","minHeight","Bullseye","Spinner","isSVG","Flex","TextContent","Text","direction","default","FlexItem","align","component","TextVariants","Button","Level","hasGutter","LevelItem","marginRight","Popover","headerContent","bodyContent","padding","Divider","data","summary","total_count","length","module","role","plugin","undefined","c","content_type","contentCounts","latest_version","metadata","filter","item","includes","alignSelf","namespace","company","avatar_url","Label","name","description","Grid","GridItem","id","span","Stack","StackItem","target","rel","post","getGraphqlInstance","listPortfolios","limit","listPortfolioItems","portfolioItems","portfolioReference","reduce","acc","curr","index","portfolio_id","Object","keys","map","join","portfolios","forEach","portfolioItemIndex","portfolioName","setCatalogAvailability","setCatalogError","fetchOrders","orders","orderIds","defaultSettings","orderId","orderItems","itemIds","portfolio_item_id","itemId","order","order_id","fetchPortfolios","options","CatalogHelper","fetchPortfolioItems","fetchPlatforms","query","application_types","sourceIds","sources","source","sourceId","sourceDetails","find","sourceDetail","styled","LazyLoadImage","hidden","CardIconContainer","useState","isLoaded","setLoaded","isUnknown","setUnknown","threshold","delayTime","onError","onLoad","Completed","Ordered","Failed","Canceled","Created","Approved","Denied","Error","Undecided","Unknown","TimeAgo","date","key","DateFormat","ConfigureCard","title","renderButtons","isFilled","maxLine","text","marginBottom","paddingBottom","renderCatalogConfigButton","catalogState","catalogReducer","isCatalogAvailable","permissions","isCatalogAdmin","permission","promiseList","push","fn","featuredProduct","service_offering_source_ref","Badge","isRead","orderStatusMapper","created_at","orderRow","notificationsEndpoint","authenticatedFetch","endpoint","insights","chrome","auth","getUser","getNotifications","severity","url","URL","origin","searchParams","append","setAnalyticsAvailability","setAnalyticsError","innerWidth","setWidth","handleResize","addEventListener","removeEventListener","bars","items","created_date","x","getMonth","y","successBars","failBars","colorScaleArray","chart_color_red_300","chart_color_green_400","yAxisStyles","tickLabels","fontSize","axisLabel","c_content_small_FontSize","xAxisStyles","Chart","ariaDesc","ariaTitle","domainPadding","barRatio","bottom","left","right","top","margin","ChartAxis","C","tickValues","i","getTickValues","fixLabelOverlap","label","dependentAxis","showGrid","tickFormat","t","Math","round","ChartStack","colorScale","tick","failed_count","ChartBar","labelComponent","ChartTooltip","constrainToVisibleArea","successful_count","renderAnalyticsConfigButton","analyticsState","analyticsReducer","isAnalyticsAvailable","clusters","errorNotifications","warningNotifications","jobsData","AnalyticsHelper","params","quick_date_range","job_type","group_by_time","org_id","cluster_id","template_id","only_root_workflows_and_standalone_jobs","qs","stringify","search","method","body","JSON","DescriptionList","columnModifier","DescriptionListGroup","DescriptionListTerm","templates","DescriptionListDescription","isTruncated","isLarge","PageSection","md","sm","isHubAvailable","MarketingBanner","hasGraphic","graphicRight","light1000","fullBleed","children","MarketingBannerSectionClasses","classNames","isWidthLimited","DashboardHeader","spacer","TRIAL_PAGE","BETA_TRIAL_PAGE","ANSIBLE_CHECKSUM","RHEL_CHECKSUM","cheksum","getToken","token","headers","Authorization","Accept","link","document","createElement","setAttribute","visibility","appendChild","click","removeChild","console","error","defineMessages","overviewLink","defaultMessage","trialExpired","wannaTry","wannaTryText","readyBuy","readyBuyText","sales","salesText","salesButton","partnersText","partnersButton","xxx","PageHeader","Breadcrumb","BreadcrumbItem","to","DASHBOARD_ROUTE","expiredMessages","isActive","spaceItems","flexGrow","a","chunks","isFlat","CardFooter","Link","activeFaq","openFaq","isBeta","onClick","createAccordionItem","values","isExpanded","trialMessages","isHidden","li","isBordered","displaySize","p","ul","a1","ol","Requirements","afterTrial","installText","startInstallText","button","isInline","downloadTrial","successMessages","iconPosition","a2","axios","paramsSerializer","interceptors","request","use","config","response","requestId","grapqlInstance","errors","message","errorType","errorStateTitle","errorStateDescription","analyticsTitle","analyticsCardDescription","analyticsJobTitle","analyticsCardNotificationsTitle","totalClusters","jobsExplorer","timeDayLegend","jobsAcrossClusters","clusterTitle","critical","warning","catalogTitle","catalogCardDescription","products","platforms","latestOrderTitle","hubTitle","noOrdersTitle","noOrdersDescription","hubCardDescription","hubCardCertifiedCollectionTitle","hubCardCertifiedCollectionDescription","hubCardFeaturedCollectionTitle","syncCollectionsTooltip","modules","roles","plugins","overview","noAppTitle","noAppDescription","configureLink","tryItButton","learnMoreButton","configDescription","configureAnalyticsTitle","configureAnalyticsDescription","configureCatalogTitle","configureCatalogDescription","catalogCardLatestOrdersTitle","catalogCardFeaturedProduct","viewMore","configureAnalyticsLink","configureCatalogLink","download","titleFooter","installation","startDownload","downloadNote","nextSteps","deployAnsible","deployAnsibleText","learnAnsible","learnAnsibleText","support","supportText","resources","resourcesDescription","instructionsText","instructionsLink","documentationText","documentationLink","otherVersionsText","otherVersionsLink","customerServiceText","customrServiceLink","faqLink","allTrials","header","startButton","adCardHeader","adCardContent","adCardFooter","reqCardHeader","reqCardRHELTitle","reqCardRHELContent","reqCardBreakTitle","reqCardBreakContent","faq1a","faq1b","faq2a","faq2b","faq3a","faq3b","faq4a","faq4b","faq5a","faq5b","faq6a","faq6b","faq7a","faq7b","faq8a","faq8b","faq9a","faq9b","faqTitle","footerTitle","footerContent","installRHETrial","startInstallTrial"],"sourceRoot":""}