{"version":3,"file":"js/ansible-dashboard-route.js","mappings":"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","sources":["webpack:///./src/components/shared/marketing-banner.js","webpack:///./src/components/shared/dashboard-header.js","webpack:///./src/messages/messages.js","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/utilities/constants.js","webpack:///./src/helpers/automation-hub/hub-helper.js","webpack:///./src/redux/actions/hub-actions.js","webpack:///./src/components/automation-hub/content-counts.js","webpack:///./src/components/automation-hub/logo.js","webpack:///./src/utilities/app-history.js","webpack:///./src/components/shared/error-card.js","webpack:///./src/components/automation-hub/hub-card.js","webpack:///./src/helpers/catalog/catalog-helper.js","webpack:///./src/redux/actions/catalog-actions.js","webpack:///./src/components/shared/lazy-load-image.js","webpack:///./src/components/shared/card-icon.js","webpack:///./src/components/shared/order-status-mapper.js","webpack:///./src/helpers/shared/helpers.js","webpack:///./src/components/shared/configure-card.js","webpack:///./src/components/catalog/configure-catalog_card.js","webpack:///./src/components/catalog/catalog-card.js","webpack:///./src/helpers/analytics/analytics-helper.js","webpack:///./src/redux/actions/analytics-actions.js","webpack:///./src/components/analytics/jobs-chart.js","webpack:///./src/components/analytics/configure-analytics-card.js","webpack:///./src/components/analytics/analytics-card.js","webpack:///./src/components/dashboard/configure-app-page.js","webpack:///./src/components/shared/no-app-state.js","webpack:///./src/components/dashboard/platform-page.js","webpack:///./src/components/dashboard/dashboard.js"],"sourcesContent":["import './marketing-banner.scss';\n\nimport { PageSection } from '@patternfly/react-core';\nimport React from 'react';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\n\nconst MarketingBanner = ({ className, hasGraphic, graphicRight, light1000, fullBleed, style, children }) => {\n\n  const MarketingBannerSectionClasses = classNames(\n    className,\n    'ans-c-marketing-banner',\n    { [`ans-m-with-graphic `]: hasGraphic },\n    { [`ans-m-graphic-right`]: graphicRight },\n    { [`ans-m-light-1000 pf-m-light-1000`]: light1000 },\n    { [`ans-m-full-bleed`]: fullBleed }\n  );\n\n  return <PageSection\n    className={ MarketingBannerSectionClasses }\n    style={ style }\n    isWidthLimited>\n    { children }\n  </PageSection>;\n};\n\nexport default MarketingBanner;\n\nMarketingBanner.propTypes = {\n  children: propTypes.any.isRequired,\n  className: propTypes.string,\n  style: propTypes.any,\n  graphicRight: propTypes.bool,\n  hasGraphic: propTypes.bool,\n  light1000: propTypes.bool,\n  fullBleed: propTypes.bool,\n  isWidthLimited: propTypes.bool\n};\n","import { Grid, GridItem, Flex, FlexItem, Title  } from '@patternfly/react-core';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport MarketingBanner from './marketing-banner';\n\nconst DashboardHeader = ({ title, description, renderButtons }) => {\n  const intl = useIntl();\n\n  return (\n    <MarketingBanner\n      hasGraphic\n      graphicRight\n      light1000\n      fullBleed\n\n      style={ {\n        '--ins-c-marketing-banner--graphic--width-on-md': '200px',\n        '--ins-c-marketing-banner--graphic--width-on-xl': '400px'\n      } }>\n      <Grid>\n        <GridItem>\n          <Flex direction={ { default: 'column' } }>\n            <FlexItem>\n              <Title headingLevel='h1' size='2xl'>\n                { title }\n              </Title>\n            </FlexItem>\n            { (description && description !== '') && <FlexItem spacer={ { default: 'spacer2xl' } }>\n              <div className='ins-c-width-limiter' style={ { '--ins-c-width-limiter--MaxWidth': '600px' } }>\n                <p className='ins-c-text--black-400'>{ description }</p>\n              </div>\n            </FlexItem> }\n            { renderButtons && <FlexItem>\n              { renderButtons(intl) }\n            </FlexItem>\n            }\n          </Flex>\n        </GridItem>\n      </Grid>\n    </MarketingBanner>\n  );\n};\n\nDashboardHeader.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  renderButtons: PropTypes.func\n};\n\nexport default DashboardHeader;\n","import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  errorStateTitle: {\n    id: 'error.state.title',\n    defaultMessage: 'Something went wrong'\n  },\n  errorStateDescription: {\n    id: 'error.state.description',\n    defaultMessage:\n    // eslint-disable-next-line max-len\n      'There was a problem processing the request. Please try again. <br></br> If the problem persists, contact {supportLink} or check our {statusLink} page for known outages.'\n  },\n  analyticsTitle: {\n    id: 'analytics.title',\n    defaultMessage: 'Insights Ansible Automation Platform'\n  },\n  analyticsCardDescription: {\n    id: 'analytics.description',\n    defaultMessage: 'Gain insights into your deployments through visual dashboards and organization statistics calculate ' +\n        'your return on investment and explore automation processes details.'\n  },\n  analyticsJobTitle: {\n    id: 'analytics.jobs.title',\n    defaultMessage: 'Job status'\n  },\n  analyticsCardNotificationsTitle: {\n    id: 'analytics.notifications.title',\n    defaultMessage: 'Notifications'\n  },\n  totalClusters: {\n    id: 'analytics.total.clusters',\n    defaultMessage: 'Total clusters'\n  },\n  jobsExplorer: {\n    id: 'analytics.jobs.explorer',\n    defaultMessage: 'View Job Explorer'\n  },\n  timeDayLegend: {\n    id: 'analytics.time.day.legend',\n    defaultMessage: 'Time: Day'\n  },\n  jobsAcrossClusters: {\n    id: 'analytics.jobs.across.clusters',\n    defaultMessage: 'Jobs across clusters'\n  },\n  clusterTitle: {\n    id: 'analytics.clusters.title',\n    defaultMessage: 'Clusters'\n  },\n  critical: {\n    id: 'analytics.critical',\n    defaultMessage: 'Critical'\n  },\n  warning: {\n    id: 'analytics.warning',\n    defaultMessage: 'Warnings'\n  },\n  catalogTitle: {\n    id: 'catalog.title',\n    defaultMessage: 'Automation Services Catalog'\n  },\n  catalogCardDescription: {\n    id: 'catalog.description',\n    defaultMessage: 'Collect and distribute automation content, govern content by approval processes and assure sign-off by assigned groups.'\n  },\n  products: {\n    id: 'catalog.products',\n    defaultMessage: 'Products'\n  },\n  portfolios: {\n    id: 'catalog.portfolios',\n    defaultMessage: 'Portfolios'\n  },\n  platforms: {\n    id: 'catalog.platforms',\n    defaultMessage: 'Platforms'\n  },\n  latestOrderTitle: {\n    id: 'catalog.latestOrder',\n    defaultMessage: 'Latest orders'\n  },\n  hubTitle: {\n    id: 'hub.title',\n    defaultMessage: 'Automation Hub'\n  },\n  noOrdersTitle: {\n    id: 'noOrders.title',\n    defaultMessage: 'No orders yet'\n  },\n  noOrdersDescription: {\n    id: 'noOrdersDescription',\n    defaultMessage: 'Orders show up here when an order is placed.'\n  },\n  hubCardDescription: {\n    id: 'hub.description',\n    defaultMessage: 'Find and use content that is supported by Red Hat and our partners to deliver reassurance for the most demanding environments'\n  },\n  hubCardCertifiedCollectionTitle: {\n    id: 'hub.certified.title',\n    defaultMessage: 'Certified Ansible Collections'\n  },\n  hubCardCertifiedCollectionDescription: {\n    id: 'hub.certified.description',\n    defaultMessage: 'View Ansible Content Collections certified and supported by Red Hat. ' +\n        'Download collections or sync them to your local repositories.'\n  },\n  hubCardFeaturedCollectionTitle: {\n    id: 'hub.featured.title',\n    defaultMessage: 'Featured collection'\n  },\n  partners: {\n    id: 'hub.partners',\n    defaultMessage: 'Partners'\n  },\n  collections: {\n    id: 'hub.collections',\n    defaultMessage: 'Collections'\n  },\n  syncCollections: {\n    id: 'hub.syncCollections',\n    defaultMessage: 'Collections set to sync'\n  },\n  syncCollectionsTooltip: {\n    id: 'hub.syncCollectionsTooltip',\n    defaultMessage: 'This is the number of collections that your organization will sync if you have connected to Private Hub.'\n  },\n\n  modules: {\n    id: 'hub.modules',\n    defaultMessage: 'Modules'\n  },\n  roles: {\n    id: 'hub.roles',\n    defaultMessage: 'Roles'\n  },\n  plugins: {\n    id: 'hub.plugins',\n    defaultMessage: 'Plugins'\n  },\n  overview: {\n    id: 'ansible.overview',\n    defaultMessage: 'Overview'\n  },\n  noAppTitle: {\n    id: 'no.app.title',\n    defaultMessage: 'Get started with Red Hat Ansible Automation Platform'\n  },\n  noAppDescription: {\n    id: 'no.app.description',\n    defaultMessage: 'Red Hat Ansible Automation Platform simplifies the development and operation of automation' +\n        ' workloads across diverse hybrid environments using the Automation Controller, certified and supported content' +\n        ' collections, and the hosted services on cloud.redhat.com'\n  },\n  configureLink: {\n    id: 'configure.button',\n    defaultMessage: 'Install and configure your infrastructure'\n  },\n  tryItButton: {\n    id: 'try.it.button',\n    defaultMessage: 'Try it free'\n  },\n  learnMoreButton: {\n    id: 'learn.more.button',\n    defaultMessage: 'Learn more'\n  },\n  configDescription: {\n    id: 'config.description',\n    defaultMessage: 'Install and configure your Ansible Automation Controller clusters. Once your Ansible Automation ' +\n        'Controller infrastructure is in place, connect it to the hosted services available on cloud.redhat.com.' +\n        'Learn how connect to each service in the tiles below.'\n  },\n  configureAnalyticsTitle: {\n    id: 'configure.analytics.title',\n    defaultMessage: 'Connect Insights for Ansible Automation Platform'\n  },\n  configureAnalyticsDescription: {\n    id: 'configure.analytics.description',\n    defaultMessage: 'Gain insights into your deployments through visual dashboards and organization statistics, ' +\n        'calculate your return on investment, and explore automation processes details'\n  },\n  configureCatalogTitle: {\n    id: 'configure.catalog.title',\n    defaultMessage: 'Connect Automation Services Catalog'\n  },\n  configureCatalogDescription: {\n    id: 'configure.catalog.description',\n    defaultMessage: 'Use Automation Services Catalog to collect and distribute automation content, govern your content by designing ' +\n        'and attaching approval processes, and ensure required sign-off is obtained by assigned organizational groups.'\n  },\n  catalogCardLatestOrdersTitle: {\n    id: 'catalog.card.orders.title',\n    defaultMessage: 'Latest orders'\n  },\n  catalogCardFeaturedProduct: {\n    id: 'catalog.card.featured.title',\n    defaultMessage: 'Latest created product'\n  },\n  viewMore: {\n    id: 'labels.view.more',\n    defaultMessage: 'View more'\n  },\n  configureAnalyticsLink: {\n    id: 'configure.analytics.link',\n    defaultMessage: 'Configure Insights Ansible Automation Platform'\n  },\n  configureCatalogLink: {\n    id: 'configure.catalog.link',\n    defaultMessage: 'Configure Automation Services Catalog'\n  }\n});\n\nexport default messages;\n","import axios from 'axios';\nimport { stringify } from 'qs';\n\nconst axiosInstance = axios.create({\n  paramsSerializer: (params) => stringify(params)\n});\n\nconst resolveInterceptor = (response) => response.data || response;\nconst errorInterceptor = (error = {}) => {\n  const requestId = error.response?.headers?.['x-rh-insights-request-id'];\n  throw requestId ? { ...error.response, requestId } : { ...error.response };\n};\n\n// check identity before each request. If the token is expired it will log out user\naxiosInstance.interceptors.request.use(async (config) => {\n  await window.insights.chrome.auth.getUser();\n  return config;\n});\naxiosInstance.interceptors.response.use(resolveInterceptor);\naxiosInstance.interceptors.response.use(undefined, errorInterceptor);\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n\nconst grapqlInstance = axios.create();\ngrapqlInstance.interceptors.request.use(async (config) => {\n  await window.insights.chrome.auth.getUser();\n  return config;\n});\n/**\n * Graphql does not return error response when the qery fails.\n * Instead it returns 200 response with error object.\n * We catch it and throw it to trigger notification middleware\n */\ngrapqlInstance.interceptors.response.use(({ data }) => {\n  if (data.errors) {\n    throw {\n      message: data.errors[0].errorType,\n      data: data.errors[0].message\n    };\n  }\n\n  return data;\n});\n\nexport function getGraphqlInstance() {\n  return grapqlInstance;\n}\n","export const CATALOG_API_BASE = `/api/catalog/v1.3`;\nexport const AUTOMATION_HUB_UI_API_BASE = `/api/automation-hub/_ui/v1/`;\nexport const AUTOMATION_HUB_API_BASE = `/api/automation-hub/v3`;\nexport const AUTOMATION_HUB_BASE = `/api/automation-hub`;\nexport const ANALYTICS_API_BASE_V1 = `/api/tower-analytics/v1`;\nexport const ANALYTICS_API_BASE_V0 = `/api/tower-analytics/v0`;\nexport const SOURCES_API_BASE = `/api/sources/v1.0`;\nexport const CATALOG_INVENTORY_API_BASE = `/api/catalog-inventory/v1.0`;\n","/* eslint camelcase: 0 */\nimport { getAxiosInstance } from '../shared/user-login';\nimport { AUTOMATION_HUB_BASE, AUTOMATION_HUB_API_BASE, AUTOMATION_HUB_UI_API_BASE } from '../../utilities/constants';\n\nconst axiosInstance = getAxiosInstance();\n\nexport const getCollections = () =>\n  axiosInstance.get(\n    `${AUTOMATION_HUB_API_BASE}/collections?deprecated=false&&limit=31`\n  );\n\nexport const getCollection = (offset) => {\n  return axiosInstance.get(\n    `${AUTOMATION_HUB_UI_API_BASE}/repo/published/?deprecated=false&offset=${offset}&limit=1`\n  );\n};\n\nexport const getPartners = () =>\n  axiosInstance.get(\n    `${AUTOMATION_HUB_API_BASE}/namespaces?limit=1`\n  );\n\nexport const getSyncCollections = (account) =>\n  axiosInstance.get(\n    `${AUTOMATION_HUB_BASE}/content/${account}-synclist/v3/collections?limit=1&deprecated=false`\n  );\n","import * as ActionTypes from '../action-types';\nimport * as HubHelper from '../../helpers/automation-hub/hub-helper';\n\nconst setHubAvailability = (dispatch, value = true) => {\n  return dispatch({\n    type: ActionTypes.SET_HUB_AVAILABILITY,\n    payload: value\n  });\n};\n\nconst setHubError = (dispatch, value = true) => {\n  return dispatch({\n    type: ActionTypes.SET_HUB_ERROR,\n    payload: value\n  });\n};\n\nexport const fetchCollections = () => (dispatch) => {\n  const load = HubHelper.getCollections().catch((err) => {\n    if (err.status === 404) {\n      setHubAvailability(dispatch, false);\n    }\n    else {\n      setHubError(dispatch, true);\n    }\n  });\n  return dispatch({\n    type: ActionTypes.FETCH_COLLECTIONS,\n    payload: load\n  });\n};\n\nexport const fetchCollection = (offset) => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_COLLECTION,\n    payload: HubHelper.getCollection(offset).catch((err) => {\n      if (err.status === 404) {\n        setHubAvailability(dispatch, false);\n      }\n      else {\n        setHubError(dispatch, true);\n      }\n    })\n  });\n};\n\nexport const fetchPartners = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_PARTNERS,\n    payload: HubHelper.getPartners().catch((err) => {\n      if (err.status === 404) {\n        setHubAvailability(dispatch, false);\n      }\n      else {\n        setHubError(dispatch, true);\n      }\n    })\n  });\n};\n\nexport const fetchSyncCollections = (account) => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_SYNC_COLLECTIONS,\n    payload: HubHelper.getSyncCollections(account).catch((err) => {\n      if (err.status === 404) {\n        setHubAvailability(dispatch, false);\n      }\n      else {\n        setHubError(dispatch, true);\n      }\n    })\n  });\n};\n\n","export const contentCounts = (content) => {\n  const summary = {\n    total_count: content ? content.length : 0,\n    contents: { module: 0, role: 0, plugin: 0 }\n  };\n\n  if (content === undefined) {\n    return summary;\n  }\n\n  for (const c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const IconPlaceholder = ({\n  height = 40\n}) => (\n  <svg height={ height } width={ height }>\n    <circle cx={ height / 2 } cy={ height / 2 } r={ height / 2 } fill=\"#ecebeb\" />\n  </svg>\n);\n\nIconPlaceholder.propTypes = {\n  height: PropTypes.number\n};\n\nexport const Logo = (props) => {\n  const { size, image, alt, className } = props;\n\n  const style = {\n    height: size,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  };\n  // use inline css so we can set size\n  return (\n    <div className={ className } style={ style }>\n      { image ?\n        <img\n          style={ { objectFit: 'contain', maxHeight: size } }\n          src={ image }\n          alt={ alt }\n        /> :  <IconPlaceholder/> }\n    </div>\n  );\n};\n\nLogo.propTypes = {\n  size: PropTypes.string,\n  image: PropTypes.string,\n  alt: PropTypes.string,\n  className: PropTypes.any\n};\nexport default Logo;\n\n","import { createBrowserHistory } from 'history';\n\nconst pathName = window.location.pathname.split('/');\npathName.shift();\n\nlet prefix = '/';\nif (pathName[0] === 'beta') {\n  prefix = `/${pathName.shift()}/`;\n}\n\n/**\n * Make sure that the [1] fragment is present in the pathname.\n * Otherwise we could end up with /undefined/ which will be transformed by the router to //\n */\nconst basename = `${prefix}${pathName[0]}/${pathName[1] ? pathName[1] : ''}`;\n\nconst appHistory = createBrowserHistory({\n  basename\n});\n\nexport const release = prefix;\nexport default appHistory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../App.scss';\nimport {\n  Card,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Title\n} from '@patternfly/react-core';\nimport { global_danger_color_200 } from '@patternfly/react-tokens';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons/dist/js/icons/exclamation-circle-icon';\n\nconst Br = () => <br />;\n\nconst ErrorCard = () => {\n  const intl = useIntl();\n  return (\n    <Card className='ans-c-card-dashboard'>\n      <EmptyState variant={ 'full' } className='ans-c-empty-state-error'>\n        <div>\n          <EmptyStateIcon\n            icon={ ExclamationCircleIcon }\n            color={ global_danger_color_200.value }\n          />\n        </div>\n        <Title headingLevel=\"h2\" size=\"md\"> { intl.formatMessage(messages.errorStateTitle) } </Title>\n\n        <EmptyStateBody className='ans-c-empty-state-error__body'>\n          { intl.formatMessage(messages.errorStateDescription, { supportLink: <a href={ 'https://access.redhat.com/support' }>Red Hat support</a>,\n            statusLink: <a href={ 'https://status.redhat.com' }> status</a>, br: Br }) }\n        </EmptyStateBody>\n      </EmptyState>\n    </Card>\n  );\n};\n\nErrorCard.propTypes = {\n  appName: PropTypes.string\n};\n\nexport default ErrorCard;\n","import React, { Fragment, useContext, useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Bullseye,\n  Button,\n  Card,\n  CardBody,\n  CardTitle, Divider,\n  Flex,\n  FlexItem,\n  Grid,\n  GridItem, Label, Level, LevelItem,\n  Spinner,\n  Stack,\n  StackItem,\n  Text, TextContent, TextVariants,\n  Title, Popover\n} from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport { fetchCollection, fetchCollections, fetchPartners, fetchSyncCollections } from '../../redux/actions/hub-actions';\nimport UserContext from '../../user-context';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { contentCounts } from './content-counts';\nimport { Logo } from './logo';\nimport { release } from '../../utilities/app-history';\nimport ErrorCard from '../shared/error-card';\nimport OutlinedQuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\n\nconst initialState = {\n  isFetching: true\n};\n\nconst hubState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst HubCard = () => {\n  const [{ isFetching }, stateDispatch ] = useReducer(hubState, initialState);\n\n  const { isError, collection, collections, syncCollections, partners } = useSelector(\n    ({\n      hubReducer: {\n        isError,\n        collection,\n        collections,\n        syncCollections,\n        partners\n      }\n    }) => ({ isError, collection, collections, syncCollections, partners })\n  );\n\n  const {\n    userIdentity\n  } = useContext(UserContext);\n\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  useEffect(() => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    Promise.all([ dispatch(fetchCollections()), dispatch(fetchPartners()), dispatch(fetchSyncCollections(userIdentity?.identity?.account_number)) ])\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  useEffect(() => {\n    if (collections?.meta?.count > 0) {\n      const d = new Date();\n      const day = d.getDate();\n      const count = collections?.meta?.count;\n      stateDispatch({ type: 'setFetching', payload: true });\n      dispatch(fetchCollection(count <= day ? count - 1 : day - 1)).then(() =>\n        stateDispatch({ type: 'setFetching', payload: false }));\n    }\n  }, [ collections ]);\n\n  const renderHubInfo = () => (\n    <React.Fragment>\n      <TextContent>\n        <Text>\n          { intl.formatMessage(messages.hubCardDescription) } <br/><br/>\n        </Text>\n      </TextContent>\n      <Flex>\n        <Flex direction={ { default: 'column' } } className=\"pf-u-m-0 pf-u-pr-sm\">\n          <FlexItem align={ { default: 'alignRight' } } className=\"pf-u-mb-sm pf-u-mt-md\">\n            <TextContent>\n              <Text component={ TextVariants.h1 }>\n                { partners?.meta?.count }\n              </Text>\n            </TextContent>\n          </FlexItem>\n          <FlexItem align={ { default: 'alignRight' } } className=\"pf-u-mb-sm pf-u-mt-md\">\n            <TextContent>\n              <Text component={ TextVariants.h1 }>\n                { collections?.meta?.count }\n              </Text>\n            </TextContent>\n          </FlexItem>\n          <FlexItem align={ { default: 'alignRight' } } className=\"pf-u-mb-sm pf-u-mt-md\">\n            <TextContent>\n              <Text component={ TextVariants.h1 }>\n                { syncCollections?.meta?.count }\n              </Text>\n            </TextContent>\n          </FlexItem>\n        </Flex>\n        <Flex direction={ { default: 'column' } }>\n          <FlexItem>\n            <Button\n              component='a'\n              variant='link'\n              href={ `${release}ansible/automation-hub/partners` }>\n              { intl.formatMessage(messages.partners) }\n            </Button>\n          </FlexItem>\n          <FlexItem>\n            <Button\n              component='a'\n              variant='link'\n              href={ `${release}ansible/automation-hub` }>\n              { intl.formatMessage(messages.collections) }\n            </Button>\n          </FlexItem>\n          <FlexItem>\n            <Level hasGutter className=\"pf-u-pl-md pf-u-pt-sm\">\n              <LevelItem style={ { marginRight: 8 } }>\n                { intl.formatMessage(messages.syncCollections) }\n              </LevelItem>\n              <LevelItem>\n                <Popover\n                  headerContent={ <div>{ intl.formatMessage(messages.syncCollections) }</div> }\n                  bodyContent={ <div>{ intl.formatMessage(messages.syncCollectionsTooltip) }</div> }\n                >\n                  <Button variant=\"link\" style={ { padding: 0 } } icon={ <OutlinedQuestionCircleIcon /> }/>\n                </Popover>\n              </LevelItem>\n            </Level>\n          </FlexItem>\n        </Flex>\n      </Flex>\n    </React.Fragment>\n  );\n\n  const filterContents = (contents) => {\n    if (contents) {\n      return contents.filter(\n        item => !['doc_fragments', 'module_utils'].includes(item.content_type)\n      );\n    }\n\n    return contents;\n  };\n\n  const renderHubFeaturedCollection = () => {\n    const featuredCollection = collection?.data ? collection?.data[0] : null;\n    const content = featuredCollection ? contentCounts(\n      filterContents(featuredCollection?.latest_version?.metadata?.contents)\n    ) : undefined;\n    return (\n      <Flex direction={ { default: 'column' } } alignSelf={ { default: 'alignSelfStretch' } }>\n        <Title headingLevel=\"h4\">\n          { intl.formatMessage(messages.hubCardFeaturedCollectionTitle) }\n        </Title>\n        <br/>\n        {  featuredCollection &&\n        <Flex direction={ { default: 'column' } }>\n          <FlexItem>\n            <Level hasGutter=\"sm\">\n              <LevelItem>\n                <Logo\n                  alt={ featuredCollection?.namespace?.company + ' logo' }\n                  image={ featuredCollection?.namespace?.avatar_url }\n                  size='50px'\n                />\n              </LevelItem>\n              <LevelItem>\n                <Label>Certified</Label>\n              </LevelItem>\n            </Level>\n          </FlexItem>\n          <FlexItem>\n            <Button\n              component='a'\n              variant='link'\n              className=\"pf-u-p-0\"\n              href={ `${release}ansible/automation-hub/repo/published/${featuredCollection?.namespace?.name}/` +\n                  `${featuredCollection?.latest_version?.name || featuredCollection?.name}` }>\n              { featuredCollection?.latest_version?.name || featuredCollection?.name }\n            </Button>\n            <TextContent>\n              <Text component={ TextVariants.small }> Provided by { featuredCollection?.namespace?.company\n                  || featuredCollection?.namespace?.name }</Text>\n            </TextContent>\n          </FlexItem>\n          <FlexItem>\n            <TextContent>\n              <Text component={ TextVariants.p }>\n                { featuredCollection?.latest_version?.metadata?.description }\n              </Text>\n            </TextContent>\n          </FlexItem>\n          <FlexItem>\n            <Grid hasGutter=\"md\" >\n              <GridItem id={ 'collectionModuleCount' } span=\"4\">\n                { content?.contents?.module || '0' }\n              </GridItem>\n              <GridItem id={ 'collectionRoleCount' } span=\"4\">\n                { content?.contents?.role || 0 }\n              </GridItem>\n              <GridItem id={ 'collectionPluginCount' } span=\"4\">\n                { content?.contents?.plugin || 0 }\n              </GridItem>\n              <GridItem span=\"4\">\n                <TextContent>\n                  <Text component={ TextVariants.p }>\n                    { intl.formatMessage(messages.modules) }\n                  </Text>\n                </TextContent>\n              </GridItem>\n              <GridItem span=\"4\">\n                <TextContent>\n                  <Text component={ TextVariants.p }>\n                    { intl.formatMessage(messages.roles) }\n                  </Text>\n                </TextContent>\n              </GridItem>\n              <GridItem span=\"4\">\n                <TextContent>\n                  <Text component={ TextVariants.p }>\n                    { intl.formatMessage(messages.plugins) }\n                  </Text>\n                </TextContent>\n              </GridItem>\n            </Grid>\n          </FlexItem>\n        </Flex> }\n      </Flex>);\n  };\n\n  const renderHubOther = () => {\n    return (\n      <Flex direction={ { default: 'column' } }\n        justifyContent={ { default: 'justifyContentSpaceBetween' } }\n        alignSelf={ { default: 'alignSelfStretch' } }>\n        <FlexItem>\n          <Stack hasGutter=\"sm\">\n            <StackItem>\n              <Title headingLevel=\"h4\">\n                { intl.formatMessage(messages.hubCardCertifiedCollectionTitle) }\n              </Title>\n            </StackItem>\n            <StackItem>\n              <TextContent>\n                <Text component={ TextVariants.p }>\n                  { intl.formatMessage(messages.hubCardCertifiedCollectionDescription) }\n                </Text>\n              </TextContent>\n            </StackItem>\n          </Stack>\n        </FlexItem>\n        <FlexItem>\n          <Bullseye>\n            <Button\n              component='a'\n              variant='link'\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={ `https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/1.2/html` +\n              `/managing_red_hat_certified_and_ansible_galaxy_collections_in_automation_hub/index` }>\n              { intl.formatMessage(messages.learnMoreButton) }&nbsp;\n              <ExternalLinkAltIcon />\n            </Button>\n          </Bullseye>\n        </FlexItem>\n      </Flex>);\n  };\n\n  const renderHubCards = () => {\n    if (isError) {\n      return <ErrorCard/>;\n    }\n\n    if (isFetching) {\n      return (\n        <Section style={ { backgroundColor: 'white', minHeight: '100%' } }>\n          <Bullseye>\n            <Spinner isSVG />\n          </Bullseye>\n        </Section>\n      );\n    }\n    else {\n      return (\n        <Flex className=\"ans-l-flex ans-l-flex-automation-hub-card\" >\n          <Flex>\n            { renderHubInfo() }\n          </Flex>\n          <Divider/>\n          { renderHubFeaturedCollection() }\n          <Divider/>\n          { renderHubOther() }\n        </Flex>\n      );\n    }\n  };\n\n  return (\n    <Fragment>\n      <Card className='ans-c-card-dashboard'>\n        <CardTitle>\n          <Title headingLevel=\"h3\">\n            { intl.formatMessage(messages.hubTitle) }\n          </Title>\n        </CardTitle>\n        <CardBody>\n          { renderHubCards() }\n        </CardBody>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default HubCard;\n","/* eslint camelcase: 0 */\nimport { getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE, CATALOG_INVENTORY_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\n\nconst axiosInstance = getAxiosInstance();\nconst { post } = getGraphqlInstance();\n\nconst sourcesQuery = `\nquery {\n  application_types (filter: { name: \"/insights/platform/catalog\" }) {\n    id\n    name\n    sources {\n      id\n      name\n      source_type_id\n    }\n  }\n}`;\n\nconst getSourcesDetails = (\n  sourceIds\n) => {\n  return axiosInstance.get(\n    `${CATALOG_INVENTORY_API_BASE}/sources?limit=${sourceIds.length ||\n    defaultSettings.limit}${sourceIds.length ? '&' : ''}${sourceIds\n    .map((sourceId) => `filter[id][]=${sourceId}`)\n    .join('&')}`\n  );\n};\n\nexport const getPlatforms = () =>\n  post(`${SOURCES_API_BASE}/graphql`, { query: sourcesQuery })\n  .then(({ data: { application_types }}) => application_types)\n  .then(([{ sources }]) => {\n    return getSourcesDetails(sources.map((source) => source.id)).then(\n      (sourceDetails) => {\n        return sources.map((source) => ({\n          ...source,\n          ...sourceDetails.data.find(\n            (sourceDetail) => sourceDetail.id === source.id\n          )\n        }));\n      }\n    );\n  });\n\nconst getOrderItems = (orderIds) => {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items?limit=${\n      orderIds.length * 3 || defaultSettings.limit\n    }${orderIds.length ? '&' : ''}${orderIds\n    .map((orderId) => `filter[order_id][]=${orderId}`)\n    .join('&')}`\n  );\n};\n\nconst getOrderPortfolioItems = (itemIds) => {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items?${itemIds\n    .map((itemId) => `filter[id][]=${itemId}`)\n    .join('&')}`\n  );\n};\n\nexport const getOrders = () => {\n  return axiosInstance\n  .get(\n    `${CATALOG_API_BASE}/orders?&limit=2`\n  ) // eslint-disable-line max-len\n  .then((orders) =>\n    getOrderItems(orders.data.map(({ id }) => id)).then((orderItems) =>\n      getOrderPortfolioItems(\n        orderItems.data.map(({ portfolio_item_id }) => portfolio_item_id)\n      ).then((portfolioItems) => {\n        return {\n          portfolioItems,\n          ...orders,\n          data: orders.data.map((order) => ({\n            ...order,\n            orderItems: orderItems.data.filter(\n              ({ order_id }) => order_id === order.id\n            )\n          }))\n        };\n      })\n    )\n  );\n};\n\nexport const listPortfolios = (limit = 1) => {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios?limit=${limit}`);\n};\n\nexport const listPortfolioItems = (\n  limit = 1\n) => {\n  return axiosInstance\n  .get(\n    `${CATALOG_API_BASE}/portfolio_items?sort_by=created_at:desc&limit=${limit}`\n  )\n  .then(\n    (portfolioItems) => {\n      const portfolioReference = portfolioItems.data.reduce(\n        (acc, curr, index) =>\n          curr.portfolio_id\n            ? {\n              ...acc,\n              [curr.portfolio_id]: acc[curr.portfolio_id]\n                ? [ ...acc[curr.portfolio_id], index ]\n                : [ index ]\n            }\n            : acc,\n        {}\n      );\n      return axiosInstance\n      .get(\n        `${CATALOG_API_BASE}/portfolios?${Object.keys(portfolioReference)\n        .map((id) => `filter[id][]=${id}`)\n        .join('&')}`\n      )\n      .then(({ data }) => ({\n        portfolioItems,\n        portfolioReference,\n        portfolios: data\n      }));\n    }\n  )\n  .then(({ portfolioItems, portfolioReference, portfolios }) => {\n    portfolios.forEach(\n      ({ id, name }) =>\n        id &&\n          portfolioReference[id] &&\n          portfolioReference[id].forEach((portfolioItemIndex) => {\n            portfolioItems.data[portfolioItemIndex].portfolioName = name;\n          })\n    );\n    return portfolioItems;\n  });\n};\n","import * as ActionTypes from '../action-types';\nimport * as CatalogHelper from '../../helpers/catalog/catalog-helper';\n\nconst setCatalogAvailability = (dispatch, value = true) => {\n  return dispatch({\n    type: ActionTypes.SET_CATALOG_AVAILABILITY,\n    payload: value\n  });\n};\n\nconst setCatalogError = (dispatch, value = true) => {\n  return dispatch({\n    type: ActionTypes.SET_CATALOG_ERROR,\n    payload: value\n  });\n};\n\nexport const fetchOrders = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_ORDERS,\n    payload: CatalogHelper.getOrders().catch((err) => {\n      if (err.status === 404) {\n        setCatalogAvailability(dispatch, false);\n      }\n      else {\n        setCatalogError(dispatch, true);\n      }\n    })\n  });\n};\n\nexport const fetchPortfolios = (options) => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_PORTFOLIOS,\n    payload: CatalogHelper.listPortfolios(options).catch((err) => {\n      if (err.status === 404) {\n        setCatalogAvailability(dispatch, false);\n      } else {\n        setCatalogError(dispatch, true);\n      }\n    })\n  });\n};\n\nexport const fetchPortfolioItems = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_PORTFOLIO_ITEMS,\n    payload: CatalogHelper.listPortfolioItems().catch((err) => {\n      if (err.status === 404) {\n        setCatalogAvailability(dispatch, false);\n      }\n      else {\n        setCatalogError(dispatch, true);\n      }\n    })\n  });\n};\n\nexport const fetchPlatforms = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_PLATFORMS,\n    payload: CatalogHelper.getPlatforms().catch((err) => {\n      if (err.status === 404) {\n        setCatalogAvailability(dispatch, false);\n      }\n      else {\n        setCatalogError(dispatch, true);\n      }\n    })\n  });\n};\n\n","import styled from 'styled-components';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nconst StyledLazyLoadImage = styled(LazyLoadImage)`\n  height: ${({ height, hidden }) => (hidden ? '0px' : `${height}px` || '40px')};\n  display: ${({ hidden }) => (hidden ? 'none' : 'inherit')};\n  float: ${({ hidden }) => (hidden ? 'left' : 'inherit')};\n  width: ${({ hidden }) => (hidden ? 0 : 'inherit')};\n`;\n\nexport default StyledLazyLoadImage;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { IconPlaceholder } from './loader-placeholders';\nimport StyledLazyLoadImage from './lazy-load-image';\n\nconst CardIconContainer = styled.div`\n  display: inline-block;\n  height: ${({ height }) => `${height}px`};\n`;\n\nconst CardIcon = ({\n  src,\n  height = 40\n}) => {\n  const [ isLoaded, setLoaded ] = useState(false);\n  const [ isUnknown, setUnknown ] = useState(false);\n\n  const defaultIcon = '/apps/frontend-assets/platform-logos/ansible-automation-platform.svg';\n\n  return (\n    <CardIconContainer height={ height }>\n      { !isLoaded && <IconPlaceholder height={ height } /> }\n      <StyledLazyLoadImage\n        threshold={ 2000 }\n        delayTime={ 0 }\n        hidden={ !isLoaded }\n        height={ isLoaded ? height : 0 }\n        onError={ () => setUnknown(true) }\n        onLoad={ () => setLoaded(true) }\n        src={ !src || isUnknown ? defaultIcon : src }\n      />\n    </CardIconContainer>\n  );\n};\n\nexport default CardIcon;\n","import React from 'react';\nimport {\n  ExclamationCircleIcon,\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n  ClockIcon,\n  PlusCircleIcon\n} from '@patternfly/react-icons';\n\nconst orderStatusMapper = {\n  Completed: { icon: <CheckCircleIcon />, color: 'green' },\n  'Approval Pending': {\n    icon: <ClockIcon />,\n    color: 'blue'\n  },\n  Ordered: { icon: <PlusCircleIcon />, color: 'grey' },\n  Failed: { icon: <ExclamationCircleIcon />, color: 'red' },\n  Canceled: { icon: <ExclamationTriangleIcon />, color: 'orange' },\n  Created: { icon: <PlusCircleIcon />, color: 'grey' },\n  Approved: { icon: <CheckCircleIcon />, color: 'green' },\n  Denied: { icon: <ExclamationCircleIcon />, color: 'red' },\n  Error: { icon: <ExclamationCircleIcon />, color: 'red' },\n  Undecided: {\n    icon: <ClockIcon />,\n    color: 'blue'\n  },\n  Unknown: { icon: <ExclamationTriangleIcon />, color: 'grey' }\n};\n\nexport default orderStatusMapper;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nexport const scrollToTop = () =>\n  document.getElementById('root')?.scrollTo({\n    behavior: 'smooth',\n    top: 0,\n    left: 0\n  });\n\nexport const TimeAgo = ({ date }) => (\n  <span key={ date }>\n    <DateFormat date={ date } type=\"relative\"/>\n  </span>\n);\n\nconst sizes = [ 'B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB' ];\nexport const readableBytes = (bytes) => {\n  if (bytes === 0) {\n    return 'O B';\n  }\n\n  const i = Math.floor(Math.log(bytes) / Math.log(1024));\n\n  return `${Number((bytes / Math.pow(1024, i)).toFixed(2)) * 1} ${sizes[i]}`;\n};\n\nexport const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../App.scss';\nimport {\n  Bullseye,\n  Card,\n  CardBody,\n  CardTitle,\n  Stack,\n  StackItem,\n  Title\n} from '@patternfly/react-core';\nimport LinesEllipsis from 'react-lines-ellipsis';\n\nconst ConfigureCard = ({ title, description, renderButtons }) => {\n  return (\n    <Card className='ans-c-card-config' >\n      <CardTitle>\n        <Title headingLevel=\"h3\">\n          { title }\n        </Title>\n      </CardTitle>\n      <CardBody className={ 'pf-u-mb-0-pb-0' }>\n        <Stack>\n          <StackItem isFilled>\n            <LinesEllipsis maxLine={ 3 } text={ description } />\n          </StackItem>\n          <StackItem style={ { marginBottom: 0, paddingBottom: 0 } }>\n            <Bullseye>\n              { renderButtons() }\n            </Bullseye>\n          </StackItem>\n        </Stack>\n      </CardBody>\n    </Card>\n  );\n};\n\nConfigureCard.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  renderButtons: PropTypes.func\n};\n\nexport default ConfigureCard;\n","import React from 'react';\nimport { Button, Flex, FlexItem } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport ConfigureCard from '../shared/configure-card';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\n\nconst renderCatalogConfigButton = (intl) => (\n  <Flex>\n    <FlexItem>\n      <Button\n        component='a'\n        variant='link'\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={ `https://access.redhat.com/documentation/en-us/` +\n          `red_hat_ansible_automation_platform/1.2/html/getting_started_with_automation_services_catalog/index` }>\n        { intl.formatMessage(messages.configureCatalogLink) }&nbsp;\n        <ExternalLinkAltIcon />\n      </Button>\n    </FlexItem>\n  </Flex>\n);\n\nconst ConfigureCatalogCard = () => {\n  const intl = useIntl();\n  return <ConfigureCard\n    title={ intl.formatMessage(messages.configureCatalogTitle) }\n    description={ intl.formatMessage(messages.configureCatalogDescription) }\n    renderButtons={ () => renderCatalogConfigButton(intl) }/>\n  ;\n};\n\nexport default ConfigureCatalogCard;\n","import React, { Fragment, useContext, useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Badge,\n  Bullseye,\n  Button,\n  Card,\n  CardBody,\n  CardTitle, Divider,\n  Flex,\n  FlexItem,\n  Label,\n  Spinner,\n  Text, TextContent, TextVariants,\n  Title\n} from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport {\n  fetchOrders, fetchPlatforms,\n  fetchPortfolioItems,\n  fetchPortfolios\n} from '../../redux/actions/catalog-actions';\nimport UserContext from '../../user-context';\nimport { release } from '../../utilities/app-history';\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport CardIcon from '../shared/card-icon';\nimport orderStatusMapper from '../shared/order-status-mapper';\nimport { TimeAgo } from '../../helpers/shared/helpers';\nimport ErrorCard from '../shared/error-card';\nimport ConfigureCatalogCard from './configure-catalog_card';\n\nconst initialState = {\n  isFetching: true\n};\n\nconst catalogState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst CatalogCard = () => {\n  const [{ isFetching }, stateDispatch ] = useReducer(catalogState, initialState);\n\n  const { isCatalogAvailable, isError, portfolioItems, portfolios, sources, orders } = useSelector(\n    ({\n      catalogReducer: {\n        isCatalogAvailable,\n        isError,\n        portfolioItems,\n        portfolios,\n        sources,\n        orders\n      }\n    }) => ({ isCatalogAvailable, isError, portfolioItems, portfolios, sources, orders })\n  );\n\n  const {\n    permissions\n  } = useContext(UserContext);\n\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  const isCatalogAdmin = permissions.find((permission) => permission.permission === 'catalog:portfolios:create');\n\n  useEffect(() => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    const promiseList = [ fetchPortfolioItems, fetchPortfolios, fetchOrders ];\n    if (isCatalogAdmin) {\n      promiseList.push(fetchPlatforms);\n    }\n\n    return Promise.all(promiseList.map(fn => dispatch(fn()))).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const renderCatalogInfo = () => (\n    <React.Fragment>\n      <TextContent>\n        <Text>\n          { intl.formatMessage(messages.catalogCardDescription) } <br/><br/>\n        </Text>\n      </TextContent>\n      <Flex>\n        <Flex direction={ { default: 'column' } } className=\"pf-u-m-0 pf-u-pr-sm\">\n          <FlexItem align={ { default: 'alignRight' } } className=\"pf-u-mb-sm pf-u-mt-md\">\n            <TextContent>\n              <Text component={ TextVariants.h1 }>\n                { portfolioItems?.meta?.count }\n              </Text>\n            </TextContent>\n          </FlexItem>\n          <FlexItem align={ { default: 'alignRight' } } className=\"pf-u-mb-sm pf-u-mt-md\">\n            <TextContent>\n              <Text component={ TextVariants.h1 }>\n                { portfolios?.meta?.count }\n              </Text>\n            </TextContent>\n          </FlexItem>\n          { isCatalogAdmin &&\n          <FlexItem align={ { default: 'alignRight' } } className=\"pf-u-mb-sm pf-u-mt-md\">\n            <TextContent>\n              <Text component={ TextVariants.h1 }>\n                { sources?.length }\n              </Text>\n            </TextContent>\n          </FlexItem> }\n        </Flex>\n        <Flex direction={ { default: 'column' } }>\n          <FlexItem>\n            <Button\n              component='a'\n              variant='link'\n              href={ `${release}ansible/catalog/products` }>\n              { intl.formatMessage(messages.products) }\n            </Button>\n          </FlexItem>\n          <FlexItem>\n            <Button\n              component='a'\n              variant='link'\n              href={ `${release}ansible/catalog/portfolios` }>\n              { intl.formatMessage(messages.portfolios) }\n            </Button>\n          </FlexItem>\n          { isCatalogAdmin &&\n            <FlexItem>\n              <Button variant='link'\n                component='a'\n                href={ `${release}ansible/catalog/platforms` }>\n                { intl.formatMessage(messages.platforms) }\n              </Button>\n            </FlexItem>\n          }\n        </Flex>\n      </Flex>\n    </React.Fragment>\n  );\n\n  const renderCatalogFeaturedProduct = () => {\n    const featuredProduct = portfolioItems?.data ? portfolioItems?.data[0] : null;\n    return (\n      <Flex direction={ { default: 'column' } } alignSelf={ { default: 'alignSelfStretch' } }>\n        <Title headingLevel=\"h4\">\n          { intl.formatMessage(messages.catalogCardFeaturedProduct) }\n        </Title>\n        <br/>\n        {  featuredProduct &&\n          <Flex direction={ { default: 'column' } }>\n            <FlexItem>\n              <CardIcon\n                height={ 40 }\n                src={ `${CATALOG_API_BASE}/portfolio_items/${featuredProduct.id}/icon` }\n              />\n            </FlexItem>\n            <FlexItem>\n              <Button\n                className=\"pf-u-pl-0 pf-u-pt-0\"\n                component='a'\n                variant='link'\n                href={ `${release}ansible/catalog/portfolios/portfolio/portfolio-item?portfolio=${featuredProduct?.portfolio_id}` +\n                `&portfolio-item=${featuredProduct.id}&source=${featuredProduct.service_offering_source_ref}` }>\n                { featuredProduct?.name }\n              </Button>\n            </FlexItem>\n            <FlexItem>\n              <TextContent>\n                <Text component={ TextVariants.p }>\n                  { featuredProduct?.description }\n                </Text>\n              </TextContent>\n            </FlexItem>\n          </Flex>\n        }\n      </Flex>);\n  };\n\n  const orderRow = (order) => {\n    return (\n      <Flex  direction={ { default: 'column' } }>\n        <Flex className=\"pf-u-mb-0 pf-u-mt-md\">\n          <FlexItem >\n            <Button\n              className=\"pf-u-pl-0 pf-u-pt-0\"\n              component='a'\n              variant='link'\n              href={ `${release}ansible/catalog/orders/order?order=${order?.id}` }>\n              { order?.id }\n            </Button>\n          </FlexItem>\n          <FlexItem>\n            <TextContent>\n              <Text component={ TextVariants.p }>\n                { order?.orderItems[0]?.name }\n              </Text>\n            </TextContent>\n          </FlexItem>\n          <FlexItem align={ { default: 'alignRight' } }>\n            <Label { ...orderStatusMapper[order?.state] } variant=\"outline\">\n              { order?.state }\n            </Label>\n          </FlexItem>\n        </Flex>\n        <Flex>\n          <FlexItem>\n            <TextContent>\n              <Text component={ TextVariants.small }>Last updated &nbsp;\n                <TimeAgo date={ order?.created_at }/>\n              </Text>\n            </TextContent>\n          </FlexItem>\n        </Flex>\n      </Flex>);\n  };\n\n  const emptyOrdersList = () => (<Flex direction={ { default: 'column' } }>\n    <FlexItem alignSelf={ { default: 'alignSelfCenter' } }>\n      <TextContent>\n        <Text component={ TextVariants.h6 }>\n          { intl.formatMessage(messages.noOrdersTitle) }\n        </Text>\n      </TextContent>\n    </FlexItem>\n    <FlexItem  alignSelf={ { default: 'alignSelfCenter' } }>\n      <TextContent>\n        <Text component={ TextVariants.small }>\n          { intl.formatMessage(messages.noOrdersDescription) }\n        </Text>\n      </TextContent>\n    </FlexItem>\n  </Flex>);\n\n  const emptyOrderCard = () => (\n    <Flex direction={ { default: 'column' } }>\n      <FlexItem>\n        <Flex>\n          <FlexItem>\n            <Title headingLevel=\"h4\">\n              { intl.formatMessage(messages.catalogCardLatestOrdersTitle) }\n            </Title>\n          </FlexItem>\n        </Flex>\n      </FlexItem>\n      { emptyOrdersList() }\n    </Flex>);\n\n  const renderCatalogOther = () => (!(orders?.meta?.count > 0) ? emptyOrderCard() :\n    <Flex direction={ { default: 'column' } }\n      justifyContent={ { default: 'justifyContentSpaceBetween' } }\n      alignSelf={ { default: 'alignSelfStretch' } }>\n      <FlexItem>\n        <Flex>\n          <FlexItem>\n            <Title headingLevel=\"h4\">\n              { intl.formatMessage(messages.catalogCardLatestOrdersTitle) }\n            </Title>\n          </FlexItem>\n          <FlexItem>\n            <Badge isRead>{ orders?.meta?.count }</Badge>\n          </FlexItem>\n        </Flex>\n      </FlexItem>\n      { orders?.data?.map((order) => (\n        orderRow(order)\n      )) }\n      <FlexItem>\n        <Bullseye>\n          <Button\n            component='a'\n            variant='link'\n            href={ `${release}ansible/catalog/orders` }>\n            { intl.formatMessage(messages.viewMore) }&nbsp;\n          </Button>\n        </Bullseye>\n      </FlexItem>\n    </Flex>\n  );\n\n  const renderCatalogCards = () => {\n    if (!isCatalogAvailable) {\n      return <ConfigureCatalogCard/>;\n    }\n\n    if (isError) {\n      return <ErrorCard/>;\n    }\n    else if (isFetching) {\n      return (\n        <Section style={ { backgroundColor: 'white', minHeight: '100%' } }>\n          <Bullseye>\n            <Spinner isSVG />\n          </Bullseye>\n        </Section>\n      );\n    }\n    else {\n      return (\n        <Flex className=\"ans-l-flex ans-l-flex-automation-hub-card\" >\n          <Flex>\n            { renderCatalogInfo() }\n          </Flex>\n          <Divider/>\n          <Flex>\n            { renderCatalogFeaturedProduct() }\n          </Flex>\n          <Divider/>\n          { renderCatalogOther() }\n        </Flex>\n      );\n    }\n  };\n\n  return (\n    <Fragment>\n      <Card className='ans-c-card-dashboard'>\n        <CardTitle>\n          <Title headingLevel=\"h3\">\n            { intl.formatMessage(messages.catalogTitle) }\n          </Title>\n        </CardTitle>\n        <CardBody>\n          { renderCatalogCards() }\n        </CardBody>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default CatalogCard;\n","/* eslint camelcase: 0 */\nimport { stringify } from 'query-string';\nimport { getAxiosInstance } from '../shared/user-login';\n/* v0 endpoints */\nconst clustersEndpoint = `/api/tower-analytics/v0/clusters/`;\nconst notificationsEndpoint = `/api/tower-analytics/v0/notifications/`;\n\n/* v1 endpoints */\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\n\nconst axiosInstance = getAxiosInstance();\nfunction authenticatedFetch(endpoint, options) {\n  return window.insights.chrome.auth.getUser().then(() => axiosInstance.get(endpoint, options));\n}\n\nexport const getJobsData = () => {\n  const params = {\n    status: [ 'successful', 'failed' ],\n    quick_date_range: 'last_30_days',\n    job_type: [ 'workflowjob', 'job' ],\n    group_by_time: true,\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    only_root_workflows_and_standalone_jobs: false,\n    limit: 1,\n    offset: 0\n  };\n  const qs = stringify(params);\n  const url = new URL(jobExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params)\n  });\n};\n\n// v0 endpoints used in Notifications.js\nexport const getClusters = () => {\n  return authenticatedFetch(clustersEndpoint);\n};\n\nexport const getNotifications = (severity = 'error') => {\n  const url = new URL(notificationsEndpoint, window.location.origin);\n  url.searchParams.append('severity', severity);\n  return authenticatedFetch(url);\n};\n","import * as ActionTypes from '../action-types';\nimport * as AnalyticsHelper from '../../helpers/analytics/analytics-helper';\n\nconst setAnalyticsAvailability = (dispatch, value = true) => {\n  return dispatch({\n    type: ActionTypes.SET_ANALYTICS_AVAILABILITY,\n    payload: value\n  });\n};\n\nconst setAnalyticsError = (dispatch, value = true) => {\n  return dispatch({\n    type: ActionTypes.SET_ANALYTICS_ERROR,\n    payload: value\n  });\n};\n\nexport const fetchClusters = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_CLUSTERS,\n    payload: AnalyticsHelper.getClusters().catch((err) => {\n      if (err.status === 404) {\n        setAnalyticsAvailability(dispatch, false);\n      }\n      else {\n        setAnalyticsError(dispatch, true);\n      }}\n    )\n  });\n};\n\nexport const fetchWarningNotifications = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_WARNING_NOTIFICATIONS,\n    payload: AnalyticsHelper.getNotifications('warning').catch((err) => {\n      if (err.status === 404) {\n        setAnalyticsAvailability(dispatch, false);\n      }\n      else {\n        setAnalyticsError(dispatch, true);\n      }}\n    )\n  });\n};\n\nexport const fetchErrorNotifications = () => (dispatch) => {\n  const load = AnalyticsHelper.getNotifications('error').catch((err) => {\n    if (err.status === 404) {\n      setAnalyticsAvailability(dispatch, false);\n    }\n    else {\n      setAnalyticsError(dispatch, true);\n    }}\n  );\n  return dispatch({\n    type: ActionTypes.FETCH_ERROR_NOTIFICATIONS,\n    payload: load\n  });\n};\n\nexport const fetchJobsData = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_JOBS,\n    payload: AnalyticsHelper.getJobsData().catch((err) => {\n      if (err.status === 404) {\n        setAnalyticsAvailability(dispatch, false);\n      }\n      else {\n        setAnalyticsError(dispatch, true);\n      }}\n    )\n  });\n};\n","import React, { useEffect, useState } from 'react';\nimport { Chart, ChartAxis, ChartBar, ChartStack, ChartTooltip } from '@patternfly/react-charts';\n\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_red_300 from '@patternfly/react-tokens/dist/js/chart_color_red_300';\nimport messages from '../../messages/messages';\nimport { useIntl } from 'react-intl';\nimport c_content_small_FontSize from '@patternfly/react-tokens';\n\nconst JobsChart = (data) => {\n  const [ width, setWidth ] = useState(window.innerWidth);\n  const intl = useIntl();\n\n  const handleResize = () => {\n    setWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const bars = [];\n  data?.items?.map((item) => {\n    const date = new Date(item.created_date);\n    const x = `${date.getMonth()}/${date.getDate()}`;\n    return bars.push({ x, y: item });\n  });\n\n  const renderSuccessfulJobs = () => {\n    const successBars = bars.map((tick) => {\n      return {\n        x: tick.x,\n        y: tick.y.successful_count,\n        name: 'Successful',\n        label: `${tick.x} Successful: ${tick.y.successful_count}`\n      };\n    });\n    return <ChartBar data={ successBars }\n      style={ { fill: chart_color_green_400.value } }\n      labelComponent={ <ChartTooltip constrainToVisibleArea /> } />;\n  };\n\n  const renderFailedJobs = () => {\n    const failBars = bars.map((tick) => {\n      return {\n        x: tick.x,\n        y: tick.y.failed_count,\n        name: 'Failed',\n        label: `${tick.x} Failed: ${tick.y.failed_count}`\n      };\n    });\n    return <ChartBar data={ failBars }\n      style={ { fill: chart_color_red_300.value } }\n      labelComponent={ <ChartTooltip constrainToVisibleArea /> } />;\n  };\n\n  const getTickValues = () => {\n    const tickValues = [];\n    for (let i = 0; i < bars.length; i++) {\n      const date = new Date(bars[i].y.created_date);\n      tickValues.push(`${date.getMonth()}/${date.getDate()}`);\n    }\n\n    return tickValues;\n  };\n\n  const colorScaleArray = [\n    chart_color_red_300.value,\n    chart_color_green_400.value\n  ];\n\n  const yAxisStyles = {\n    tickLabels: {\n      fontSize: 10\n    },\n    axisLabel: {\n      padding: 45,\n      fontSize: c_content_small_FontSize\n    }\n  };\n\n  const xAxisStyles = {\n    tickLabels: {\n      fontSize: 10\n    },\n    axisLabel: {\n      padding: 30,\n      fontSize: c_content_small_FontSize\n    }\n  };\n  return (\n    <Chart\n      ariaDesc=\"Jobs across clusters\"\n      ariaTitle=\"Jobs across clusters\"\n      domainPadding={ { x: [ 30, 25 ]} }\n      barRatio={ 1 }\n      height={ 225 }\n      padding={ {\n        bottom: 60,\n        left: 60,\n        right: 20,\n        top: 20\n      } }\n      width={ width }\n      style={ { padding: 0, margin: 0 } }\n    >\n      <ChartAxis tickValues={ getTickValues() } fixLabelOverlap label={ intl.formatMessage(messages.timeDayLegend) } style={ xAxisStyles }/>\n      <ChartAxis dependentAxis\n        showGrid\n        tickFormat={ (t) => Math.round(t) }\n        label={ intl.formatMessage(messages.jobsAcrossClusters) }\n        style={ yAxisStyles }/>\n      <ChartStack colorScale={ colorScaleArray } domainPadding={ { x: [ 10, 2 ]} }>\n        { renderFailedJobs() }\n        { renderSuccessfulJobs() }\n      </ChartStack>\n    </Chart>);\n};\n\nexport default JobsChart;\n","import React from 'react';\nimport { Button, Flex, FlexItem } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport ConfigureCard from '../shared/configure-card';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\n\nconst renderAnalyticsConfigButton = (intl) => (\n  <Flex>\n    <FlexItem>\n      <Button\n        component='a'\n        variant='link'\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={ `https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html` }>\n        { intl.formatMessage(messages.configureAnalyticsLink) }&nbsp;\n        <ExternalLinkAltIcon />\n      </Button>\n    </FlexItem>\n  </Flex>\n);\n\nconst ConfigureAnalyticsCard = () => {\n  const intl = useIntl();\n  return (<ConfigureCard\n    title={ intl.formatMessage(messages.configureAnalyticsTitle) }\n    description={ intl.formatMessage(messages.configureAnalyticsDescription) }\n    renderButtons={ () => renderAnalyticsConfigButton(intl) }/>);\n};\n\nexport default ConfigureAnalyticsCard;\n","import React, { Fragment, useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Bullseye,\n  Card,\n  CardBody,\n  CardTitle, Divider,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  FlexItem,\n  Label,\n  Spinner,\n  Text,\n  Title, Button\n} from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport { fetchClusters, fetchErrorNotifications, fetchWarningNotifications, fetchJobsData } from '../../redux/actions/analytics-actions';\nimport InfoCircleIcon from '@patternfly/react-icons/dist/js/icons/info-circle-icon';\nimport WarningTriangleIcon from '@patternfly/react-icons/dist/js/icons/warning-triangle-icon';\nimport JobsChart from './jobs-chart';\nimport { release } from '../../utilities/app-history';\nimport ConfigureAnalyticsCard from './configure-analytics-card';\nimport ErrorCard from '../shared/error-card';\n\nconst initialState = {\n  isFetching: true\n};\n\nconst analyticsState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst AnalyticsCard = () => {\n  const [{ isFetching }, stateDispatch ] = useReducer(analyticsState, initialState);\n\n  const { isAnalyticsAvailable, isError, clusters, errorNotifications, warningNotifications, jobsData } = useSelector(\n    ({\n      analyticsReducer: {\n        isAnalyticsAvailable,\n        isError,\n        clusters,\n        errorNotifications,\n        warningNotifications,\n        jobsData\n      }\n    }) => ({ isAnalyticsAvailable, isError, clusters, errorNotifications, warningNotifications, jobsData })\n  );\n\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  useEffect(() => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    Promise.all([ dispatch(fetchClusters()), dispatch(fetchErrorNotifications()), dispatch(fetchWarningNotifications()), dispatch(fetchJobsData()) ])\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const renderAnalyticsNotifications = () => {\n    return <React.Fragment>\n      <Title headingLevel=\"h4\">\n        { intl.formatMessage(messages.analyticsCardNotificationsTitle) }\n      </Title>\n      <br/>\n      <DescriptionList className=\"pf-c-description-list.pf-m-vertical\" columnModifier={ {\n        default: '2Col'\n      } }>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            { errorNotifications?.payload?.meta?.count || 0 }\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            <Label\n              color=\"red\"\n              icon={ <InfoCircleIcon/> }\n              isTruncated\n              href={ `${release}ansible/automation-analytics/notifications` }\n            >\n              { intl.formatMessage(messages.critical) }\n            </Label>\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            { warningNotifications?.payload?.meta?.count || 0 }\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            <Label\n              color=\"orange\"\n              icon={ <WarningTriangleIcon/> }\n              isTruncated\n              href={ `${release}ansible/automation-analytics/notifications` }\n            >\n              { intl.formatMessage(messages.warning) }\n            </Label>\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n    </React.Fragment>;\n  };\n\n  const renderAnalyticsInfo = () => {\n    return (\n      <Fragment>\n        <Flex className=\" ans-l-flex ans-l-flex-automation-analytics-info\">\n          <FlexItem>\n            <Text>\n              { intl.formatMessage(messages.hubCardDescription) }\n            </Text>\n            <br/>\n          </FlexItem>\n          <FlexItem>\n            <Title headingLevel=\"h4\">\n              { intl.formatMessage(messages.clusterTitle) }\n            </Title>\n            <br/>\n            <DescriptionList className=\"pf-c-description-list.pf-m-vertical\" columnModifier={ {\n              default: '1Col'\n            } }>\n              <DescriptionListGroup>\n                <DescriptionListTerm>\n                  { clusters?.payload?.templates?.length || 0 }\n                </DescriptionListTerm>\n                <DescriptionListDescription>\n                  <Button\n                    component='a'\n                    variant='link'\n                    href={ `${release}ansible/insights/clusters` }>\n                    { intl.formatMessage(messages.totalClusters) }\n                  </Button>\n                </DescriptionListDescription>\n              </DescriptionListGroup>\n            </DescriptionList>\n          </FlexItem>\n        </Flex>\n      </Fragment>);\n  };\n\n  const renderAnalyticsOther = () =>\n    <Fragment>\n      <Title headingLevel=\"h4\">\n        { intl.formatMessage(messages.analyticsJobTitle) }\n      </Title>\n      <br/>\n      <Flex direction={ { default: 'column' } }>\n        <FlexItem className=\"pf-u-m-0\">\n          <JobsChart items={ jobsData?.payload?.items }/>\n        </FlexItem>\n        <FlexItem className=\"pf-u-m-0 pf-u-pt-0 pf-u-pb-0 pf-u-pl-lg\" >\n          <Bullseye>\n            <Button\n              component='a'\n              variant='link'\n              href={ `${release}ansible/insights/job-explorer` }>\n              { intl.formatMessage(messages.jobsExplorer) }\n            </Button>\n          </Bullseye>\n        </FlexItem>\n      </Flex>\n    </Fragment>;\n\n  const renderAnalyticsCards = () => {\n    if (isError) {\n      return <ErrorCard/>;\n    }\n    else if (isFetching) {\n      return (\n        <Section style={ { backgroundColor: 'white', minHeight: '100%' } }>\n          <Bullseye>\n            <Spinner isSVG />\n          </Bullseye>\n        </Section>\n      );\n    }\n    else {\n      return (\n        <Flex direction={ { default: 'column' } }>\n          <FlexItem>\n            <Flex className=\"ans-l-flex ans-l-flex-automation-analytics-card\">\n              <FlexItem>\n                { renderAnalyticsInfo() }\n              </FlexItem>\n              <Divider/>\n              <FlexItem>\n                { renderAnalyticsNotifications() }\n              </FlexItem>\n            </Flex>\n          </FlexItem>\n          <FlexItem>\n            <FlexItem>\n              { renderAnalyticsOther() }\n            </FlexItem>\n          </FlexItem>\n        </Flex>\n      );\n    }\n  };\n\n  return (\n    !isAnalyticsAvailable ?\n      <ConfigureAnalyticsCard/> :\n      <Fragment>\n        <Card className='ans-c-card-dashboard'>\n          <CardTitle>\n            <Title headingLevel=\"h3\">\n              { intl.formatMessage(messages.analyticsTitle) }\n            </Title>\n          </CardTitle>\n          <CardBody className=\"pf-u-pb-sm\">\n            { renderAnalyticsCards() }\n          </CardBody>\n        </Card>\n      </Fragment>\n  );\n};\n\nexport default AnalyticsCard;\n","import React from 'react';\nimport DashboardHeader from '../shared/dashboard-header';\nimport { Button, Flex, FlexItem, Grid, GridItem, PageSection, Stack, StackItem } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport ConfigureCard from '../shared/configure-card';\nimport HubCard from '../automation-hub/hub-card';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\n\nconst renderButtons = (intl) => (\n  <Flex>\n    <FlexItem>\n      <Button\n        isLarge\n        component='a'\n        variant='primary'\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={ `https://docs.ansible.com/ansible-tower/latest/html/quickinstall/index.html` }>\n        { intl.formatMessage(messages.configureLink) }\n      </Button>\n    </FlexItem>\n  </Flex>\n);\n\nconst renderAnalyticsConfigButton = (intl) => (\n  <Flex>\n    <FlexItem>\n      <Button\n        component='a'\n        variant='link'\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={ `https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html` }>\n        { intl.formatMessage(messages.configureAnalyticsLink) }&nbsp;\n        <ExternalLinkAltIcon />\n      </Button>\n    </FlexItem>\n  </Flex>\n);\n\nconst renderCatalogConfigButton = (intl) => (\n  <Flex>\n    <FlexItem>\n      <Button\n        component='a'\n        variant='link'\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={ `https://access.redhat.com/documentation/en-us/` +\n          `red_hat_ansible_automation_platform/1.2/html/getting_started_with_automation_services_catalog/index` }>\n        { intl.formatMessage(messages.configureCatalogLink) }&nbsp;\n        <ExternalLinkAltIcon />\n      </Button>\n    </FlexItem>\n  </Flex>\n);\n\nconst ConfigureAppPage = () => {\n  const intl = useIntl();\n\n  return <React.Fragment>\n    <DashboardHeader title={ intl.formatMessage(messages.noAppTitle) }\n      description={ intl.formatMessage(messages.configDescription) }\n      renderButtons={ () => renderButtons(intl) } />\n    <PageSection>\n      <Stack hasGutter=\"md\">\n        <StackItem>\n          <Grid hasGutter=\"xl\">\n            <GridItem md={ 6 } sm={ 12 } >\n              <ConfigureCard\n                title={ intl.formatMessage(messages.configureAnalyticsTitle) }\n                description={ intl.formatMessage(messages.configureAnalyticsDescription) }\n                renderButtons={ () => renderAnalyticsConfigButton(intl) }/>\n            </GridItem>\n            <GridItem md={ 6 } sm={ 12 } >\n              <ConfigureCard\n                title={ intl.formatMessage(messages.configureCatalogTitle) }\n                description={ intl.formatMessage(messages.configureCatalogDescription) }\n                renderButtons={ () => renderCatalogConfigButton(intl) }/>\n            </GridItem>\n          </Grid>\n        </StackItem>\n        <StackItem>\n          <HubCard/>\n        </StackItem>\n      </Stack>\n    </PageSection>\n  </React.Fragment>;\n};\n\nexport default ConfigureAppPage;\n","import React from 'react';\nimport DashboardHeader from './dashboard-header';\nimport { Button, Flex, FlexItem } from '@patternfly/react-core';\nimport ArrowRightIcon from '@patternfly/react-icons/dist/js/icons/arrow-right-icon';\nimport messages from '../../messages/messages';\nimport { useIntl } from 'react-intl';\n\nconst renderButtons = (intl) => (\n  <Flex>\n    <FlexItem>\n      <Button\n        isLarge\n        component='a'\n        variant='primary'\n        href={ `https://www.redhat.com/en/technologies/management/ansible/try-it` }>\n        { intl.formatMessage(messages.tryItButton) }\n      </Button>\n    </FlexItem>\n    <FlexItem>\n      <Button\n        component='a'\n        isLarge\n        variant='link'\n        target='_blank'\n        rel='noreferrer'\n        href='https://www.redhat.com/en/technologies/management/ansible'>\n        { intl.formatMessage(messages.learnMoreButton) } &nbsp;\n        <ArrowRightIcon />\n      </Button>\n    </FlexItem>\n  </Flex>\n);\n\nconst NoAppState = () => {\n  const intl = useIntl();\n\n  return <DashboardHeader title={ intl.formatMessage(messages.noAppTitle) }\n    description={ intl.formatMessage(messages.noAppDescription) }\n    renderButtons={ renderButtons } />;\n};\n\nexport default NoAppState;\n","import React from 'react';\nimport DashboardHeader from '../shared/dashboard-header';\nimport { PageSection, Stack, StackItem } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport HubCard from '../automation-hub/hub-card';\nimport CatalogCard from '../catalog/catalog-card';\nimport AnalyticsCard from '../analytics/analytics-card';\nimport { useSelector } from 'react-redux';\nimport ConfigureAppPage from './configure-app-page';\nimport NoAppState from '../shared/no-app-state';\n\nconst PlatformPage = () => {\n  const intl = useIntl();\n  const { isAnalyticsAvailable } = useSelector(\n    ({\n      analyticsReducer: {\n        isAnalyticsAvailable\n      }\n    }) => ({ isAnalyticsAvailable })\n  );\n\n  const { isHubAvailable } = useSelector(\n    ({\n      hubReducer: {\n        isHubAvailable: isHubAvailable\n      }\n    }) => ({ isHubAvailable })\n  );\n\n  const { isCatalogAvailable } = useSelector(\n    ({\n      catalogReducer: {\n        isCatalogAvailable\n      }\n    }) => ({ isCatalogAvailable })\n  );\n\n  if (!isAnalyticsAvailable && !isHubAvailable && !isCatalogAvailable) {\n    return <NoAppState/>;\n  }\n\n  if (isHubAvailable && !isAnalyticsAvailable && !isCatalogAvailable) {\n    return <ConfigureAppPage/>;\n  }\n\n  return <React.Fragment>\n    <DashboardHeader title={ intl.formatMessage(messages.overview) }\n      description={ '' }/>\n    <PageSection>\n      <Stack hasGutter=\"md\">\n        <StackItem>\n          <AnalyticsCard/>\n        </StackItem>\n        <StackItem>\n          <HubCard/>\n        </StackItem>\n        <StackItem>\n          <CatalogCard/>\n        </StackItem>\n      </Stack>\n    </PageSection>\n  </React.Fragment>;\n};\n\nexport default PlatformPage;\n","import React from 'react';\nimport PlatformPage from './platform-page';\n\nconst Dashboard = () => <PlatformPage />;\n\nexport default Dashboard;\n"],"names":["MarketingBanner","className","hasGraphic","graphicRight","light1000","fullBleed","style","children","MarketingBannerSectionClasses","classNames","PageSection","isWidthLimited","propTypes","DashboardHeader","title","description","renderButtons","intl","useIntl","Grid","GridItem","Flex","direction","default","FlexItem","Title","headingLevel","size","spacer","PropTypes","defineMessages","errorStateTitle","id","defaultMessage","errorStateDescription","analyticsTitle","analyticsCardDescription","analyticsJobTitle","analyticsCardNotificationsTitle","totalClusters","jobsExplorer","timeDayLegend","jobsAcrossClusters","clusterTitle","critical","warning","catalogTitle","catalogCardDescription","products","portfolios","platforms","latestOrderTitle","hubTitle","noOrdersTitle","noOrdersDescription","hubCardDescription","hubCardCertifiedCollectionTitle","hubCardCertifiedCollectionDescription","hubCardFeaturedCollectionTitle","partners","collections","syncCollections","syncCollectionsTooltip","modules","roles","plugins","overview","noAppTitle","noAppDescription","configureLink","tryItButton","learnMoreButton","configDescription","configureAnalyticsTitle","configureAnalyticsDescription","configureCatalogTitle","configureCatalogDescription","catalogCardLatestOrdersTitle","catalogCardFeaturedProduct","viewMore","configureAnalyticsLink","configureCatalogLink","axiosInstance","axios","paramsSerializer","params","stringify","getAxiosInstance","interceptors","request","use","config","window","insights","chrome","auth","getUser","response","data","undefined","error","requestId","headers","grapqlInstance","errors","message","errorType","CATALOG_API_BASE","AUTOMATION_HUB_API_BASE","getCollection","offset","get","getSyncCollections","account","setHubAvailability","dispatch","value","type","ActionTypes","payload","setHubError","IconPlaceholder","height","width","cx","cy","r","fill","Logo","props","image","alt","display","justifyContent","alignItems","objectFit","maxHeight","src","pathName","location","pathname","split","shift","prefix","basename","release","createBrowserHistory","Br","ErrorCard","Card","EmptyState","variant","EmptyStateIcon","icon","ExclamationCircleIcon","color","global_danger_color_200","formatMessage","messages","EmptyStateBody","supportLink","href","statusLink","br","appName","initialState","isFetching","hubState","state","action","useReducer","stateDispatch","useSelector","hubReducer","isError","collection","userIdentity","useContext","UserContext","useDispatch","useEffect","Promise","all","load","err","status","identity","account_number","HubHelper","then","meta","count","day","Date","getDate","contents","featuredCollection","content","Fragment","CardTitle","CardBody","Section","backgroundColor","minHeight","Bullseye","Spinner","isSVG","TextContent","Text","align","component","TextVariants","Button","Level","hasGutter","LevelItem","marginRight","Popover","headerContent","bodyContent","padding","Divider","summary","total_count","length","module","role","plugin","c","content_type","contentCounts","latest_version","metadata","filter","item","includes","alignSelf","namespace","company","avatar_url","Label","name","span","Stack","StackItem","target","rel","post","listPortfolios","limit","listPortfolioItems","portfolioItems","portfolioReference","reduce","acc","curr","index","portfolio_id","Object","keys","map","join","forEach","portfolioItemIndex","portfolioName","setCatalogAvailability","setCatalogError","fetchOrders","orders","orderIds","defaultSettings","orderId","orderItems","itemIds","portfolio_item_id","itemId","order","order_id","fetchPortfolios","options","CatalogHelper","fetchPortfolioItems","fetchPlatforms","query","application_types","sourceIds","sources","source","sourceId","sourceDetails","find","sourceDetail","styled","LazyLoadImage","hidden","CardIconContainer","useState","isLoaded","setLoaded","isUnknown","setUnknown","threshold","delayTime","onError","onLoad","Completed","Ordered","Failed","Canceled","Created","Approved","Denied","Error","Undecided","Unknown","TimeAgo","date","key","DateFormat","ConfigureCard","isFilled","maxLine","text","marginBottom","paddingBottom","renderCatalogConfigButton","catalogState","catalogReducer","isCatalogAvailable","permissions","isCatalogAdmin","permission","promiseList","push","fn","featuredProduct","service_offering_source_ref","Badge","isRead","orderStatusMapper","created_at","orderRow","notificationsEndpoint","authenticatedFetch","endpoint","getNotifications","severity","url","URL","origin","searchParams","append","setAnalyticsAvailability","setAnalyticsError","innerWidth","setWidth","handleResize","addEventListener","removeEventListener","bars","items","created_date","x","getMonth","y","successBars","failBars","colorScaleArray","chart_color_red_300","chart_color_green_400","yAxisStyles","tickLabels","fontSize","axisLabel","c_content_small_FontSize","xAxisStyles","Chart","ariaDesc","ariaTitle","domainPadding","barRatio","bottom","left","right","top","margin","ChartAxis","C","tickValues","i","getTickValues","fixLabelOverlap","label","dependentAxis","showGrid","tickFormat","t","Math","round","ChartStack","colorScale","tick","failed_count","ChartBar","labelComponent","ChartTooltip","constrainToVisibleArea","successful_count","renderAnalyticsConfigButton","analyticsState","analyticsReducer","isAnalyticsAvailable","clusters","errorNotifications","warningNotifications","jobsData","AnalyticsHelper","quick_date_range","job_type","group_by_time","org_id","cluster_id","template_id","only_root_workflows_and_standalone_jobs","qs","search","method","body","JSON","DescriptionList","columnModifier","DescriptionListGroup","DescriptionListTerm","templates","DescriptionListDescription","isTruncated","isLarge","md","sm","isHubAvailable"],"sourceRoot":""}