{"version":3,"sources":["webpack://ansible-dashboard/./src/components/shared/marketing-banner.scss","webpack://ansible-dashboard/./src/images/Headers-Red_Hat-White_Automation-a.svg","webpack://ansible-dashboard/./src/components/shared/marketing-banner.js","webpack://ansible-dashboard/./src/components/shared/dashboard-header.js","webpack://ansible-dashboard/./src/messages/messages.js","webpack://ansible-dashboard/./src/helpers/shared/user-login.js","webpack://ansible-dashboard/./src/utilities/constants.js","webpack://ansible-dashboard/./src/helpers/automation-hub/hub-helper.js","webpack://ansible-dashboard/./src/redux/actions/hub-actions.js","webpack://ansible-dashboard/./src/components/automation-hub/content-counts.js","webpack://ansible-dashboard/./src/components/automation-hub/logo.js","webpack://ansible-dashboard/./src/utilities/app-history.js","webpack://ansible-dashboard/./src/components/shared/error-card.js","webpack://ansible-dashboard/./src/components/automation-hub/hub-card.js","webpack://ansible-dashboard/./src/helpers/catalog/catalog-helper.js","webpack://ansible-dashboard/./src/redux/actions/catalog-actions.js","webpack://ansible-dashboard/./src/components/shared/lazy-load-image.js","webpack://ansible-dashboard/./src/components/shared/card-icon.js","webpack://ansible-dashboard/./src/components/shared/order-status-mapper.js","webpack://ansible-dashboard/./src/helpers/shared/helpers.js","webpack://ansible-dashboard/./src/components/shared/configure-card.js","webpack://ansible-dashboard/./src/components/catalog/configure-catalog_card.js","webpack://ansible-dashboard/./src/components/catalog/catalog-card.js","webpack://ansible-dashboard/./src/helpers/analytics/analytics-helper.js","webpack://ansible-dashboard/./src/redux/actions/analytics-actions.js","webpack://ansible-dashboard/./src/components/analytics/jobs-chart.js","webpack://ansible-dashboard/./src/components/analytics/configure-analytics-card.js","webpack://ansible-dashboard/./src/components/analytics/analytics-card.js","webpack://ansible-dashboard/./src/components/dashboard/configure-app-page.js","webpack://ansible-dashboard/./src/components/shared/no-app-state.js","webpack://ansible-dashboard/./src/components/dashboard/platform-page.js","webpack://ansible-dashboard/./src/components/dashboard/dashboard.js","webpack://ansible-dashboard/./src/components/shared/marketing-banner.scss?25c0"],"names":["___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","push","module","id","MarketingBanner","className","hasGraphic","graphicRight","light1000","fullBleed","style","children","MarketingBannerSectionClasses","classNames","PageSection","isWidthLimited","propTypes","DashboardHeader","title","description","renderButtons","intl","useIntl","Grid","GridItem","Flex","direction","default","FlexItem","Title","headingLevel","size","spacer","PropTypes","defineMessages","errorStateTitle","defaultMessage","errorStateDescription","analyticsTitle","analyticsCardDescription","analyticsJobTitle","analyticsCardNotificationsTitle","totalClusters","jobsExplorer","timeDayLegend","jobsAcrossClusters","clusterTitle","critical","warning","catalogTitle","catalogCardDescription","products","portfolios","platforms","latestOrderTitle","hubTitle","hubCardDescription","hubCardCertifiedCollectionTitle","hubCardCertifiedCollectionDescription","hubCardFeaturedCollectionTitle","partners","collections","syncCollections","syncCollectionsTooltip","modules","roles","plugins","overview","noAppTitle","noAppDescription","configureLink","tryItButton","learnMoreButton","configDescription","configureAnalyticsTitle","configureAnalyticsDescription","configureCatalogTitle","configureCatalogDescription","catalogCardLatestOrdersTitle","catalogCardFeaturedProduct","viewMore","configureAnalyticsLink","configureCatalogLink","axiosInstance","axios","paramsSerializer","params","stringify","getAxiosInstance","interceptors","request","use","config","window","insights","chrome","auth","getUser","response","data","undefined","error","requestId","headers","grapqlInstance","errors","message","errorType","CATALOG_API_BASE","AUTOMATION_HUB_API_BASE","getCollection","offset","get","getSyncCollections","account","setHubAvailability","dispatch","value","type","ActionTypes","payload","setHubError","IconPlaceholder","height","width","cx","cy","r","fill","Logo","props","image","alt","display","justifyContent","alignItems","objectFit","maxHeight","src","pathName","location","pathname","split","shift","prefix","basename","release","createBrowserHistory","Br","ErrorCard","Card","EmptyState","variant","EmptyStateIcon","icon","ExclamationCircleIcon","color","global_danger_color_200","formatMessage","messages","EmptyStateBody","supportLink","href","statusLink","br","appName","initialState","isFetching","hubState","state","action","useReducer","stateDispatch","useSelector","hubReducer","isError","collection","userIdentity","useContext","UserContext","useDispatch","useEffect","Promise","all","load","err","status","identity","account_number","HubHelper","then","meta","count","day","Date","getDate","featuredCollection","content","Fragment","CardTitle","CardBody","Section","backgroundColor","minHeight","Bullseye","Spinner","isSVG","Text","DescriptionList","isHorizontal","isAutoFit","autoFitModifier","md","lg","xl","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","Button","component","Level","hasGutter","LevelItem","Popover","headerContent","bodyContent","Divider","summary","total_count","length","contents","role","plugin","c","content_type","contentCounts","latest_version","metadata","namespace","company","avatar_url","Label","Split","SplitItem","name","TextVariants","TextContent","span","Stack","StackItem","isFilled","target","rel","post","listPortfolios","limit","listPortfolioItems","portfolioItems","portfolioReference","reduce","acc","curr","index","portfolio_id","Object","keys","map","join","forEach","portfolioItemIndex","portfolioName","setCatalogAvailability","setCatalogError","fetchOrders","orders","orderIds","defaultSettings","orderId","orderItems","itemIds","portfolio_item_id","itemId","order","filter","order_id","fetchPortfolios","options","CatalogHelper","fetchPortfolioItems","fetchPlatforms","query","application_types","sourceIds","sources","source","sourceId","sourceDetails","find","sourceDetail","styled","LazyLoadImage","hidden","CardIconContainer","useState","isLoaded","setLoaded","isUnknown","setUnknown","threshold","delayTime","onError","onLoad","Completed","Ordered","Failed","Canceled","Created","Approved","Denied","Error","Undecided","Unknown","TimeAgo","date","key","DateFormat","ConfigureCard","Truncate","lines","ellipsis","marginBottom","paddingBottom","renderCatalogConfigButton","catalogState","catalogReducer","isCatalogAvailable","permissions","isCatalogAdmin","permission","promiseList","fn","featuredProduct","service_offering_source_ref","Badge","isRead","created_at","orderStatusMapper","orderRow","notificationsEndpoint","authenticatedFetch","endpoint","getNotifications","severity","url","URL","origin","searchParams","append","setAnalyticsAvailability","setAnalyticsError","innerWidth","setWidth","containerRef","React","current","clientWidth","bars","items","item","created_date","x","getMonth","y","successBars","failBars","colorScaleArray","chart_color_red_300","chart_color_green_400","ref","Chart","ariaDesc","ariaTitle","domainPadding","barRatio","padding","bottom","left","right","top","ChartAxis","C","tickValues","i","getTickValues","fixLabelOverlap","dependentAxis","showGrid","ChartStack","colorScale","tick","failed_count","label","ChartBar","labelComponent","ChartTooltip","constrainToVisibleArea","successful_count","renderAnalyticsConfigButton","analyticsState","analyticsReducer","isAnalyticsAvailable","clusters","errorNotifications","warningNotifications","jobsData","AnalyticsHelper","quick_date_range","job_type","group_by_time","org_id","cluster_id","template_id","only_root_workflows_and_standalone_jobs","qs","search","method","body","JSON","columnModifier","templates","isTruncated","automation-analytics_other","transform","isLarge","sm","isHubAvailable","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/ansible-dashboard-route.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nimport ___CSS_LOADER_URL_IMPORT_0___ from \"../../images/Headers-Red_Hat-White_Automation-a.svg\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ansible-dashboard .ins-c-marketing-banner{--ins-c-marketing-banner--before--Opacity: 0.3;--ins-c-marketing-banner--before--BackgroundSize: 18.75rem;--ins-c-marketing-banner--PaddingTop: var(--pf-c-page__main-section--PaddingTop, var(--pf-global--spacer--2xl));--ins-c-marketing-banner--PaddingRight: var(--pf-c-page__main-section--PaddingRight, var(--pf-global--spacer--md));--ins-c-marketing-banner--PaddingBottom: var(--pf-c-page__main-section--PaddingBottom, var(--pf-global--spacer--2xl));--ins-c-marketing-banner--PaddingLeft: var(--pf-c-page__main-section--PaddingLeft, var(--pf-global--spacer--md));--ins-c-marketing-banner--before--content--width: 2fr;--ins-c-marketing-banner--before--graphic--width: 1fr;--ins-c-marketing-banner--m-with-graphic--GridTemplateAreas: \\\"graphic content\\\";--ins-c-marketing-banner--m-with-graphic--GridTemplateColumns: var(--ins-c-marketing-banner--before--graphic--width)\\n    var(--ins-c-marketing-banner--before--content--width);--ins-c-marketing-banner--m-graphic-right--GridTemplateAreas: \\\"content graphic\\\";--ins-c-marketing-banner--m-graphic-right--GridTemplateColumns: var(--ins-c-marketing-banner--before--content--width)\\n    var(--ins-c-marketing-banner--before--graphic--width);--ins-c-marketing-banner--before--graphic--width:var(--ins-c-marketing-banner--graphic--width)}@media screen and (min-width: 992px){.ansible-dashboard .ins-c-marketing-banner{--ins-c-marketing-banner--before--Opacity: 0.65}}@media screen and (min-width: 1450px){.ansible-dashboard .ins-c-marketing-banner{--ins-c-marketing-banner--before--Opacity: 1}}@media (min-width: 576px){.ansible-dashboard .ins-c-marketing-banner{--ins-c-marketing-banner--before--graphic--width:var(--ins-c-marketing-banner--graphic--width-on-sm, var(--ins-c-marketing-banner--graphic--width))}}@media (min-width: 768px){.ansible-dashboard .ins-c-marketing-banner{--ins-c-marketing-banner--before--graphic--width:var(--ins-c-marketing-banner--graphic--width-on-md, var(--ins-c-marketing-banner--graphic--width-on-sm, var(--ins-c-marketing-banner--graphic--width)))}}@media (min-width: 992px){.ansible-dashboard .ins-c-marketing-banner{--ins-c-marketing-banner--before--graphic--width:var(--ins-c-marketing-banner--graphic--width-on-lg, var(--ins-c-marketing-banner--graphic--width-on-md, var(--ins-c-marketing-banner--graphic--width-on-sm, var(--ins-c-marketing-banner--graphic--width))))}}@media (min-width: 1200px){.ansible-dashboard .ins-c-marketing-banner{--ins-c-marketing-banner--before--graphic--width:var(--ins-c-marketing-banner--graphic--width-on-xl, var(--ins-c-marketing-banner--graphic--width-on-lg, var(--ins-c-marketing-banner--graphic--width-on-md, var(--ins-c-marketing-banner--graphic--width-on-sm, var(--ins-c-marketing-banner--graphic--width)))))}}@media (min-width: 1450px){.ansible-dashboard .ins-c-marketing-banner{--ins-c-marketing-banner--before--graphic--width:var(--ins-c-marketing-banner--graphic--width-on-2xl, var(--ins-c-marketing-banner--graphic--width-on-xl, var(--ins-c-marketing-banner--graphic--width-on-lg, var(--ins-c-marketing-banner--graphic--width-on-md, var(--ins-c-marketing-banner--graphic--width-on-sm, var(--ins-c-marketing-banner--graphic--width))))))}}.ansible-dashboard .ins-c-marketing-banner.ins-m-with-graphic:not(.pf-m-limit-width),.ansible-dashboard .ins-c-marketing-banner.ins-m-with-graphic .pf-c-page__main-body{display:grid;grid-template-columns:1fr;grid-template-areas:\\\"content\\\";grid-gap:var(--ins-m-marketing-page--ColumnGap);padding-top:var(--ins-c-marketing-banner--PaddingTop);padding-bottom:var(--ins-c-marketing-banner--PaddingBottom)}@media screen and (min-width: 768px){.ansible-dashboard .ins-c-marketing-banner.ins-m-with-graphic:not(.pf-m-limit-width),.ansible-dashboard .ins-c-marketing-banner.ins-m-with-graphic .pf-c-page__main-body{grid-template-areas:var(--ins-c-marketing-banner--m-with-graphic--GridTemplateAreas);grid-template-columns:var(--ins-c-marketing-banner--m-with-graphic--GridTemplateColumns)}}.ansible-dashboard .ins-c-marketing-banner.ins-m-with-graphic:not(.pf-m-limit-width)>*,.ansible-dashboard .ins-c-marketing-banner.ins-m-with-graphic .pf-c-page__main-body>*{position:relative;grid-area:content}.ansible-dashboard .ins-c-marketing-banner.ins-m-with-graphic:not(.pf-m-limit-width)::before,.ansible-dashboard .ins-c-marketing-banner.ins-m-with-graphic .pf-c-page__main-body::before{content:\\\"\\\";grid-area:content;margin-top:var(--ins-c-marketing-banner--before--Offset--top);margin-right:var(--ins-c-marketing-banner--before--Offset--right);margin-bottom:var(--ins-c-marketing-banner--before--Offset--bottom);margin-left:var(--ins-c-marketing-banner--before--Offset--left);background-image:url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");background-size:var(--ins-c-marketing-banner--before--BackgroundSize);background-position-x:20px;background-position-y:-8px;opacity:var(--ins-c-marketing-banner--before--Opacity)}@media screen and (min-width: 768px){.ansible-dashboard .ins-c-marketing-banner.ins-m-with-graphic:not(.pf-m-limit-width)::before,.ansible-dashboard .ins-c-marketing-banner.ins-m-with-graphic .pf-c-page__main-body::before{grid-area:graphic}}.ansible-dashboard .ins-c-marketing-banner.ins-m-full-bleed{--ins-c-marketing-banner--before--Offset--top: calc(var(--ins-c-marketing-banner--PaddingTop) * -1);--ins-c-marketing-banner--before--Offset--bottom: calc(var(--ins-c-marketing-banner--PaddingBottom) * -1);--ins-c-marketing-banner--before--Offset--left: calc(var(--ins-c-marketing-banner--PaddingLeft) * -1)}.ansible-dashboard .ins-c-marketing-banner.ins-m-graphic-right{--ins-c-marketing-banner--before--Offset--right: calc(var(--ins-c-marketing-banner--PaddingRight) * -1);--ins-c-marketing-banner--before--Offset--left: 0}@media screen and (min-width: 768px){.ansible-dashboard .ins-c-marketing-banner.ins-m-graphic-right{--ins-c-marketing-banner--m-with-graphic--GridTemplateAreas: var(\\n        --ins-c-marketing-banner--m-graphic-right--GridTemplateAreas\\n      );--ins-c-marketing-banner--m-with-graphic--GridTemplateColumns: var(\\n        --ins-c-marketing-banner--m-graphic-right--GridTemplateColumns\\n      )}}.ansible-dashboard .ins-c-marketing-banner[class*=\\\"pf-m-light-\\\"].pf-c-page__main-section .pf-c-button.pf-m-primary{color:white;background-color:#06c}.ansible-dashboard .ins-c-marketing-banner[class*=\\\"pf-m-light-\\\"].pf-c-page__main-section .pf-c-button.pf-m-primary:hover,.ansible-dashboard .ins-c-marketing-banner[class*=\\\"pf-m-light-\\\"].pf-c-page__main-section .pf-c-button.pf-m-primary:focus,.ansible-dashboard .ins-c-marketing-banner[class*=\\\"pf-m-light-\\\"].pf-c-page__main-section .pf-c-button.pf-m-primary:active{color:white;background-color:#004080}.ansible-dashboard .ins-c-marketing-banner[class*=\\\"pf-m-light-\\\"].pf-c-page__main-section .pf-c-button.pf-m-secondary::after,.ansible-dashboard .ins-c-marketing-banner[class*=\\\"pf-m-light-\\\"].pf-c-page__main-section .pf-c-button.pf-m-tertiary::after{border:0}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/shared/marketing-banner.scss\"],\"names\":[],\"mappings\":\"AAAA,2CACwB,8CAA0C,CAAK,0DAAiD,CAAU,+GAAqC,CAA2E,kHAAuC,CAA4E,qHAAwC,CAA8E,gHAAsC,CAA2E,qDAAiD,CAAK,qDAAiD,CAAK,8EAA4D,CAAmB;yDAA8D,CAC3wB,+EAA6D,CAAmB;yDAA+D,CAC/I,8FAAiD,CAA8C,qCAHzJ,2CAGsN,+CAA0C,CAAO,CAAA,sCAHvQ,2CAGqU,4CAA0C,CAAI,CAAA,0BAHnX,2CAGqa,mJAAiD,CAAoG,CAAA,0BAH1jB,2CAG4mB,wMAAiD,CAAyJ,CAAA,0BAHtzB,2CAGw2B,6PAAiD,CAA8M,CAAA,2BAHvmC,2CAG0pC,kTAAiD,CAAmQ,CAAA,2BAH98C,2CAGigD,wWAAiD,CAAyT,CAH32D,yKAG8+D,YAAY,CAAC,yBAAyB,CAAC,6BAA6B,CAAC,+CAA+C,CAAC,qDAAqD,CAAC,2DAA2D,CAAC,qCAHrtE,yKAG63E,oFAAoF,CAAC,wFAAwF,CAAE,CAH5iF,6KAGmrF,iBAAiB,CAAC,iBAAiB,CAHttF,yLAG02F,UAAU,CAAC,iBAAiB,CAAC,6DAA6D,CAAC,iEAAiE,CAAC,mEAAmE,CAAC,+DAA+D,CAAC,wDAA2E,CAAC,qEAAqE,CAAC,0BAA0B,CAAC,0BAA0B,CAAC,sDAAsD,CAAC,qCAH14G,yLAGkkH,iBAAiB,CAAE,CAHrlH,4DAG8nH,mGAA8C,CAAsD,yGAAiD,CAAyD,qGAA+C,CAH33H,+DAG89H,uGAAgD,CAAwD,iDAA+C,CAAG,qCAHxnI,+DAGysI;;OAA4D,CAE7vI;;OAA8D,CAE9D,CAPR,mHAOyG,WAAW,CAAC,qBAAqB,CAP1I,4WAO8b,WAAW,CAAC,wBAAwB,CAPle,uPAOorB,QAAQ\",\"sourcesContent\":[\".ansible-dashboard{\\n.ins-c-marketing-banner{--ins-c-marketing-banner--before--Opacity: 0.3;--ins-c-marketing-banner--before--BackgroundSize: 18.75rem;--ins-c-marketing-banner--PaddingTop: var(--pf-c-page__main-section--PaddingTop, var(--pf-global--spacer--2xl));--ins-c-marketing-banner--PaddingRight: var(--pf-c-page__main-section--PaddingRight, var(--pf-global--spacer--md));--ins-c-marketing-banner--PaddingBottom: var(--pf-c-page__main-section--PaddingBottom, var(--pf-global--spacer--2xl));--ins-c-marketing-banner--PaddingLeft: var(--pf-c-page__main-section--PaddingLeft, var(--pf-global--spacer--md));--ins-c-marketing-banner--before--content--width: 2fr;--ins-c-marketing-banner--before--graphic--width: 1fr;--ins-c-marketing-banner--m-with-graphic--GridTemplateAreas: \\\"graphic content\\\";--ins-c-marketing-banner--m-with-graphic--GridTemplateColumns: var(--ins-c-marketing-banner--before--graphic--width)\\n    var(--ins-c-marketing-banner--before--content--width);--ins-c-marketing-banner--m-graphic-right--GridTemplateAreas: \\\"content graphic\\\";--ins-c-marketing-banner--m-graphic-right--GridTemplateColumns: var(--ins-c-marketing-banner--before--content--width)\\n    var(--ins-c-marketing-banner--before--graphic--width);--ins-c-marketing-banner--before--graphic--width:var(--ins-c-marketing-banner--graphic--width)}@media screen and (min-width: 992px){.ins-c-marketing-banner{--ins-c-marketing-banner--before--Opacity: 0.65}}@media screen and (min-width: 1450px){.ins-c-marketing-banner{--ins-c-marketing-banner--before--Opacity: 1}}@media (min-width: 576px){.ins-c-marketing-banner{--ins-c-marketing-banner--before--graphic--width:var(--ins-c-marketing-banner--graphic--width-on-sm, var(--ins-c-marketing-banner--graphic--width))}}@media (min-width: 768px){.ins-c-marketing-banner{--ins-c-marketing-banner--before--graphic--width:var(--ins-c-marketing-banner--graphic--width-on-md, var(--ins-c-marketing-banner--graphic--width-on-sm, var(--ins-c-marketing-banner--graphic--width)))}}@media (min-width: 992px){.ins-c-marketing-banner{--ins-c-marketing-banner--before--graphic--width:var(--ins-c-marketing-banner--graphic--width-on-lg, var(--ins-c-marketing-banner--graphic--width-on-md, var(--ins-c-marketing-banner--graphic--width-on-sm, var(--ins-c-marketing-banner--graphic--width))))}}@media (min-width: 1200px){.ins-c-marketing-banner{--ins-c-marketing-banner--before--graphic--width:var(--ins-c-marketing-banner--graphic--width-on-xl, var(--ins-c-marketing-banner--graphic--width-on-lg, var(--ins-c-marketing-banner--graphic--width-on-md, var(--ins-c-marketing-banner--graphic--width-on-sm, var(--ins-c-marketing-banner--graphic--width)))))}}@media (min-width: 1450px){.ins-c-marketing-banner{--ins-c-marketing-banner--before--graphic--width:var(--ins-c-marketing-banner--graphic--width-on-2xl, var(--ins-c-marketing-banner--graphic--width-on-xl, var(--ins-c-marketing-banner--graphic--width-on-lg, var(--ins-c-marketing-banner--graphic--width-on-md, var(--ins-c-marketing-banner--graphic--width-on-sm, var(--ins-c-marketing-banner--graphic--width))))))}}.ins-c-marketing-banner.ins-m-with-graphic:not(.pf-m-limit-width),.ins-c-marketing-banner.ins-m-with-graphic .pf-c-page__main-body{display:grid;grid-template-columns:1fr;grid-template-areas:\\\"content\\\";grid-gap:var(--ins-m-marketing-page--ColumnGap);padding-top:var(--ins-c-marketing-banner--PaddingTop);padding-bottom:var(--ins-c-marketing-banner--PaddingBottom)}@media screen and (min-width: 768px){.ins-c-marketing-banner.ins-m-with-graphic:not(.pf-m-limit-width),.ins-c-marketing-banner.ins-m-with-graphic .pf-c-page__main-body{grid-template-areas:var(--ins-c-marketing-banner--m-with-graphic--GridTemplateAreas);grid-template-columns:var(--ins-c-marketing-banner--m-with-graphic--GridTemplateColumns)}}.ins-c-marketing-banner.ins-m-with-graphic:not(.pf-m-limit-width)>*,.ins-c-marketing-banner.ins-m-with-graphic .pf-c-page__main-body>*{position:relative;grid-area:content}.ins-c-marketing-banner.ins-m-with-graphic:not(.pf-m-limit-width)::before,.ins-c-marketing-banner.ins-m-with-graphic .pf-c-page__main-body::before{content:\\\"\\\";grid-area:content;margin-top:var(--ins-c-marketing-banner--before--Offset--top);margin-right:var(--ins-c-marketing-banner--before--Offset--right);margin-bottom:var(--ins-c-marketing-banner--before--Offset--bottom);margin-left:var(--ins-c-marketing-banner--before--Offset--left);background-image:url(\\\"../../images/Headers-Red_Hat-White_Automation-a.svg\\\");background-size:var(--ins-c-marketing-banner--before--BackgroundSize);background-position-x:20px;background-position-y:-8px;opacity:var(--ins-c-marketing-banner--before--Opacity)}@media screen and (min-width: 768px){.ins-c-marketing-banner.ins-m-with-graphic:not(.pf-m-limit-width)::before,.ins-c-marketing-banner.ins-m-with-graphic .pf-c-page__main-body::before{grid-area:graphic}}.ins-c-marketing-banner.ins-m-full-bleed{--ins-c-marketing-banner--before--Offset--top: calc(var(--ins-c-marketing-banner--PaddingTop) * -1);--ins-c-marketing-banner--before--Offset--bottom: calc(var(--ins-c-marketing-banner--PaddingBottom) * -1);--ins-c-marketing-banner--before--Offset--left: calc(var(--ins-c-marketing-banner--PaddingLeft) * -1)}.ins-c-marketing-banner.ins-m-graphic-right{--ins-c-marketing-banner--before--Offset--right: calc(var(--ins-c-marketing-banner--PaddingRight) * -1);--ins-c-marketing-banner--before--Offset--left: 0}@media screen and (min-width: 768px){.ins-c-marketing-banner.ins-m-graphic-right{--ins-c-marketing-banner--m-with-graphic--GridTemplateAreas: var(\\n        --ins-c-marketing-banner--m-graphic-right--GridTemplateAreas\\n      );--ins-c-marketing-banner--m-with-graphic--GridTemplateColumns: var(\\n        --ins-c-marketing-banner--m-graphic-right--GridTemplateColumns\\n      )}}.ins-c-marketing-banner[class*=\\\"pf-m-light-\\\"].pf-c-page__main-section .pf-c-button.pf-m-primary{color:white;background-color:#06c}.ins-c-marketing-banner[class*=\\\"pf-m-light-\\\"].pf-c-page__main-section .pf-c-button.pf-m-primary:hover,.ins-c-marketing-banner[class*=\\\"pf-m-light-\\\"].pf-c-page__main-section .pf-c-button.pf-m-primary:focus,.ins-c-marketing-banner[class*=\\\"pf-m-light-\\\"].pf-c-page__main-section .pf-c-button.pf-m-primary:active{color:white;background-color:#004080}.ins-c-marketing-banner[class*=\\\"pf-m-light-\\\"].pf-c-page__main-section .pf-c-button.pf-m-secondary::after,.ins-c-marketing-banner[class*=\\\"pf-m-light-\\\"].pf-c-page__main-section .pf-c-button.pf-m-tertiary::after{border:0}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","export default __webpack_public_path__ + \"fonts/Headers-Red_Hat-White_Automation-a.svg\";","import './marketing-banner.scss';\n\nimport { PageSection } from '@patternfly/react-core';\nimport React from 'react';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\n\nconst MarketingBanner = ({ className, hasGraphic, graphicRight, light1000, fullBleed, style, children }) => {\n\n  const MarketingBannerSectionClasses = classNames(\n    className,\n    'ins-c-marketing-banner',\n    { [`ins-m-with-graphic `]: hasGraphic },\n    { [`ins-m-graphic-right`]: graphicRight },\n    { [`ins-m-light-1000 pf-m-light-1000`]: light1000 },\n    { [`ins-m-full-bleed`]: fullBleed }\n  );\n\n  return <PageSection\n    className={ MarketingBannerSectionClasses }\n    style={ style }\n    isWidthLimited>\n    { children }\n  </PageSection>;\n};\n\nexport default MarketingBanner;\n\nMarketingBanner.propTypes = {\n  children: propTypes.any.isRequired,\n  className: propTypes.string,\n  style: propTypes.any,\n  graphicRight: propTypes.bool,\n  hasGraphic: propTypes.bool,\n  light1000: propTypes.bool,\n  fullBleed: propTypes.bool,\n  isWidthLimited: propTypes.bool\n};\n","import { Grid, GridItem, Flex, FlexItem, Title  } from '@patternfly/react-core';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport MarketingBanner from './marketing-banner';\n\nconst DashboardHeader = ({ title, description, renderButtons }) => {\n  const intl = useIntl();\n\n  return (<React.Fragment>\n    <MarketingBanner\n      hasGraphic\n      graphicRight\n      light1000\n      fullBleed\n\n      style={ {\n        '--ins-c-marketing-banner--graphic--width-on-md': '200px',\n        '--ins-c-marketing-banner--graphic--width-on-xl': '400px'\n      } }>\n      <Grid>\n        <GridItem>\n          <Flex direction={ { default: 'column' } }>\n            <FlexItem>\n              <Title headingLevel='h1' size='2xl'>\n                { title }\n              </Title>\n            </FlexItem>\n            { (description && description !== '') && <FlexItem spacer={ { default: 'spacer2xl' } }>\n              <div className='ins-c-width-limiter' style={ { '--ins-c-width-limiter--MaxWidth': '600px' } }>\n                <p className='ins-c-text--black-400'>{ description }</p>\n              </div>\n            </FlexItem> }\n            { renderButtons ? <FlexItem>\n              { renderButtons(intl) }\n            </FlexItem> : null\n            }\n          </Flex>\n        </GridItem>\n      </Grid>\n    </MarketingBanner>\n  </React.Fragment>);\n};\n\nDashboardHeader.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  renderButtons: PropTypes.func.isRequired\n};\n\nexport default DashboardHeader;\n","import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  errorStateTitle: {\n    id: 'error.state.title',\n    defaultMessage: 'Something went wrong'\n  },\n  errorStateDescription: {\n    id: 'error.state.description',\n    defaultMessage:\n    // eslint-disable-next-line max-len\n      'There was a problem processing the request. Please try again. <br></br> If the problem persists, contact {supportLink} or check our {statusLink} page for known outages.'\n  },\n  analyticsTitle: {\n    id: 'analytics.title',\n    defaultMessage: 'Insights Analytics'\n  },\n  analyticsCardDescription: {\n    id: 'analytics.description',\n    defaultMessage: 'Gain insights into your deployments through visual dashboards and organization statistics calculate ' +\n        'your return on investment and explore automation processes details.'\n  },\n  analyticsJobTitle: {\n    id: 'analytics.jobs.title',\n    defaultMessage: 'Job status'\n  },\n  analyticsCardNotificationsTitle: {\n    id: 'analytics.notifications.title',\n    defaultMessage: 'Notifications'\n  },\n  totalClusters: {\n    id: 'analytics.total.clusters',\n    defaultMessage: 'Total clusters'\n  },\n  jobsExplorer: {\n    id: 'analytics.jobs.explorer',\n    defaultMessage: 'View Job Explorer'\n  },\n  timeDayLegend: {\n    id: 'analytics.time.day.legend',\n    defaultMessage: 'Time: Day'\n  },\n  jobsAcrossClusters: {\n    id: 'analytics.jobs.across.clusters',\n    defaultMessage: 'Jobs across clusters'\n  },\n  clusterTitle: {\n    id: 'analytics.clusters.title',\n    defaultMessage: 'Clusters'\n  },\n  critical: {\n    id: 'analytics.critical',\n    defaultMessage: 'Critical'\n  },\n  warning: {\n    id: 'analytics.warning',\n    defaultMessage: 'Warnings'\n  },\n  catalogTitle: {\n    id: 'catalog.title',\n    defaultMessage: 'Automation Services Catalog'\n  },\n  catalogCardDescription: {\n    id: 'catalog.description',\n    defaultMessage: 'Collect and distribute automation content, govern content by approval processes and assure sign-off by assigned groups.'\n  },\n  products: {\n    id: 'catalog.products',\n    defaultMessage: 'Products'\n  },\n  portfolios: {\n    id: 'catalog.portfolios',\n    defaultMessage: 'Portfolios'\n  },\n  platforms: {\n    id: 'catalog.platforms',\n    defaultMessage: 'Platforms'\n  },\n  latestOrderTitle: {\n    id: 'catalog.latestOrder',\n    defaultMessage: 'Latest orders'\n  },\n  hubTitle: {\n    id: 'hub.title',\n    defaultMessage: 'Automation Hub'\n  },\n  hubCardDescription: {\n    id: 'hub.description',\n    defaultMessage: 'Find and use content that is supported by Red Hat and our partners to deliver reassurance for the most demanding environments'\n  },\n  hubCardCertifiedCollectionTitle: {\n    id: 'hub.certified.title',\n    defaultMessage: 'Certified Ansible Collections'\n  },\n  hubCardCertifiedCollectionDescription: {\n    id: 'hub.certified.description',\n    defaultMessage: 'View Ansible Content Collections certified and supported by Red Hat. ' +\n        'Download collections or sync them to your local repositories.'\n  },\n  hubCardFeaturedCollectionTitle: {\n    id: 'hub.featured.title',\n    defaultMessage: 'Featured collection'\n  },\n  partners: {\n    id: 'hub.partners',\n    defaultMessage: 'Partners'\n  },\n  collections: {\n    id: 'hub.collections',\n    defaultMessage: 'Collections'\n  },\n  syncCollections: {\n    id: 'hub.syncCollections',\n    defaultMessage: 'Collections set to sync'\n  },\n  syncCollectionsTooltip: {\n    id: 'hub.syncCollectionsTooltip',\n    defaultMessage: 'This is the number of collections that your organization will sync if you have connected to Private Hub.'\n  },\n\n  modules: {\n    id: 'hub.modules',\n    defaultMessage: 'Modules'\n  },\n  roles: {\n    id: 'hub.roles',\n    defaultMessage: 'Roles'\n  },\n  plugins: {\n    id: 'hub.plugins',\n    defaultMessage: 'Plugins'\n  },\n  overview: {\n    id: 'ansible.overview',\n    defaultMessage: 'Overview'\n  },\n  noAppTitle: {\n    id: 'no.app.title',\n    defaultMessage: 'Get started with Red Hat Ansible Automation Platform'\n  },\n  noAppDescription: {\n    id: 'no.app.description',\n    defaultMessage: 'Red Hat Ansible Automation Platform simplifies the development and operation of automation' +\n        ' workloads across diverse hybrid environments using the Automation Controller, certified and supported content' +\n        ' collections, and the hosted services on cloud.redhat.com'\n  },\n  configureLink: {\n    id: 'configure.button',\n    defaultMessage: 'Install and configure your infrastructure'\n  },\n  tryItButton: {\n    id: 'try.it.button',\n    defaultMessage: 'Try it free'\n  },\n  learnMoreButton: {\n    id: 'learn.more.button',\n    defaultMessage: 'Learn more'\n  },\n  configDescription: {\n    id: 'config.description',\n    defaultMessage: 'Install and configure your Ansible Automation Controller clusters. Once your Ansible Automation ' +\n        'Controller infrastructure is in place, connect it to the hosted services available on cloud.redhat.com.' +\n        'Learn how connect to each service in the tiles below.'\n  },\n  configureAnalyticsTitle: {\n    id: 'configure.analytics.title',\n    defaultMessage: 'Connect Insights Analytics'\n  },\n  configureAnalyticsDescription: {\n    id: 'configure.analytics.description',\n    defaultMessage: 'Gain insights into your deployments through visual dashboards and organization statistics, ' +\n        'calculate your return on investment, and explore automation processes details'\n  },\n  configureCatalogTitle: {\n    id: 'configure.catalog.title',\n    defaultMessage: 'Connect Automation Services Catalog'\n  },\n  configureCatalogDescription: {\n    id: 'configure.catalog.description',\n    defaultMessage: 'Use Automation Services Catalog to collect and distribute automation content, govern your content by designing ' +\n        'and attaching approval processes, and ensure required sign-off is obtained by assigned organizational groups.'\n  },\n  catalogCardLatestOrdersTitle: {\n    id: 'catalog.card.orders.title',\n    defaultMessage: 'Latest orders'\n  },\n  catalogCardFeaturedProduct: {\n    id: 'catalog.card.featured.title',\n    defaultMessage: 'Latest created product'\n  },\n  viewMore: {\n    id: 'labels.view.more',\n    defaultMessage: 'View more'\n  },\n  configureAnalyticsLink: {\n    id: 'configure.analytics.link',\n    defaultMessage: 'Configure Insights Analytics'\n  },\n  configureCatalogLink: {\n    id: 'configure.catalog.link',\n    defaultMessage: 'Configure Automation Services Catalog'\n  }\n});\n\nexport default messages;\n","import axios from 'axios';\nimport { stringify } from 'qs';\n\nconst axiosInstance = axios.create({\n  paramsSerializer: (params) => stringify(params)\n});\n\nconst resolveInterceptor = (response) => response.data || response;\nconst errorInterceptor = (error = {}) => {\n  const requestId = error.response?.headers?.['x-rh-insights-request-id'];\n  throw requestId ? { ...error.response, requestId } : { ...error.response };\n};\n\n// check identity before each request. If the token is expired it will log out user\naxiosInstance.interceptors.request.use(async (config) => {\n  await window.insights.chrome.auth.getUser();\n  return config;\n});\naxiosInstance.interceptors.response.use(resolveInterceptor);\naxiosInstance.interceptors.response.use(undefined, errorInterceptor);\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n\nconst grapqlInstance = axios.create();\ngrapqlInstance.interceptors.request.use(async (config) => {\n  await window.insights.chrome.auth.getUser();\n  return config;\n});\n/**\n * Graphql does not return error response when the qery fails.\n * Instead it returns 200 response with error object.\n * We catch it and throw it to trigger notification middleware\n */\ngrapqlInstance.interceptors.response.use(({ data }) => {\n  if (data.errors) {\n    throw {\n      message: data.errors[0].errorType,\n      data: data.errors[0].message\n    };\n  }\n\n  return data;\n});\n\nexport function getGraphqlInstance() {\n  return grapqlInstance;\n}\n","export const CATALOG_API_BASE = `/api/catalog/v1.3`;\nexport const AUTOMATION_HUB_UI_API_BASE = `/api/automation-hub/_ui/v1/`;\nexport const AUTOMATION_HUB_API_BASE = `/api/automation-hub/v3`;\nexport const AUTOMATION_HUB_BASE = `/api/automation-hub`;\nexport const ANALYTICS_API_BASE_V1 = `/api/tower-analytics/v1`;\nexport const ANALYTICS_API_BASE_V0 = `/api/tower-analytics/v0`;\nexport const SOURCES_API_BASE = `/api/sources/v1.0`;\nexport const CATALOG_INVENTORY_API_BASE = `/api/catalog-inventory/v1.0`;\n","/* eslint camelcase: 0 */\nimport { getAxiosInstance } from '../shared/user-login';\nimport { AUTOMATION_HUB_BASE, AUTOMATION_HUB_API_BASE, AUTOMATION_HUB_UI_API_BASE } from '../../utilities/constants';\n\nconst axiosInstance = getAxiosInstance();\n\nexport const getCollections = () =>\n  axiosInstance.get(\n    `${AUTOMATION_HUB_API_BASE}/collections?deprecated=false&&limit=30`\n  );\n\nexport const getCollection = (offset) => {\n  return axiosInstance.get(\n    `${AUTOMATION_HUB_UI_API_BASE}/repo/published/?deprecated=false&offset=${offset}&limit=1`\n  );\n};\n\nexport const getPartners = () =>\n  axiosInstance.get(\n    `${AUTOMATION_HUB_API_BASE}/namespaces?limit=1`\n  );\n\nexport const getSyncCollections = (account) =>\n  axiosInstance.get(\n    `${AUTOMATION_HUB_BASE}/content/${account}-synclist/v3/collections?limit=1`\n  );\n","import * as ActionTypes from '../action-types';\nimport * as HubHelper from '../../helpers/automation-hub/hub-helper';\n\nconst setHubAvailability = (dispatch, value = true) => {\n  return dispatch({\n    type: ActionTypes.SET_HUB_AVAILABILITY,\n    payload: value\n  });\n};\n\nconst setHubError = (dispatch, value = true) => {\n  return dispatch({\n    type: ActionTypes.SET_HUB_ERROR,\n    payload: value\n  });\n};\n\nexport const fetchCollections = () => (dispatch) => {\n  const load = HubHelper.getCollections().catch((err) => {\n    if (err.status === 404) {\n      setHubAvailability(dispatch, false);\n    }\n    else {\n      setHubError(dispatch, true);\n    }\n  });\n  return dispatch({\n    type: ActionTypes.FETCH_COLLECTIONS,\n    payload: load\n  });\n};\n\nexport const fetchCollection = (offset) => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_COLLECTION,\n    payload: HubHelper.getCollection(offset).catch((err) => {\n      if (err.status === 404) {\n        setHubAvailability(dispatch, false);\n      }\n      else {\n        setHubError(dispatch, true);\n      }\n    })\n  });\n};\n\nexport const fetchPartners = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_PARTNERS,\n    payload: HubHelper.getPartners().catch((err) => {\n      if (err.status === 404) {\n        setHubAvailability(dispatch, false);\n      }\n      else {\n        setHubError(dispatch, true);\n      }\n    })\n  });\n};\n\nexport const fetchSyncCollections = (account) => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_SYNC_COLLECTIONS,\n    payload: HubHelper.getSyncCollections(account).catch((err) => {\n      if (err.status === 404) {\n        setHubAvailability(dispatch, false);\n      }\n      else {\n        setHubError(dispatch, true);\n      }\n    })\n  });\n};\n\n","export const contentCounts = (content) => {\n  const summary = {\n    total_count: content.length,\n    contents: { module: 0, role: 0, plugin: 0 }\n  };\n\n  for (const c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const IconPlaceholder = ({\n  height = 40\n}) => (\n  <svg height={ height } width={ height }>\n    <circle cx={ height / 2 } cy={ height / 2 } r={ height / 2 } fill=\"#ecebeb\" />\n  </svg>\n);\n\nIconPlaceholder.propTypes = {\n  height: PropTypes.number\n};\n\nexport const Logo = (props) => {\n  const { size, image, alt, className } = props;\n\n  const style = {\n    height: size,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  };\n  // use inline css so we can set size\n  return (\n    <div className={ className } style={ style }>\n      { image ?\n        <img\n          style={ { objectFit: 'contain', maxHeight: size } }\n          src={ image }\n          alt={ alt }\n        /> :  <IconPlaceholder/> }\n    </div>\n  );\n};\n\nLogo.propTypes = {\n  size: PropTypes.string,\n  image: PropTypes.string,\n  alt: PropTypes.string,\n  className: PropTypes.any\n};\nexport default Logo;\n\n","import { createBrowserHistory } from 'history';\n\nconst pathName = window.location.pathname.split('/');\npathName.shift();\n\nlet prefix = '/';\nif (pathName[0] === 'beta') {\n  prefix = `/${pathName.shift()}/`;\n}\n\n/**\n * Make sure that the [1] fragment is present in the pathname.\n * Otherwise we could end up with /undefined/ which will be transformed by the router to //\n */\nconst basename = `${prefix}${pathName[0]}/${pathName[1] ? pathName[1] : ''}`;\n\nconst appHistory = createBrowserHistory({\n  basename\n});\n\nexport const release = prefix;\nexport default appHistory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../App.scss';\nimport {\n  Card,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Title\n} from '@patternfly/react-core';\nimport { global_danger_color_200 } from '@patternfly/react-tokens';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons/dist/js/icons/exclamation-circle-icon';\n\nconst Br = () => <br />;\n\nconst ErrorCard = () => {\n  const intl = useIntl();\n  return (\n    <Card className='ins-c-dashboard__card'>\n      <EmptyState variant={ 'full' } className='ins-c-dashboard__error-state'>\n        <div>\n          <EmptyStateIcon\n            icon={ ExclamationCircleIcon }\n            color={ global_danger_color_200.value }\n          />\n        </div>\n        <Title headingLevel=\"h2\" size=\"md\"> { intl.formatMessage(messages.errorStateTitle) } </Title>\n        <EmptyStateBody className='ins-c-dashboard__error-state--body'>\n          { intl.formatMessage(messages.errorStateDescription, { supportLink: <a href={ 'https://access.redhat.com/support' }>Red Hat support</a>,\n            statusLink: <a href={ 'https://status.redhat.com' }> status</a>, br: Br }) }\n        </EmptyStateBody>\n      </EmptyState>\n    </Card>\n  );\n};\n\nErrorCard.propTypes = {\n  appName: PropTypes.string\n};\n\nexport default ErrorCard;\n","import React, { Fragment, useContext, useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Bullseye,\n  Button,\n  Card,\n  CardBody,\n  CardTitle, Divider,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  FlexItem,\n  Grid,\n  GridItem, Label, Level, LevelItem,\n  Spinner,\n  Stack,\n  StackItem,\n  Text, TextContent, TextVariants,\n  Title, Popover, SplitItem, Split\n} from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport { fetchCollection, fetchCollections, fetchPartners, fetchSyncCollections } from '../../redux/actions/hub-actions';\nimport UserContext from '../../user-context';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { contentCounts } from './content-counts';\nimport { Logo } from './logo';\nimport { release } from '../../utilities/app-history';\nimport ErrorCard from '../shared/error-card';\nimport OutlinedQuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\n\nconst initialState = {\n  isFetching: true\n};\n\nconst hubState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst HubCard = () => {\n  const [{ isFetching }, stateDispatch ] = useReducer(hubState, initialState);\n\n  const { isError, collection, collections, partners } = useSelector(\n    ({\n      hubReducer: {\n        isError,\n        collection,\n        collections,\n        partners\n      }\n    }) => ({ isError, collection, collections, partners })\n  );\n\n  const {\n    userIdentity\n  } = useContext(UserContext);\n\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  useEffect(() => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    Promise.all([ dispatch(fetchCollections()), dispatch(fetchPartners()), dispatch(fetchSyncCollections(userIdentity?.identity?.account_number)) ])\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  useEffect(() => {\n    if (collections?.meta?.count > 0) {\n      const d = new Date();\n      const day = d.getDate();\n      const count = collections?.meta?.count;\n      stateDispatch({ type: 'setFetching', payload: true });\n      dispatch(fetchCollection(count <= day ? count : day - 1)).then(() =>\n        stateDispatch({ type: 'setFetching', payload: false }));\n    }\n  }, [ collections ]);\n\n  const renderHubInfo = () => (\n    <React.Fragment>\n      <Text>\n        { intl.formatMessage(messages.hubCardDescription) }\n      </Text>\n      <br/>\n\n      <DescriptionList isHorizontal isAutoFit autoFitModifier={ { md: '100px', lg: '150px', xl: '200px', '2xl': '300px' } }>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            { partners?.meta?.count }\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            <Button\n              component='a'\n              variant='link'\n              href={ `${release}ansible/automation-hub/partners` }>\n              { intl.formatMessage(messages.partners) }\n            </Button>\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            { collections?.meta?.count }\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            <Button\n              component='a'\n              variant='link'\n              href={ `${release}ansible/automation-hub` }>\n              { intl.formatMessage(messages.collections) }\n            </Button>\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            { collections?.meta?.count }\n          </DescriptionListTerm>\n          <DescriptionListDescription className=\"padded_text\">\n            <Level hasGutter>\n              <LevelItem>\n                <div>\n                  { intl.formatMessage(messages.syncCollections) }\n                </div>\n              </LevelItem>\n              <LevelItem>\n                <Popover\n                  headerContent={ <div>{ intl.formatMessage(messages.syncCollections) }</div> }\n                  bodyContent={ <div>{ intl.formatMessage(messages.syncCollectionsTooltip) }</div> }\n                >\n                  <div>\n                    <OutlinedQuestionCircleIcon />\n                  </div>\n                </Popover>\n              </LevelItem>\n            </Level>\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n    </React.Fragment>\n  );\n\n  const renderHubFeaturedCollection = () => {\n    const featuredCollection = collection?.data ? collection?.data[0] : null;\n\n    const content = featuredCollection ? contentCounts(\n      featuredCollection.latest_version?.metadata?.contents\n    ) : undefined;\n    return (\n      <Fragment>\n        <Title headingLevel=\"h4\">\n          { intl.formatMessage(messages.hubCardFeaturedCollectionTitle) }\n        </Title>\n        <br/>\n        {  featuredCollection &&\n        <Flex direction={ { default: 'column' } }>\n          <FlexItem>\n            <Level hasGutter=\"sm\">\n              <LevelItem>\n                <Logo\n                  alt={ featuredCollection?.namespace?.company + ' logo' }\n                  image={ featuredCollection?.namespace.avatar_url }\n                  size='50px'\n                />\n              </LevelItem>\n              <LevelItem>\n                <Label>Certified</Label>\n              </LevelItem>\n            </Level>\n          </FlexItem>\n          <FlexItem>\n            <Split hasGutter=\"sm\">\n              <SplitItem>\n                <Button\n                  component='a'\n                  variant='link'\n                  className=\"pf-u-p-0\"\n                  href={ `${release}ansible/automation-hub/repo/published/${featuredCollection?.namespace?.name}/` +\n                  `${featuredCollection?.latest_version?.name || featuredCollection?.name}` }>\n                  { featuredCollection?.latest_version?.name || featuredCollection?.name }\n                </Button>\n              </SplitItem>\n              <SplitItem>\n                <Text component={ TextVariants.small }> Provided by { featuredCollection?.namespace?.company\n                  || featuredCollection?.namespace?.name }</Text>\n              </SplitItem>\n            </Split>\n          </FlexItem>\n          <FlexItem>\n            <TextContent>\n              <Text component={ TextVariants.p }>\n                { featuredCollection?.latest_version?.metadata?.description }\n              </Text>\n            </TextContent>\n          </FlexItem>\n          <FlexItem>\n            <Grid hasGutter=\"md\" >\n              <GridItem span=\"4\">\n                { content?.modules || '0' }\n              </GridItem>\n              <GridItem span=\"4\">\n                { content?.roles || 0 }\n              </GridItem>\n              <GridItem span=\"4\">\n                { content?.plugins || 0 }\n              </GridItem>\n              <GridItem span=\"4\">\n                <TextContent>\n                  <Text component={ TextVariants.small }>\n                    { intl.formatMessage(messages.modules) }\n                  </Text>\n                </TextContent>\n              </GridItem>\n              <GridItem span=\"4\">\n                <TextContent>\n                  <Text component={ TextVariants.small }>\n                    { intl.formatMessage(messages.roles) }\n                  </Text>\n                </TextContent>\n              </GridItem>\n              <GridItem span=\"4\">\n                <TextContent>\n                  <Text component={ TextVariants.small }>\n                    { intl.formatMessage(messages.plugins) }\n                  </Text>\n                </TextContent>\n              </GridItem>\n            </Grid>\n          </FlexItem>\n        </Flex> }\n      </Fragment>);\n  };\n\n  const renderHubOther = () => {\n    return (\n      <Stack hasGutter=\"lg\">\n        <StackItem>\n          <Title headingLevel=\"h4\">\n            { intl.formatMessage(messages.hubCardCertifiedCollectionTitle) }\n          </Title>\n        </StackItem>\n        <StackItem isFilled>\n          <Text>\n            { intl.formatMessage(messages.hubCardCertifiedCollectionDescription) }\n          </Text>\n        </StackItem>\n        <StackItem>\n          <Bullseye>\n            <Button\n              component='a'\n              variant='link'\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={ `https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/1.2/html` +\n              `/managing_red_hat_certified_and_ansible_galaxy_collections_in_automation_hub/index` }>\n              { intl.formatMessage(messages.learnMoreButton) }&nbsp;\n              <ExternalLinkAltIcon />\n            </Button>\n          </Bullseye>\n        </StackItem>\n      </Stack>);\n  };\n\n  const renderHubCards = () => {\n    if (isError) {\n      return <ErrorCard/>;\n    }\n\n    if (isFetching) {\n      return (\n        <Section style={ { backgroundColor: 'white', minHeight: '100%' } }>\n          <Bullseye>\n            <Spinner isSVG />\n          </Bullseye>\n        </Section>\n      );\n    }\n    else {\n      return (\n        <Flex className=\"automation-hub_card\" >\n          <FlexItem>\n            { renderHubInfo() }\n          </FlexItem>\n          <Divider/>\n          <FlexItem>\n            { renderHubFeaturedCollection() }\n          </FlexItem>\n          <Divider/>\n          <FlexItem>\n            { renderHubOther() }\n          </FlexItem>\n        </Flex>\n      );\n    }\n  };\n\n  return (\n    <Fragment>\n      <Card className='ins-c-dashboard__card'>\n        <CardTitle>\n          <Title headingLevel=\"h3\">\n            { intl.formatMessage(messages.hubTitle) }\n          </Title>\n        </CardTitle>\n        <CardBody>\n          { renderHubCards() }\n        </CardBody>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default HubCard;\n","/* eslint camelcase: 0 */\nimport { getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE, CATALOG_INVENTORY_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\n\nconst axiosInstance = getAxiosInstance();\nconst { post } = getGraphqlInstance();\n\nconst sourcesQuery = `\nquery {\n  application_types (filter: { name: \"/insights/platform/catalog\" }) {\n    id\n    name\n    sources {\n      id\n      name\n      source_type_id\n    }\n  }\n}`;\n\nconst getSourcesDetails = (\n  sourceIds\n) => {\n  return axiosInstance.get(\n    `${CATALOG_INVENTORY_API_BASE}/sources?limit=${sourceIds.length ||\n    defaultSettings.limit}${sourceIds.length ? '&' : ''}${sourceIds\n    .map((sourceId) => `filter[id][]=${sourceId}`)\n    .join('&')}`\n  );\n};\n\nexport const getPlatforms = () =>\n  post(`${SOURCES_API_BASE}/graphql`, { query: sourcesQuery })\n  .then(({ data: { application_types }}) => application_types)\n  .then(([{ sources }]) => {\n    return getSourcesDetails(sources.map((source) => source.id)).then(\n      (sourceDetails) => {\n        return sources.map((source) => ({\n          ...source,\n          ...sourceDetails.data.find(\n            (sourceDetail) => sourceDetail.id === source.id\n          )\n        }));\n      }\n    );\n  });\n\nconst getOrderItems = (orderIds) => {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items?limit=${\n      orderIds.length * 3 || defaultSettings.limit\n    }${orderIds.length ? '&' : ''}${orderIds\n    .map((orderId) => `filter[order_id][]=${orderId}`)\n    .join('&')}`\n  );\n};\n\nconst getOrderPortfolioItems = (itemIds) => {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items?${itemIds\n    .map((itemId) => `filter[id][]=${itemId}`)\n    .join('&')}`\n  );\n};\n\nexport const getOrders = () => {\n  return axiosInstance\n  .get(\n    `${CATALOG_API_BASE}/orders?&limit=2`\n  ) // eslint-disable-line max-len\n  .then((orders) =>\n    getOrderItems(orders.data.map(({ id }) => id)).then((orderItems) =>\n      getOrderPortfolioItems(\n        orderItems.data.map(({ portfolio_item_id }) => portfolio_item_id)\n      ).then((portfolioItems) => {\n        return {\n          portfolioItems,\n          ...orders,\n          data: orders.data.map((order) => ({\n            ...order,\n            orderItems: orderItems.data.filter(\n              ({ order_id }) => order_id === order.id\n            )\n          }))\n        };\n      })\n    )\n  );\n};\n\nexport const listPortfolios = (limit = 1) => {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios?limit=${limit}`);\n};\n\nexport const listPortfolioItems = (\n  limit = 1\n) => {\n  return axiosInstance\n  .get(\n    `${CATALOG_API_BASE}/portfolio_items?sort_by=created_at:desc&limit=${limit}`\n  )\n  .then(\n    (portfolioItems) => {\n      const portfolioReference = portfolioItems.data.reduce(\n        (acc, curr, index) =>\n          curr.portfolio_id\n            ? {\n              ...acc,\n              [curr.portfolio_id]: acc[curr.portfolio_id]\n                ? [ ...acc[curr.portfolio_id], index ]\n                : [ index ]\n            }\n            : acc,\n        {}\n      );\n      return axiosInstance\n      .get(\n        `${CATALOG_API_BASE}/portfolios?${Object.keys(portfolioReference)\n        .map((id) => `filter[id][]=${id}`)\n        .join('&')}`\n      )\n      .then(({ data }) => ({\n        portfolioItems,\n        portfolioReference,\n        portfolios: data\n      }));\n    }\n  )\n  .then(({ portfolioItems, portfolioReference, portfolios }) => {\n    portfolios.forEach(\n      ({ id, name }) =>\n        id &&\n          portfolioReference[id] &&\n          portfolioReference[id].forEach((portfolioItemIndex) => {\n            portfolioItems.data[portfolioItemIndex].portfolioName = name;\n          })\n    );\n    return portfolioItems;\n  });\n};\n","import * as ActionTypes from '../action-types';\nimport * as CatalogHelper from '../../helpers/catalog/catalog-helper';\n\nconst setCatalogAvailability = (dispatch, value = true) => {\n  return dispatch({\n    type: ActionTypes.SET_CATALOG_AVAILABILITY,\n    payload: value\n  });\n};\n\nconst setCatalogError = (dispatch, value = true) => {\n  return dispatch({\n    type: ActionTypes.SET_CATALOG_ERROR,\n    payload: value\n  });\n};\n\nexport const fetchOrders = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_ORDERS,\n    payload: CatalogHelper.getOrders().catch((err) => {\n      if (err.status === 404) {\n        setCatalogAvailability(dispatch, false);\n      }\n      else {\n        setCatalogError(dispatch, true);\n      }\n    })\n  });\n};\n\nexport const fetchPortfolios = (options) => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_PORTFOLIOS,\n    payload: CatalogHelper.listPortfolios(options).catch((err) => {\n      if (err.status === 404) {\n        setCatalogAvailability(dispatch, false);\n      } else {\n        setCatalogError(dispatch, true);\n      }\n    })\n  });\n};\n\nexport const fetchPortfolioItems = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_PORTFOLIO_ITEMS,\n    payload: CatalogHelper.listPortfolioItems().catch((err) => {\n      if (err.status === 404) {\n        setCatalogAvailability(dispatch, false);\n      }\n      else {\n        setCatalogError(dispatch, true);\n      }\n    })\n  });\n};\n\nexport const fetchPlatforms = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_PLATFORMS,\n    payload: CatalogHelper.getPlatforms().catch((err) => {\n      if (err.status === 404) {\n        setCatalogAvailability(dispatch, false);\n      }\n      else {\n        setCatalogError(dispatch, true);\n      }\n    })\n  });\n};\n\n","import styled from 'styled-components';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nconst StyledLazyLoadImage = styled(LazyLoadImage)`\n  height: ${({ height, hidden }) => (hidden ? '0px' : `${height}px` || '40px')};\n  display: ${({ hidden }) => (hidden ? 'none' : 'inherit')};\n  float: ${({ hidden }) => (hidden ? 'left' : 'inherit')};\n  width: ${({ hidden }) => (hidden ? 0 : 'inherit')};\n`;\n\nexport default StyledLazyLoadImage;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { IconPlaceholder } from './loader-placeholders';\nimport StyledLazyLoadImage from './lazy-load-image';\n\nconst CardIconContainer = styled.div`\n  display: inline-block;\n  height: ${({ height }) => `${height}px`};\n`;\n\nconst CardIcon = ({\n  src,\n  height = 40\n}) => {\n  const [ isLoaded, setLoaded ] = useState(false);\n  const [ isUnknown, setUnknown ] = useState(false);\n\n  const defaultIcon = '/apps/frontend-assets/platform-logos/ansible-automation-platform.svg';\n\n  return (\n    <CardIconContainer height={ height }>\n      { !isLoaded && <IconPlaceholder height={ height } /> }\n      <StyledLazyLoadImage\n        threshold={ 2000 }\n        delayTime={ 0 }\n        hidden={ !isLoaded }\n        height={ isLoaded ? height : 0 }\n        onError={ () => setUnknown(true) }\n        onLoad={ () => setLoaded(true) }\n        src={ !src || isUnknown ? defaultIcon : src }\n      />\n    </CardIconContainer>\n  );\n};\n\nexport default CardIcon;\n","import React from 'react';\nimport {\n  ExclamationCircleIcon,\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n  ClockIcon,\n  PlusCircleIcon\n} from '@patternfly/react-icons';\n\nconst orderStatusMapper = {\n  Completed: { icon: <CheckCircleIcon />, color: 'green' },\n  'Approval Pending': {\n    icon: <ClockIcon />,\n    color: 'blue'\n  },\n  Ordered: { icon: <PlusCircleIcon />, color: 'grey' },\n  Failed: { icon: <ExclamationCircleIcon />, color: 'red' },\n  Canceled: { icon: <ExclamationTriangleIcon />, color: 'orange' },\n  Created: { icon: <PlusCircleIcon />, color: 'grey' },\n  Approved: { icon: <CheckCircleIcon />, color: 'green' },\n  Denied: { icon: <ExclamationCircleIcon />, color: 'red' },\n  Error: { icon: <ExclamationCircleIcon />, color: 'red' },\n  Undecided: {\n    icon: <ClockIcon />,\n    color: 'blue'\n  },\n  Unknown: { icon: <ExclamationTriangleIcon />, color: 'grey' }\n};\n\nexport default orderStatusMapper;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nexport const scrollToTop = () =>\n  document.getElementById('root')?.scrollTo({\n    behavior: 'smooth',\n    top: 0,\n    left: 0\n  });\n\nexport const TimeAgo = ({ date }) => (\n  <span key={ date }>\n    <DateFormat date={ date } type=\"relative\"/>\n  </span>\n);\n\nconst sizes = [ 'B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB' ];\nexport const readableBytes = (bytes) => {\n  if (bytes === 0) {\n    return 'O B';\n  }\n\n  const i = Math.floor(Math.log(bytes) / Math.log(1024));\n\n  return `${Number((bytes / Math.pow(1024, i)).toFixed(2)) * 1} ${sizes[i]}`;\n};\n\nexport const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../App.scss';\nimport {\n  Bullseye,\n  Card,\n  CardBody,\n  CardTitle,\n  Stack,\n  StackItem,\n  Title\n} from '@patternfly/react-core';\nimport Truncate from 'react-truncate';\n\nconst ConfigureCard = ({ title, description, renderButtons }) => {\n  return (\n    <Card className='config_card' >\n      <CardTitle>\n        <Title headingLevel=\"h3\">\n          { title }\n        </Title>\n      </CardTitle>\n      <CardBody className={ 'pf-u-mb-0-pb-0' }>\n        <Stack>\n          <StackItem isFilled>\n            <Truncate lines={ 3 } ellipsis={ <span>... </span> }>\n              { description }\n            </Truncate>\n          </StackItem>\n          <StackItem style={ { marginBottom: 0, paddingBottom: 0 } }>\n            <Bullseye>\n              { renderButtons() }\n            </Bullseye>\n          </StackItem>\n        </Stack>\n      </CardBody>\n    </Card>\n  );\n};\n\nConfigureCard.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  renderButtons: PropTypes.func\n};\n\nexport default ConfigureCard;\n","import React from 'react';\nimport { Button, Flex, FlexItem } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport ConfigureCard from '../shared/configure-card';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\n\nconst renderCatalogConfigButton = (intl) => (\n  <React.Fragment>\n    <Flex>\n      <FlexItem>\n        <Button\n          component='a'\n          variant='link'\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={ `https://access.redhat.com/documentation/en-us/` +\n          `red_hat_ansible_automation_platform/1.2/html/getting_started_with_automation_services_catalog/index` }>\n          { intl.formatMessage(messages.configureCatalogLink) }&nbsp;\n          <ExternalLinkAltIcon />\n        </Button>\n      </FlexItem>\n    </Flex>\n  </React.Fragment>\n);\n\nconst ConfigureCatalogCard = () => {\n  const intl = useIntl();\n  return <React.Fragment>\n    <ConfigureCard\n      title={ intl.formatMessage(messages.configureCatalogTitle) }\n      description={ intl.formatMessage(messages.configureCatalogDescription) }\n      renderButtons={ () => renderCatalogConfigButton(intl) }/>\n  </React.Fragment>;\n};\n\nexport default ConfigureCatalogCard;\n","import React, { Fragment, useContext, useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Badge,\n  Bullseye,\n  Button,\n  Card,\n  CardBody,\n  CardTitle, Divider,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  FlexItem,\n  Grid,\n  GridItem, Label,\n  Spinner,\n  Text, TextContent, TextVariants,\n  Title, Split, SplitItem\n} from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport {\n  fetchOrders, fetchPlatforms,\n  fetchPortfolioItems,\n  fetchPortfolios\n} from '../../redux/actions/catalog-actions';\nimport UserContext from '../../user-context';\nimport { release } from '../../utilities/app-history';\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport CardIcon from '../shared/card-icon';\nimport orderStatusMapper from '../shared/order-status-mapper';\nimport { TimeAgo } from '../../helpers/shared/helpers';\nimport ErrorCard from '../shared/error-card';\nimport ConfigureCatalogCard from './configure-catalog_card';\n\nconst initialState = {\n  isFetching: true\n};\n\nconst catalogState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst CatalogCard = () => {\n  const [{ isFetching }, stateDispatch ] = useReducer(catalogState, initialState);\n\n  const { isCatalogAvailable, isError, portfolioItems, portfolios, sources, orders } = useSelector(\n    ({\n      catalogReducer: {\n        isCatalogAvailable,\n        isError,\n        portfolioItems,\n        portfolios,\n        sources,\n        orders\n      }\n    }) => ({ isCatalogAvailable, isError, portfolioItems, portfolios, sources, orders })\n  );\n\n  const {\n    permissions\n  } = useContext(UserContext);\n\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  const isCatalogAdmin = permissions.find((permission) => permission.permission === 'catalog:portfolios:create');\n\n  useEffect(() => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    const promiseList = [ fetchPortfolioItems, fetchPortfolios, fetchOrders ];\n    if (isCatalogAdmin) {\n      promiseList.push(fetchPlatforms);\n    }\n\n    return Promise.all(promiseList.map(fn => dispatch(fn()))).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const renderCatalogInfo = () => (\n    <React.Fragment>\n      <Text>\n        { intl.formatMessage(messages.catalogCardDescription) }\n      </Text>\n      <br/>\n      <DescriptionList isHorizontal>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            { portfolioItems?.meta?.count }\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            <Button\n              component='a'\n              variant='link'\n              href={ `${release}ansible/catalog/products` }>\n              { intl.formatMessage(messages.products) }\n            </Button>\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            { portfolios?.meta?.count }\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            <Button\n              component='a'\n              variant='link'\n              href={ `${release}ansible/catalog/portfolios` }>\n              { intl.formatMessage(messages.portfolios) }\n            </Button>\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        { isCatalogAdmin &&\n        <Fragment>\n          <DescriptionListGroup>\n            <DescriptionListTerm>\n              { sources?.length }\n            </DescriptionListTerm>\n            <DescriptionListDescription>\n              <Button variant='link'\n                component='a'\n                href={ `${release}ansible/catalog/platforms` }>\n                { intl.formatMessage(messages.platforms) }\n              </Button>\n            </DescriptionListDescription>\n          </DescriptionListGroup>\n        </Fragment> }\n      </DescriptionList>\n    </React.Fragment>\n  );\n\n  const renderCatalogFeaturedProduct = () => {\n    const featuredProduct = portfolioItems?.data ? portfolioItems?.data[0] : null;\n    return (\n      <Fragment>\n        <Title headingLevel=\"h4\">\n          { intl.formatMessage(messages.catalogCardFeaturedProduct) }\n        </Title>\n        <br/>\n        {  featuredProduct &&\n          <Flex direction={ { default: 'column' } }>\n            <FlexItem>\n              <CardIcon\n                height={ 40 }\n                src={ `${CATALOG_API_BASE}/portfolio_items/${featuredProduct.id}/icon` }\n              />\n            </FlexItem>\n            <FlexItem>\n              <Button\n                className=\"pf-u-pl-0 pf-u-pt-0\"\n                component='a'\n                variant='link'\n                href={ `${release}ansible/catalog/products?portfolio=${featuredProduct?.portfolio_id}` +\n                `&portfolio-item=${featuredProduct.id}&source=${featuredProduct.service_offering_source_ref}` }>\n                { featuredProduct?.name }\n              </Button>\n            </FlexItem>\n            <FlexItem>\n              <TextContent>\n                <Text component={ TextVariants.p }>\n                  { featuredProduct?.description }\n                </Text>\n              </TextContent>\n            </FlexItem>\n          </Flex> }\n      </Fragment>);\n  };\n\n  const orderRow = (order) => {\n    return <Grid hasGutter=\"md\">\n      <GridItem span={ 9 } className=\"pf-u-pt-sm\">\n        <Split>\n          <SplitItem>\n            <Button\n              className=\"pf-u-pl-0 pf-u-pt-0\"\n              component='a'\n              variant='link'\n              href={ `${release}ansible/catalog/orders/${order?.id}` }>\n              { order?.id }\n            </Button>\n          </SplitItem>\n          <SplitItem>\n            <TextContent>\n              <Text component={ TextVariants.p }>\n                { order?.orderItems[0]?.name }\n              </Text>\n            </TextContent>\n          </SplitItem>\n        </Split>\n        <TextContent>\n          <Text component={ TextVariants.small }>Last updated &nbsp;\n            <TimeAgo date={ order?.created_at }/>\n          </Text>\n        </TextContent>\n      </GridItem>\n      <GridItem span={ 3 } className=\"pf-u-pt-sm\">\n        <Label { ...orderStatusMapper[order?.state] } variant=\"outline\">\n          { order?.state }\n        </Label>\n      </GridItem>\n    </Grid>;\n  };\n\n  const renderCatalogOther = () => {\n    return (\n      <Flex direction={ { default: 'column' } }>\n        <FlexItem>\n          <Flex>\n            <FlexItem>\n              <Title headingLevel=\"h4\">\n                { intl.formatMessage(messages.catalogCardLatestOrdersTitle) }\n              </Title>\n            </FlexItem>\n            <FlexItem>\n              <Badge isRead>{ orders?.meta?.count }</Badge>\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n        { orders?.data?.map((order) => (\n          <FlexItem key={ order?.id }>\n            <Flex direction={ { default: 'column' } }>\n              <FlexItem>\n                { orderRow(order) }\n              </FlexItem>\n            </Flex>\n          </FlexItem>)) }\n        <FlexItem>\n          <Bullseye>\n            <Button\n              component='a'\n              variant='link'\n              href={ `${release}ansible/catalog/orders` }>\n              { intl.formatMessage(messages.viewMore) }&nbsp;\n            </Button>\n          </Bullseye>\n        </FlexItem>\n      </Flex>\n    );\n  };\n\n  const renderCatalogCards = () => {\n    if (!isCatalogAvailable) {\n      return <ConfigureCatalogCard/>;\n    }\n\n    if (isError) {\n      return <ErrorCard/>;\n    }\n    else if (isFetching) {\n      return (\n        <Section style={ { backgroundColor: 'white', minHeight: '100%' } }>\n          <Bullseye>\n            <Spinner isSVG />\n          </Bullseye>\n        </Section>\n      );\n    }\n    else {\n      return (\n        <Flex className=\"automation-hub_card\" >\n          <FlexItem>\n            { renderCatalogInfo() }\n          </FlexItem>\n          <Divider/>\n          <FlexItem>\n            { renderCatalogFeaturedProduct() }\n          </FlexItem>\n          <Divider/>\n          <FlexItem>\n            { renderCatalogOther() }\n          </FlexItem>\n        </Flex>\n      );\n    }\n  };\n\n  return (\n    <Fragment>\n      <Card className='ins-c-dashboard__card'>\n        <CardTitle>\n          <Title headingLevel=\"h3\">\n            { intl.formatMessage(messages.catalogTitle) }\n          </Title>\n        </CardTitle>\n        <CardBody>\n          { renderCatalogCards() }\n        </CardBody>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default CatalogCard;\n","/* eslint camelcase: 0 */\nimport { stringify } from 'query-string';\nimport { getAxiosInstance } from '../shared/user-login';\n/* v0 endpoints */\nconst clustersEndpoint = `/api/tower-analytics/v0/clusters/`;\nconst notificationsEndpoint = `/api/tower-analytics/v0/notifications/`;\n\n/* v1 endpoints */\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\n\nconst axiosInstance = getAxiosInstance();\nfunction authenticatedFetch(endpoint, options) {\n  return window.insights.chrome.auth.getUser().then(() => axiosInstance.get(endpoint, options));\n}\n\nexport const getJobsData = () => {\n  const params = {\n    status: [ 'successful', 'failed' ],\n    quick_date_range: 'last_30_days',\n    job_type: [ 'workflowjob', 'job' ],\n    group_by_time: true,\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    only_root_workflows_and_standalone_jobs: false,\n    limit: 1,\n    offset: 0\n  };\n  const qs = stringify(params);\n  const url = new URL(jobExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params)\n  });\n};\n\n// v0 endpoints used in Notifications.js\nexport const getClusters = () => {\n  return authenticatedFetch(clustersEndpoint);\n};\n\nexport const getNotifications = (severity = 'error') => {\n  const url = new URL(notificationsEndpoint, window.location.origin);\n  url.searchParams.append('severity', severity);\n  return authenticatedFetch(url);\n};\n","import * as ActionTypes from '../action-types';\nimport * as AnalyticsHelper from '../../helpers/analytics/analytics-helper';\n\nconst setAnalyticsAvailability = (dispatch, value = true) => {\n  return dispatch({\n    type: ActionTypes.SET_ANALYTICS_AVAILABILITY,\n    payload: value\n  });\n};\n\nconst setAnalyticsError = (dispatch, value = true) => {\n  return dispatch({\n    type: ActionTypes.SET_ANALYTICS_ERROR,\n    payload: value\n  });\n};\n\nexport const fetchClusters = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_CLUSTERS,\n    payload: AnalyticsHelper.getClusters().catch((err) => {\n      if (err.status === 404) {\n        setAnalyticsAvailability(dispatch, false);\n      }\n      else {\n        setAnalyticsError(dispatch, true);\n      }}\n    )\n  });\n};\n\nexport const fetchWarningNotifications = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_WARNING_NOTIFICATIONS,\n    payload: AnalyticsHelper.getNotifications('warning').catch((err) => {\n      if (err.status === 404) {\n        setAnalyticsAvailability(dispatch, false);\n      }\n      else {\n        setAnalyticsError(dispatch, true);\n      }}\n    )\n  });\n};\n\nexport const fetchErrorNotifications = () => (dispatch) => {\n  const load = AnalyticsHelper.getNotifications('error').catch((err) => {\n    if (err.status === 404) {\n      setAnalyticsAvailability(dispatch, false);\n    }\n    else {\n      setAnalyticsError(dispatch, true);\n    }}\n  );\n  return dispatch({\n    type: ActionTypes.FETCH_ERROR_NOTIFICATIONS,\n    payload: load\n  });\n};\n\nexport const fetchJobsData = () => (dispatch) => {\n  return dispatch({\n    type: ActionTypes.FETCH_JOBS,\n    payload: AnalyticsHelper.getJobsData().catch((err) => {\n      if (err.status === 404) {\n        setAnalyticsAvailability(dispatch, false);\n      }\n      else {\n        setAnalyticsError(dispatch, true);\n      }}\n    )\n  });\n};\n","import React, { useEffect, useState } from 'react';\nimport { Chart, ChartAxis, ChartBar, ChartStack, ChartTooltip } from '@patternfly/react-charts';\n\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_red_300 from '@patternfly/react-tokens/dist/js/chart_color_red_300';\n\nconst JobsChart = (data) => {\n  const [ width, setWidth ] = useState(window.innerWidth * 0.7);\n  const containerRef = React.createRef();\n  useEffect(() => {\n    if (containerRef.current && containerRef.current.clientWidth) {\n      setWidth(window.innerWidth * 0.7);\n    }\n  }, []);\n\n  const bars = [];\n  data?.items?.map((item) => {\n    const date = new Date(item.created_date);\n    const x = `${date.getMonth()}/${date.getDate()}`;\n    return bars.push({ x, y: item });\n  });\n\n  const renderSuccessfulJobs = () => {\n    const successBars = bars.map((tick) => {\n      return {\n        x: tick.x,\n        y: tick.y.successful_count,\n        name: 'Successful',\n        label: `${tick.x} Successful: ${tick.y.successful_count}`\n      };\n    });\n    return <ChartBar data={ successBars }\n      style={ { fill: chart_color_green_400.value } }\n      labelComponent={ <ChartTooltip constrainToVisibleArea /> } />;\n  };\n\n  const renderFailedJobs = () => {\n    const failBars = bars.map((tick) => {\n      return {\n        x: tick.x,\n        y: tick.y.failed_count,\n        name: 'Failed',\n        label: `${tick.x} Successful: ${tick.y.failed_count}`\n      };\n    });\n    return <ChartBar data={ failBars }\n      style={ { fill: chart_color_red_300.value } }\n      labelComponent={ <ChartTooltip constrainToVisibleArea /> } />;\n  };\n\n  const getTickValues = () => {\n    const tickValues = [];\n    for (let i = 0; i < bars.length; i++) {\n      const date = new Date(bars[i].y.created_date);\n      tickValues.push(`${date.getMonth()}/${date.getDate()}`);\n    }\n\n    return tickValues;\n  };\n\n  const colorScaleArray = [\n    chart_color_red_300.value,\n    chart_color_green_400.value\n  ];\n  return (\n\n    <div ref={ containerRef } style={ { height: '225px', width } }>\n      <Chart\n        ariaDesc=\"Jobs across clusters\"\n        ariaTitle=\"Jobs across clusters\"\n        domainPadding={ { x: [ 30, 25 ]} }\n        barRatio={ 1 }\n        height={ 225 }\n        width={ width }\n        padding={ {\n          bottom: 40,\n          left: 50,\n          right: 20,\n          top: 20\n        } }\n      >\n        <ChartAxis tickValues={ getTickValues() } fixLabelOverlap />\n        <ChartAxis dependentAxis showGrid />\n        <ChartStack colorScale={ colorScaleArray } domainPadding={ { x: [ 10, 2 ]} }>\n          { renderFailedJobs() }\n          { renderSuccessfulJobs() }\n        </ChartStack>\n      </Chart>\n    </div>);\n};\n\nexport default JobsChart;\n","import React from 'react';\nimport { Button, Flex, FlexItem } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport ConfigureCard from '../shared/configure-card';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\n\nconst renderAnalyticsConfigButton = (intl) => (\n  <React.Fragment>\n    <Flex>\n      <FlexItem>\n        <Button\n          component='a'\n          variant='link'\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={ `https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/` +\n          `1.2/html/getting_started_with_automation_services_catalog/index` }>\n          { intl.formatMessage(messages.configureAnalyticsLink) }&nbsp;\n          <ExternalLinkAltIcon />\n        </Button>\n      </FlexItem>\n    </Flex>\n  </React.Fragment>\n);\n\nconst ConfigureAnalyticsCard = () => {\n  const intl = useIntl();\n  return (<ConfigureCard\n    title={ intl.formatMessage(messages.configureAnalyticsTitle) }\n    description={ intl.formatMessage(messages.configureAnalyticsDescription) }\n    renderButtons={ () => renderAnalyticsConfigButton(intl) }/>);\n};\n\nexport default ConfigureAnalyticsCard;\n","import React, { Fragment, useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Bullseye,\n  Card,\n  CardBody,\n  CardTitle, Divider,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  FlexItem,\n  Label,\n  Spinner,\n  Text,\n  Title, Button, TextContent, TextVariants, Stack, StackItem, SplitItem, Split\n} from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport { fetchClusters, fetchErrorNotifications, fetchWarningNotifications, fetchJobsData } from '../../redux/actions/analytics-actions';\nimport InfoCircleIcon from '@patternfly/react-icons/dist/js/icons/info-circle-icon';\nimport WarningTriangleIcon from '@patternfly/react-icons/dist/js/icons/warning-triangle-icon';\nimport JobsChart from './jobs-chart';\nimport { release } from '../../utilities/app-history';\nimport ConfigureAnalyticsCard from './configure-analytics-card';\nimport ErrorCard from '../shared/error-card';\n\nconst initialState = {\n  isFetching: true\n};\n\nconst analyticsState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst AnalyticsCard = () => {\n  const [{ isFetching }, stateDispatch ] = useReducer(analyticsState, initialState);\n\n  const { isAnalyticsAvailable, isError, clusters, errorNotifications, warningNotifications, jobsData } = useSelector(\n    ({\n      analyticsReducer: {\n        isAnalyticsAvailable,\n        isError,\n        clusters,\n        errorNotifications,\n        warningNotifications,\n        jobsData\n      }\n    }) => ({ isAnalyticsAvailable, isError, clusters, errorNotifications, warningNotifications, jobsData })\n  );\n\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  useEffect(() => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    Promise.all([ dispatch(fetchClusters()), dispatch(fetchErrorNotifications()), dispatch(fetchWarningNotifications()), dispatch(fetchJobsData()) ])\n    .then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const renderAnalyticsNotifications = () => {\n    return <React.Fragment>\n      <Title headingLevel=\"h4\">\n        { intl.formatMessage(messages.analyticsCardNotificationsTitle) }\n      </Title>\n      <br/>\n      <DescriptionList className=\"pf-c-description-list.pf-m-vertical\" columnModifier={ {\n        default: '2Col'\n      } }>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            { errorNotifications?.payload?.meta?.count || 0 }\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            <Label\n              color=\"red\"\n              icon={ <InfoCircleIcon/> }\n              isTruncated\n              href={ `${release}ansible/automation-analytics/notifications` }\n            >\n              { intl.formatMessage(messages.critical) }\n            </Label>\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            { warningNotifications?.payload?.meta?.count || 0 }\n          </DescriptionListTerm>\n          <DescriptionListDescription>\n            <Label\n              color=\"orange\"\n              icon={ <WarningTriangleIcon/> }\n              isTruncated\n              href={ `${release}ansible/automation-analytics/notifications` }\n            >\n              { intl.formatMessage(messages.warning) }\n            </Label>\n          </DescriptionListDescription>\n        </DescriptionListGroup>\n      </DescriptionList>\n    </React.Fragment>;\n  };\n\n  const renderAnalyticsInfo = () => {\n    return (\n      <Fragment>\n        <Flex className=\"automation-analytics_info\">\n          <FlexItem>\n            <Text>\n              { intl.formatMessage(messages.hubCardDescription) }\n            </Text>\n            <br/>\n          </FlexItem>\n          <FlexItem>\n            <Title headingLevel=\"h4\">\n              { intl.formatMessage(messages.clusterTitle) }\n            </Title>\n            <br/>\n            <DescriptionList className=\"pf-c-description-list.pf-m-vertical\" columnModifier={ {\n              default: '1Col'\n            } }>\n              <DescriptionListGroup>\n                <DescriptionListTerm>\n                  { clusters?.payload?.templates?.length || 0 }\n                </DescriptionListTerm>\n                <DescriptionListDescription>\n                  <Button\n                    component='a'\n                    variant='link'\n                    href={ `${release}ansible/clusters` }>\n                    { intl.formatMessage(messages.totalClusters) }\n                  </Button>\n                </DescriptionListDescription>\n              </DescriptionListGroup>\n            </DescriptionList>\n          </FlexItem>\n        </Flex>\n      </Fragment>);\n  };\n\n  const renderAnalyticsOther = () =>\n    <Fragment>\n      <Title headingLevel=\"h4\">\n        { intl.formatMessage(messages.analyticsJobTitle) }\n      </Title>\n      <br/>\n      <Stack direction={ { default: 'column' } }>\n        <StackItem>\n          <Split automation-analytics_other>\n            <SplitItem>\n              <TextContent>\n                <Text style={ { 'writing-mode': 'vertical-lr', paddingBottom: 20,\n                  transform: 'rotate(180deg)' } }>\n                  { intl.formatMessage(messages.jobsAcrossClusters) }\n                </Text>\n              </TextContent>\n            </SplitItem>\n            <SplitItem isFilled>\n              <JobsChart items={ jobsData?.payload?.items }/>\n            </SplitItem>\n          </Split>\n        </StackItem>\n        <StackItem>\n          <Bullseye>\n            <TextContent>\n              <Text component={ TextVariants.small }>\n                { intl.formatMessage(messages.timeDayLegend) }\n              </Text>\n            </TextContent>\n          </Bullseye>\n        </StackItem>\n        <StackItem className=\"pf-u-pt-sm pf-u-pb-0\">\n          <Bullseye>\n            <Button\n              component='a'\n              variant='link'\n              href={ `${release}ansible/insights/job-explorer` }>\n              { intl.formatMessage(messages.jobsExplorer) }\n            </Button>\n          </Bullseye>\n        </StackItem>\n      </Stack>\n    </Fragment>;\n\n  const renderAnalyticsCards = () => {\n    if (isError) {\n      return <ErrorCard/>;\n    }\n    else if (isFetching) {\n      return (\n        <Section style={ { backgroundColor: 'white', minHeight: '100%' } }>\n          <Bullseye>\n            <Spinner isSVG />\n          </Bullseye>\n        </Section>\n      );\n    }\n    else {\n      return (\n        <Flex direction={ { default: 'column' } }>\n          <FlexItem>\n            <Flex className=\"automation-analytics_card\">\n              <FlexItem>\n                { renderAnalyticsInfo() }\n              </FlexItem>\n              <Divider/>\n              <FlexItem>\n                { renderAnalyticsNotifications() }\n              </FlexItem>\n            </Flex>\n          </FlexItem>\n          <FlexItem>\n            <FlexItem>\n              { renderAnalyticsOther() }\n            </FlexItem>\n          </FlexItem>\n        </Flex>\n      );\n    }\n  };\n\n  return (\n    !isAnalyticsAvailable ?\n      <ConfigureAnalyticsCard/> :\n      <Fragment>\n        <Card className='ins-c-dashboard__card'>\n          <CardTitle>\n            <Title headingLevel=\"h3\">\n              { intl.formatMessage(messages.analyticsTitle) }\n            </Title>\n          </CardTitle>\n          <CardBody className=\"pf-u-pb-sm\">\n            { renderAnalyticsCards() }\n          </CardBody>\n        </Card>\n      </Fragment>\n  );\n};\n\nexport default AnalyticsCard;\n","import React from 'react';\nimport DashboardHeader from '../shared/dashboard-header';\nimport { Button, Flex, FlexItem, Grid, GridItem, PageSection, Stack, StackItem } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport ConfigureCard from '../shared/configure-card';\nimport HubCard from '../automation-hub/hub-card';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\n\nconst renderButtons = (intl) => (\n  <React.Fragment>\n    <Flex>\n      <FlexItem>\n        <Button\n          isLarge\n          component='a'\n          variant='primary'\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={ `https://docs.ansible.com/ansible-tower/latest/html/quickinstall/index.html` }>\n          { intl.formatMessage(messages.configureLink) }\n        </Button>\n      </FlexItem>\n    </Flex>\n  </React.Fragment>\n);\n\nconst renderAnalyticsConfigButton = (intl) => (\n  <React.Fragment>\n    <Flex>\n      <FlexItem>\n        <Button\n          component='a'\n          variant='link'\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={ `https://access.redhat.com/documentation/en-us/` +\n          `red_hat_ansible_automation_platform/1.2/html/getting_started_with_automation_services_catalog/index` }>\n          { intl.formatMessage(messages.configureAnalyticsLink) }&nbsp;\n          <ExternalLinkAltIcon />\n        </Button>\n      </FlexItem>\n    </Flex>\n  </React.Fragment>\n);\n\nconst renderCatalogConfigButton = (intl) => (\n  <React.Fragment>\n    <Flex>\n      <FlexItem>\n        <Button\n          component='a'\n          variant='link'\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={ `https://access.redhat.com/documentation/en-us/` +\n          `red_hat_ansible_automation_platform/1.2/html/getting_started_with_automation_services_catalog/index` }>\n          { intl.formatMessage(messages.configureCatalogLink) }&nbsp;\n          <ExternalLinkAltIcon />\n        </Button>\n      </FlexItem>\n    </Flex>\n  </React.Fragment>\n);\n\nconst ConfigureAppPage = () => {\n  const intl = useIntl();\n\n  return <React.Fragment>\n    <DashboardHeader title={ intl.formatMessage(messages.noAppTitle) }\n      description={ intl.formatMessage(messages.configDescription) }\n      renderButtons={ () => renderButtons(intl) } />\n    <PageSection>\n      <Stack hasGutter=\"md\">\n        <StackItem>\n          <Grid hasGutter=\"xl\">\n            <GridItem md={ 6 } sm={ 12 } >\n              <ConfigureCard\n                title={ intl.formatMessage(messages.configureAnalyticsTitle) }\n                description={ intl.formatMessage(messages.configureAnalyticsDescription) }\n                renderButtons={ () => renderAnalyticsConfigButton(intl) }/>\n            </GridItem>\n            <GridItem md={ 6 } sm={ 12 } >\n              <ConfigureCard\n                title={ intl.formatMessage(messages.configureCatalogTitle) }\n                description={ intl.formatMessage(messages.configureCatalogDescription) }\n                renderButtons={ () => renderCatalogConfigButton(intl) }/>\n            </GridItem>\n          </Grid>\n        </StackItem>\n        <StackItem>\n          <HubCard/>\n        </StackItem>\n      </Stack>\n    </PageSection>\n  </React.Fragment>;\n};\n\nexport default ConfigureAppPage;\n","import React from 'react';\nimport DashboardHeader from './dashboard-header';\nimport { Button, Flex, FlexItem } from '@patternfly/react-core';\nimport ArrowRightIcon from '@patternfly/react-icons/dist/js/icons/arrow-right-icon';\nimport messages from '../../messages/messages';\nimport { useIntl } from 'react-intl';\n\nconst renderButtons = (intl) => (\n  <React.Fragment>\n    <Flex>\n      <FlexItem>\n        <Button\n          isLarge\n          component='a'\n          variant='primary'\n          href={ `https://www.redhat.com/en/technologies/management/ansible/try-it` }>\n          { intl.formatMessage(messages.tryItButton) }\n        </Button>\n      </FlexItem>\n      <FlexItem>\n        <Button\n          component='a'\n          isLarge\n          variant='link'\n          target='_blank'\n          rel='noreferrer'\n          href='https://www.redhat.com/en/technologies/management/ansible'>\n          { intl.formatMessage(messages.learnMoreButton) } &nbsp;\n          <ArrowRightIcon />\n        </Button>\n      </FlexItem>\n    </Flex>\n  </React.Fragment>\n);\n\nconst NoAppState = () => {\n  const intl = useIntl();\n\n  return <React.Fragment>\n    <DashboardHeader title={ intl.formatMessage(messages.noAppTitle) }\n      description={ intl.formatMessage(messages.noAppDescription) }\n      renderButtons={ renderButtons } />\n  </React.Fragment>;\n};\n\nexport default NoAppState;\n","import React from 'react';\nimport DashboardHeader from '../shared/dashboard-header';\nimport { PageSection, Stack, StackItem } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport messages from '../../messages/messages';\nimport HubCard from '../automation-hub/hub-card';\nimport CatalogCard from '../catalog/catalog-card';\nimport AnalyticsCard from '../analytics/analytics-card';\nimport { useSelector } from 'react-redux';\nimport ConfigureAppPage from './configure-app-page';\nimport NoAppState from '../shared/no-app-state';\n\nconst PlatformPage = () => {\n  const intl = useIntl();\n  const { isAnalyticsAvailable } = useSelector(\n    ({\n      analyticsReducer: {\n        isAnalyticsAvailable\n      }\n    }) => ({ isAnalyticsAvailable })\n  );\n\n  const { isHubAvailable } = useSelector(\n    ({\n      hubReducer: {\n        isHubAvailable: isHubAvailable\n      }\n    }) => ({ isHubAvailable })\n  );\n\n  const { isCatalogAvailable } = useSelector(\n    ({\n      catalogReducer: {\n        isCatalogAvailable\n      }\n    }) => ({ isCatalogAvailable })\n  );\n\n  if (!isAnalyticsAvailable && !isHubAvailable && !isCatalogAvailable) {\n    return <NoAppState/>;\n  }\n\n  if (isHubAvailable && !isAnalyticsAvailable && !isCatalogAvailable) {\n    return <ConfigureAppPage/>;\n  }\n\n  return <React.Fragment>\n    <DashboardHeader title={ intl.formatMessage(messages.overview) }\n      description={ '' }/>\n    <PageSection>\n      <Stack hasGutter=\"md\">\n        <StackItem>\n          <AnalyticsCard/>\n        </StackItem>\n        <StackItem>\n          <HubCard/>\n        </StackItem>\n        <StackItem>\n          <CatalogCard/>\n        </StackItem>\n      </Stack>\n    </PageSection>\n  </React.Fragment>;\n};\n\nexport default PlatformPage;\n","import React from 'react';\nimport PlatformPage from './platform-page';\n\nconst Dashboard = () => {\n  return <React.Fragment>\n    <PlatformPage />\n  </React.Fragment>;\n};\n\nexport default Dashboard;\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./marketing-banner.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./marketing-banner.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}